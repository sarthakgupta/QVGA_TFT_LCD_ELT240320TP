   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"sine.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	g_pusFixedSineTable:
  23 0000 0000     		.short	0
  24 0002 2403     		.short	804
  25 0004 4806     		.short	1608
  26 0006 6C09     		.short	2412
  27 0008 8F0C     		.short	3215
  28 000a B20F     		.short	4018
  29 000c D512     		.short	4821
  30 000e F615     		.short	5622
  31 0010 1719     		.short	6423
  32 0012 371C     		.short	7223
  33 0014 561F     		.short	8022
  34 0016 7322     		.short	8819
  35 0018 9025     		.short	9616
  36 001a AA28     		.short	10410
  37 001c C42B     		.short	11204
  38 001e DB2E     		.short	11995
  39 0020 F131     		.short	12785
  40 0022 0535     		.short	13573
  41 0024 1738     		.short	14359
  42 0026 263B     		.short	15142
  43 0028 333E     		.short	15923
  44 002a 3E41     		.short	16702
  45 002c 4744     		.short	17479
  46 002e 4D47     		.short	18253
  47 0030 504A     		.short	19024
  48 0032 504D     		.short	19792
  49 0034 4D50     		.short	20557
  50 0036 4753     		.short	21319
  51 0038 3E56     		.short	22078
  52 003a 3159     		.short	22833
  53 003c 225C     		.short	23586
  54 003e 0E5F     		.short	24334
  55 0040 F761     		.short	25079
  56 0042 DC64     		.short	25820
  57 0044 BD67     		.short	26557
  58 0046 9B6A     		.short	27291
  59 0048 746D     		.short	28020
  60 004a 4970     		.short	28745
  61 004c 1973     		.short	29465
  62 004e E575     		.short	30181
  63 0050 AD78     		.short	30893
  64 0052 707B     		.short	31600
  65 0054 2E7E     		.short	32302
  66 0056 E780     		.short	-32537
  67 0058 9C83     		.short	-31844
  68 005a 4B86     		.short	-31157
  69 005c F588     		.short	-30475
  70 005e 9A8B     		.short	-29798
  71 0060 398E     		.short	-29127
  72 0062 D390     		.short	-28461
  73 0064 6893     		.short	-27800
  74 0066 F695     		.short	-27146
  75 0068 7F98     		.short	-26497
  76 006a 029B     		.short	-25854
  77 006c 7F9D     		.short	-25217
  78 006e F69F     		.short	-24586
  79 0070 67A2     		.short	-23961
  80 0072 D2A4     		.short	-23342
  81 0074 36A7     		.short	-22730
  82 0076 94A9     		.short	-22124
  83 0078 EBAB     		.short	-21525
  84 007a 3BAE     		.short	-20933
  85 007c 85B0     		.short	-20347
  86 007e C8B2     		.short	-19768
  87 0080 04B5     		.short	-19196
  88 0082 3AB7     		.short	-18630
  89 0084 68B9     		.short	-18072
  90 0086 8FBB     		.short	-17521
  91 0088 AEBD     		.short	-16978
  92 008a C7BF     		.short	-16441
  93 008c D8C1     		.short	-15912
  94 008e E2C3     		.short	-15390
  95 0090 E4C5     		.short	-14876
  96 0092 DEC7     		.short	-14370
  97 0094 D1C9     		.short	-13871
  98 0096 BBCB     		.short	-13381
  99 0098 9FCD     		.short	-12897
 100 009a 7ACF     		.short	-12422
 101 009c 4DD1     		.short	-11955
 102 009e 18D3     		.short	-11496
 103 00a0 DBD4     		.short	-11045
 104 00a2 95D6     		.short	-10603
 105 00a4 48D8     		.short	-10168
 106 00a6 F2D9     		.short	-9742
 107 00a8 94DB     		.short	-9324
 108 00aa 2DDD     		.short	-8915
 109 00ac BEDE     		.short	-8514
 110 00ae 46E0     		.short	-8122
 111 00b0 C5E1     		.short	-7739
 112 00b2 3CE3     		.short	-7364
 113 00b4 AAE4     		.short	-6998
 114 00b6 0FE6     		.short	-6641
 115 00b8 6BE7     		.short	-6293
 116 00ba BFE8     		.short	-5953
 117 00bc 09EA     		.short	-5623
 118 00be 4BEB     		.short	-5301
 119 00c0 83EC     		.short	-4989
 120 00c2 B2ED     		.short	-4686
 121 00c4 D8EE     		.short	-4392
 122 00c6 F5EF     		.short	-4107
 123 00c8 09F1     		.short	-3831
 124 00ca 13F2     		.short	-3565
 125 00cc 14F3     		.short	-3308
 126 00ce 0BF4     		.short	-3061
 127 00d0 FAF4     		.short	-2822
 128 00d2 DEF5     		.short	-2594
 129 00d4 BAF6     		.short	-2374
 130 00d6 8BF7     		.short	-2165
 131 00d8 53F8     		.short	-1965
 132 00da 12F9     		.short	-1774
 133 00dc C7F9     		.short	-1593
 134 00de 73FA     		.short	-1421
 135 00e0 14FB     		.short	-1260
 136 00e2 ACFB     		.short	-1108
 137 00e4 3BFC     		.short	-965
 138 00e6 BFFC     		.short	-833
 139 00e8 3AFD     		.short	-710
 140 00ea ABFD     		.short	-597
 141 00ec 13FE     		.short	-493
 142 00ee 70FE     		.short	-400
 143 00f0 C4FE     		.short	-316
 144 00f2 0EFF     		.short	-242
 145 00f4 4EFF     		.short	-178
 146 00f6 84FF     		.short	-124
 147 00f8 B1FF     		.short	-79
 148 00fa D3FF     		.short	-45
 149 00fc ECFF     		.short	-20
 150 00fe FBFF     		.short	-5
 151 0100 FFFF     		.short	-1
 152 0102 0000     		.section	.text.sine,"ax",%progbits
 153              		.align	2
 154              		.global	sine
 155              		.thumb
 156              		.thumb_func
 158              	sine:
 159              	.LFB0:
 160              		.file 1 "C:/StellarisWare/utils/sine.c"
   1:C:/StellarisWare/utils\sine.c **** //*****************************************************************************
   2:C:/StellarisWare/utils\sine.c **** //
   3:C:/StellarisWare/utils\sine.c **** // sine.c - Fixed point sine trigonometric function.
   4:C:/StellarisWare/utils\sine.c **** //
   5:C:/StellarisWare/utils\sine.c **** // Copyright (c) 2006-2012 Texas Instruments Incorporated.  All rights reserved.
   6:C:/StellarisWare/utils\sine.c **** // Software License Agreement
   7:C:/StellarisWare/utils\sine.c **** // 
   8:C:/StellarisWare/utils\sine.c **** // Texas Instruments (TI) is supplying this software for use solely and
   9:C:/StellarisWare/utils\sine.c **** // exclusively on TI's microcontroller products. The software is owned by
  10:C:/StellarisWare/utils\sine.c **** // TI and/or its suppliers, and is protected under applicable copyright
  11:C:/StellarisWare/utils\sine.c **** // laws. You may not combine this software with "viral" open-source
  12:C:/StellarisWare/utils\sine.c **** // software in order to form a larger program.
  13:C:/StellarisWare/utils\sine.c **** // 
  14:C:/StellarisWare/utils\sine.c **** // THIS SOFTWARE IS PROVIDED "AS IS" AND WITH ALL FAULTS.
  15:C:/StellarisWare/utils\sine.c **** // NO WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT
  16:C:/StellarisWare/utils\sine.c **** // NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  17:C:/StellarisWare/utils\sine.c **** // A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. TI SHALL NOT, UNDER ANY
  18:C:/StellarisWare/utils\sine.c **** // CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR CONSEQUENTIAL
  19:C:/StellarisWare/utils\sine.c **** // DAMAGES, FOR ANY REASON WHATSOEVER.
  20:C:/StellarisWare/utils\sine.c **** // 
  21:C:/StellarisWare/utils\sine.c **** // This is part of revision 9107 of the Stellaris Firmware Development Package.
  22:C:/StellarisWare/utils\sine.c **** //
  23:C:/StellarisWare/utils\sine.c **** //*****************************************************************************
  24:C:/StellarisWare/utils\sine.c **** 
  25:C:/StellarisWare/utils\sine.c **** #include "utils/sine.h"
  26:C:/StellarisWare/utils\sine.c **** 
  27:C:/StellarisWare/utils\sine.c **** //*****************************************************************************
  28:C:/StellarisWare/utils\sine.c **** //
  29:C:/StellarisWare/utils\sine.c **** //! \addtogroup sine_api
  30:C:/StellarisWare/utils\sine.c **** //! @{
  31:C:/StellarisWare/utils\sine.c **** //
  32:C:/StellarisWare/utils\sine.c **** //*****************************************************************************
  33:C:/StellarisWare/utils\sine.c **** 
  34:C:/StellarisWare/utils\sine.c **** //*****************************************************************************
  35:C:/StellarisWare/utils\sine.c **** //
  36:C:/StellarisWare/utils\sine.c **** // A table of the value of the sine function for the first ninety degrees with
  37:C:/StellarisWare/utils\sine.c **** // 129 entries (that is, [0] = 0 degrees, [128] = 90 degrees).  Each entry is
  38:C:/StellarisWare/utils\sine.c **** // in 0.16 fixed point notation.
  39:C:/StellarisWare/utils\sine.c **** //
  40:C:/StellarisWare/utils\sine.c **** //*****************************************************************************
  41:C:/StellarisWare/utils\sine.c **** static const unsigned short g_pusFixedSineTable[] =
  42:C:/StellarisWare/utils\sine.c **** {
  43:C:/StellarisWare/utils\sine.c ****     0x0000, 0x0324, 0x0648, 0x096C, 0x0C8F, 0x0FB2, 0x12D5, 0x15F6, 0x1917,
  44:C:/StellarisWare/utils\sine.c ****     0x1C37, 0x1F56, 0x2273, 0x2590, 0x28AA, 0x2BC4, 0x2EDB, 0x31F1, 0x3505,
  45:C:/StellarisWare/utils\sine.c ****     0x3817, 0x3B26, 0x3E33, 0x413E, 0x4447, 0x474D, 0x4A50, 0x4D50, 0x504D,
  46:C:/StellarisWare/utils\sine.c ****     0x5347, 0x563E, 0x5931, 0x5C22, 0x5F0E, 0x61F7, 0x64DC, 0x67BD, 0x6A9B,
  47:C:/StellarisWare/utils\sine.c ****     0x6D74, 0x7049, 0x7319, 0x75E5, 0x78AD, 0x7B70, 0x7E2E, 0x80E7, 0x839C,
  48:C:/StellarisWare/utils\sine.c ****     0x864B, 0x88F5, 0x8B9A, 0x8E39, 0x90D3, 0x9368, 0x95F6, 0x987F, 0x9B02,
  49:C:/StellarisWare/utils\sine.c ****     0x9D7F, 0x9FF6, 0xA267, 0xA4D2, 0xA736, 0xA994, 0xABEB, 0xAE3B, 0xB085,
  50:C:/StellarisWare/utils\sine.c ****     0xB2C8, 0xB504, 0xB73A, 0xB968, 0xBB8F, 0xBDAE, 0xBFC7, 0xC1D8, 0xC3E2,
  51:C:/StellarisWare/utils\sine.c ****     0xC5E4, 0xC7DE, 0xC9D1, 0xCBBB, 0xCD9F, 0xCF7A, 0xD14D, 0xD318, 0xD4DB,
  52:C:/StellarisWare/utils\sine.c ****     0xD695, 0xD848, 0xD9F2, 0xDB94, 0xDD2D, 0xDEBE, 0xE046, 0xE1C5, 0xE33C,
  53:C:/StellarisWare/utils\sine.c ****     0xE4AA, 0xE60F, 0xE76B, 0xE8BF, 0xEA09, 0xEB4B, 0xEC83, 0xEDB2, 0xEED8,
  54:C:/StellarisWare/utils\sine.c ****     0xEFF5, 0xF109, 0xF213, 0xF314, 0xF40B, 0xF4FA, 0xF5DE, 0xF6BA, 0xF78B,
  55:C:/StellarisWare/utils\sine.c ****     0xF853, 0xF912, 0xF9C7, 0xFA73, 0xFB14, 0xFBAC, 0xFC3B, 0xFCBF, 0xFD3A,
  56:C:/StellarisWare/utils\sine.c ****     0xFDAB, 0xFE13, 0xFE70, 0xFEC4, 0xFF0E, 0xFF4E, 0xFF84, 0xFFB1, 0xFFD3,
  57:C:/StellarisWare/utils\sine.c ****     0xFFEC, 0xFFFB, 0xFFFF
  58:C:/StellarisWare/utils\sine.c **** };
  59:C:/StellarisWare/utils\sine.c **** 
  60:C:/StellarisWare/utils\sine.c **** //*****************************************************************************
  61:C:/StellarisWare/utils\sine.c **** //
  62:C:/StellarisWare/utils\sine.c **** //! Computes an approximation of the sine of the input angle.
  63:C:/StellarisWare/utils\sine.c **** //!
  64:C:/StellarisWare/utils\sine.c **** //! \param ulAngle is an angle expressed as a 0.32 fixed-point value that is
  65:C:/StellarisWare/utils\sine.c **** //! the percentage of the way around a circle.
  66:C:/StellarisWare/utils\sine.c **** //!
  67:C:/StellarisWare/utils\sine.c **** //! This function computes the sine for the given input angle.  The angle is
  68:C:/StellarisWare/utils\sine.c **** //! specified in 0.32 fixed point format, and is therefore always between 0 and
  69:C:/StellarisWare/utils\sine.c **** //! 360 degrees, inclusive of 0 and exclusive of 360.
  70:C:/StellarisWare/utils\sine.c **** //!
  71:C:/StellarisWare/utils\sine.c **** //! \return Returns the sine of the angle, in 16.16 fixed point format.
  72:C:/StellarisWare/utils\sine.c **** //
  73:C:/StellarisWare/utils\sine.c **** //*****************************************************************************
  74:C:/StellarisWare/utils\sine.c **** long
  75:C:/StellarisWare/utils\sine.c **** sine(unsigned long ulAngle)
  76:C:/StellarisWare/utils\sine.c **** {
 161              		.loc 1 76 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 16
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 80B4     		push	{r7}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 7, -4
 170 0002 85B0     		sub	sp, sp, #20
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 24
 173 0004 00AF     		add	r7, sp, #0
 174              	.LCFI2:
 175              		.cfi_def_cfa_register 7
 176 0006 7860     		str	r0, [r7, #4]
  77:C:/StellarisWare/utils\sine.c ****     unsigned long ulIdx;
  78:C:/StellarisWare/utils\sine.c **** 
  79:C:/StellarisWare/utils\sine.c ****     //
  80:C:/StellarisWare/utils\sine.c ****     // Add 0.5 to the angle.  Since only the upper 9 bits are used to compute
  81:C:/StellarisWare/utils\sine.c ****     // the sine value, adding one to the tenth bit is 0.5 from the point of
  82:C:/StellarisWare/utils\sine.c ****     // view of the sine table.
  83:C:/StellarisWare/utils\sine.c ****     //
  84:C:/StellarisWare/utils\sine.c ****     ulAngle += 0x00400000;
 177              		.loc 1 84 0
 178 0008 7B68     		ldr	r3, [r7, #4]
 179 000a 03F58003 		add	r3, r3, #4194304
 180 000e 7B60     		str	r3, [r7, #4]
  85:C:/StellarisWare/utils\sine.c **** 
  86:C:/StellarisWare/utils\sine.c ****     //
  87:C:/StellarisWare/utils\sine.c ****     // Get the index into the sine table from bits 30:23.
  88:C:/StellarisWare/utils\sine.c ****     //
  89:C:/StellarisWare/utils\sine.c ****     ulIdx = (ulAngle >> 23) & 255;
 181              		.loc 1 89 0
 182 0010 7B68     		ldr	r3, [r7, #4]
 183 0012 4FEAD353 		lsr	r3, r3, #23
 184 0016 DBB2     		uxtb	r3, r3
 185 0018 FB60     		str	r3, [r7, #12]
  90:C:/StellarisWare/utils\sine.c **** 
  91:C:/StellarisWare/utils\sine.c ****     //
  92:C:/StellarisWare/utils\sine.c ****     // If bit 30 is set, the angle is between 90 and 180 or 270 and 360.  In
  93:C:/StellarisWare/utils\sine.c ****     // these cases, the sine value is decreasing from one instead of increasing
  94:C:/StellarisWare/utils\sine.c ****     // from zero.  The indexing into the table needs to be reversed.
  95:C:/StellarisWare/utils\sine.c ****     //
  96:C:/StellarisWare/utils\sine.c ****     if(ulAngle & 0x40000000)
 186              		.loc 1 96 0
 187 001a 7B68     		ldr	r3, [r7, #4]
 188 001c 03F08043 		and	r3, r3, #1073741824
 189 0020 002B     		cmp	r3, #0
 190 0022 03D0     		beq	.L2
  97:C:/StellarisWare/utils\sine.c ****     {
  98:C:/StellarisWare/utils\sine.c ****         ulIdx = 256 - ulIdx;
 191              		.loc 1 98 0
 192 0024 FB68     		ldr	r3, [r7, #12]
 193 0026 C3F58073 		rsb	r3, r3, #256
 194 002a FB60     		str	r3, [r7, #12]
 195              	.L2:
  99:C:/StellarisWare/utils\sine.c ****     }
 100:C:/StellarisWare/utils\sine.c **** 
 101:C:/StellarisWare/utils\sine.c ****     //
 102:C:/StellarisWare/utils\sine.c ****     // Get the value of the sine.
 103:C:/StellarisWare/utils\sine.c ****     //
 104:C:/StellarisWare/utils\sine.c ****     ulIdx = g_pusFixedSineTable[ulIdx];
 196              		.loc 1 104 0
 197 002c 40F20003 		movw	r3, #:lower16:g_pusFixedSineTable
 198 0030 C0F20003 		movt	r3, #:upper16:g_pusFixedSineTable
 199 0034 FA68     		ldr	r2, [r7, #12]
 200 0036 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 201 003a FB60     		str	r3, [r7, #12]
 105:C:/StellarisWare/utils\sine.c **** 
 106:C:/StellarisWare/utils\sine.c ****     //
 107:C:/StellarisWare/utils\sine.c ****     // If bit 31 is set, the angle is between 180 and 360.  In this case, the
 108:C:/StellarisWare/utils\sine.c ****     // sine value is negative; otherwise it is positive.
 109:C:/StellarisWare/utils\sine.c ****     //
 110:C:/StellarisWare/utils\sine.c ****     if(ulAngle & 0x80000000)
 202              		.loc 1 110 0
 203 003c 7B68     		ldr	r3, [r7, #4]
 204 003e 002B     		cmp	r3, #0
 205 0040 03DA     		bge	.L3
 111:C:/StellarisWare/utils\sine.c ****     {
 112:C:/StellarisWare/utils\sine.c ****         return(0 - ulIdx);
 206              		.loc 1 112 0
 207 0042 FB68     		ldr	r3, [r7, #12]
 208 0044 C3F10003 		rsb	r3, r3, #0
 209 0048 00E0     		b	.L4
 210              	.L3:
 113:C:/StellarisWare/utils\sine.c ****     }
 114:C:/StellarisWare/utils\sine.c ****     else
 115:C:/StellarisWare/utils\sine.c ****     {
 116:C:/StellarisWare/utils\sine.c ****         return(ulIdx);
 211              		.loc 1 116 0
 212 004a FB68     		ldr	r3, [r7, #12]
 213              	.L4:
 117:C:/StellarisWare/utils\sine.c ****     }
 118:C:/StellarisWare/utils\sine.c **** }
 214              		.loc 1 118 0
 215 004c 1846     		mov	r0, r3
 216 004e 07F11407 		add	r7, r7, #20
 217 0052 BD46     		mov	sp, r7
 218 0054 80BC     		pop	{r7}
 219 0056 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE0:
 223              		.text
 224              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 sine.c
C:\Users\Sarthak\AppData\Local\Temp\cci4uX7o.s:19     .rodata:00000000 $d
C:\Users\Sarthak\AppData\Local\Temp\cci4uX7o.s:22     .rodata:00000000 g_pusFixedSineTable
C:\Users\Sarthak\AppData\Local\Temp\cci4uX7o.s:153    .text.sine:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cci4uX7o.s:158    .text.sine:00000000 sine
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
