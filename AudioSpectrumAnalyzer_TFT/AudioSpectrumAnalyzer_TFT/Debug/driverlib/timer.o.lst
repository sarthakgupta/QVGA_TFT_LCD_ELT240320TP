   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	g_ppulTimerIntMap:
  23 0000 00000340 		.word	1073938432
  24 0004 23000000 		.word	35
  25 0008 00100340 		.word	1073942528
  26 000c 25000000 		.word	37
  27 0010 00200340 		.word	1073946624
  28 0014 27000000 		.word	39
  29 0018 00300340 		.word	1073950720
  30 001c 33000000 		.word	51
  31 0020 00400340 		.word	1073954816
  32 0024 56000000 		.word	86
  33 0028 00500340 		.word	1073958912
  34 002c 6C000000 		.word	108
  35 0030 00600340 		.word	1073963008
  36 0034 6E000000 		.word	110
  37 0038 00700340 		.word	1073967104
  38 003c 70000000 		.word	112
  39 0040 00C00440 		.word	1074053120
  40 0044 72000000 		.word	114
  41 0048 00D00440 		.word	1074057216
  42 004c 74000000 		.word	116
  43 0050 00E00440 		.word	1074061312
  44 0054 76000000 		.word	118
  45 0058 00F00440 		.word	1074065408
  46 005c 78000000 		.word	120
  47              		.section	.text.TimerIntNumberGet,"ax",%progbits
  48              		.align	2
  49              		.thumb
  50              		.thumb_func
  52              	TimerIntNumberGet:
  53              	.LFB0:
  54              		.file 1 "C:/StellarisWare/driverlib/timer.c"
   1:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
   2:C:/StellarisWare/driverlib\timer.c **** //
   3:C:/StellarisWare/driverlib\timer.c **** // timer.c - Driver for the timer module.
   4:C:/StellarisWare/driverlib\timer.c **** //
   5:C:/StellarisWare/driverlib\timer.c **** // Copyright (c) 2005-2012 Texas Instruments Incorporated.  All rights reserved.
   6:C:/StellarisWare/driverlib\timer.c **** // Software License Agreement
   7:C:/StellarisWare/driverlib\timer.c **** // 
   8:C:/StellarisWare/driverlib\timer.c **** //   Redistribution and use in source and binary forms, with or without
   9:C:/StellarisWare/driverlib\timer.c **** //   modification, are permitted provided that the following conditions
  10:C:/StellarisWare/driverlib\timer.c **** //   are met:
  11:C:/StellarisWare/driverlib\timer.c **** // 
  12:C:/StellarisWare/driverlib\timer.c **** //   Redistributions of source code must retain the above copyright
  13:C:/StellarisWare/driverlib\timer.c **** //   notice, this list of conditions and the following disclaimer.
  14:C:/StellarisWare/driverlib\timer.c **** // 
  15:C:/StellarisWare/driverlib\timer.c **** //   Redistributions in binary form must reproduce the above copyright
  16:C:/StellarisWare/driverlib\timer.c **** //   notice, this list of conditions and the following disclaimer in the
  17:C:/StellarisWare/driverlib\timer.c **** //   documentation and/or other materials provided with the  
  18:C:/StellarisWare/driverlib\timer.c **** //   distribution.
  19:C:/StellarisWare/driverlib\timer.c **** // 
  20:C:/StellarisWare/driverlib\timer.c **** //   Neither the name of Texas Instruments Incorporated nor the names of
  21:C:/StellarisWare/driverlib\timer.c **** //   its contributors may be used to endorse or promote products derived
  22:C:/StellarisWare/driverlib\timer.c **** //   from this software without specific prior written permission.
  23:C:/StellarisWare/driverlib\timer.c **** // 
  24:C:/StellarisWare/driverlib\timer.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  25:C:/StellarisWare/driverlib\timer.c **** // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  26:C:/StellarisWare/driverlib\timer.c **** // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  27:C:/StellarisWare/driverlib\timer.c **** // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  28:C:/StellarisWare/driverlib\timer.c **** // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  29:C:/StellarisWare/driverlib\timer.c **** // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  30:C:/StellarisWare/driverlib\timer.c **** // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  31:C:/StellarisWare/driverlib\timer.c **** // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  32:C:/StellarisWare/driverlib\timer.c **** // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  33:C:/StellarisWare/driverlib\timer.c **** // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:C:/StellarisWare/driverlib\timer.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/StellarisWare/driverlib\timer.c **** // 
  36:C:/StellarisWare/driverlib\timer.c **** // This is part of revision 9107 of the Stellaris Peripheral Driver Library.
  37:C:/StellarisWare/driverlib\timer.c **** //
  38:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
  39:C:/StellarisWare/driverlib\timer.c **** 
  40:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
  41:C:/StellarisWare/driverlib\timer.c **** //
  42:C:/StellarisWare/driverlib\timer.c **** //! \addtogroup timer_api
  43:C:/StellarisWare/driverlib\timer.c **** //! @{
  44:C:/StellarisWare/driverlib\timer.c **** //
  45:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
  46:C:/StellarisWare/driverlib\timer.c **** 
  47:C:/StellarisWare/driverlib\timer.c **** #include "inc/hw_ints.h"
  48:C:/StellarisWare/driverlib\timer.c **** #include "inc/hw_memmap.h"
  49:C:/StellarisWare/driverlib\timer.c **** #include "inc/hw_timer.h"
  50:C:/StellarisWare/driverlib\timer.c **** #include "inc/hw_types.h"
  51:C:/StellarisWare/driverlib\timer.c **** #include "driverlib/debug.h"
  52:C:/StellarisWare/driverlib\timer.c **** #include "driverlib/interrupt.h"
  53:C:/StellarisWare/driverlib\timer.c **** #include "driverlib/timer.h"
  54:C:/StellarisWare/driverlib\timer.c **** 
  55:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
  56:C:/StellarisWare/driverlib\timer.c **** //
  57:C:/StellarisWare/driverlib\timer.c **** // A mapping of timer base address to interrupt number.
  58:C:/StellarisWare/driverlib\timer.c **** //
  59:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
  60:C:/StellarisWare/driverlib\timer.c **** static const unsigned long g_ppulTimerIntMap[][2] =
  61:C:/StellarisWare/driverlib\timer.c **** {
  62:C:/StellarisWare/driverlib\timer.c ****     { TIMER0_BASE, INT_TIMER0A },
  63:C:/StellarisWare/driverlib\timer.c ****     { TIMER1_BASE, INT_TIMER1A },
  64:C:/StellarisWare/driverlib\timer.c ****     { TIMER2_BASE, INT_TIMER2A },
  65:C:/StellarisWare/driverlib\timer.c ****     { TIMER3_BASE, INT_TIMER3A },
  66:C:/StellarisWare/driverlib\timer.c ****     { TIMER4_BASE, INT_TIMER4A },
  67:C:/StellarisWare/driverlib\timer.c ****     { TIMER5_BASE, INT_TIMER5A },
  68:C:/StellarisWare/driverlib\timer.c ****     { WTIMER0_BASE, INT_WTIMER0A },
  69:C:/StellarisWare/driverlib\timer.c ****     { WTIMER1_BASE, INT_WTIMER1A },
  70:C:/StellarisWare/driverlib\timer.c ****     { WTIMER2_BASE, INT_WTIMER2A },
  71:C:/StellarisWare/driverlib\timer.c ****     { WTIMER3_BASE, INT_WTIMER3A },
  72:C:/StellarisWare/driverlib\timer.c ****     { WTIMER4_BASE, INT_WTIMER4A },
  73:C:/StellarisWare/driverlib\timer.c ****     { WTIMER5_BASE, INT_WTIMER5A },
  74:C:/StellarisWare/driverlib\timer.c **** };
  75:C:/StellarisWare/driverlib\timer.c **** 
  76:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
  77:C:/StellarisWare/driverlib\timer.c **** //
  78:C:/StellarisWare/driverlib\timer.c **** //! \internal
  79:C:/StellarisWare/driverlib\timer.c **** //! Checks a timer base address.
  80:C:/StellarisWare/driverlib\timer.c **** //!
  81:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
  82:C:/StellarisWare/driverlib\timer.c **** //!
  83:C:/StellarisWare/driverlib\timer.c **** //! This function determines if a timer module base address is valid.
  84:C:/StellarisWare/driverlib\timer.c **** //!
  85:C:/StellarisWare/driverlib\timer.c **** //! \return Returns \b true if the base address is valid and \b false
  86:C:/StellarisWare/driverlib\timer.c **** //! otherwise.
  87:C:/StellarisWare/driverlib\timer.c **** //
  88:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
  89:C:/StellarisWare/driverlib\timer.c **** #ifdef DEBUG
  90:C:/StellarisWare/driverlib\timer.c **** static tBoolean
  91:C:/StellarisWare/driverlib\timer.c **** TimerBaseValid(unsigned long ulBase)
  92:C:/StellarisWare/driverlib\timer.c **** {
  93:C:/StellarisWare/driverlib\timer.c ****     return((ulBase == TIMER0_BASE) || (ulBase == TIMER1_BASE) ||
  94:C:/StellarisWare/driverlib\timer.c ****            (ulBase == TIMER2_BASE) || (ulBase == TIMER3_BASE) ||
  95:C:/StellarisWare/driverlib\timer.c ****            (ulBase == TIMER4_BASE) || (ulBase == TIMER5_BASE) ||
  96:C:/StellarisWare/driverlib\timer.c ****            (ulBase == WTIMER0_BASE) || (ulBase == WTIMER1_BASE) ||
  97:C:/StellarisWare/driverlib\timer.c ****            (ulBase == WTIMER2_BASE) || (ulBase == WTIMER3_BASE) ||
  98:C:/StellarisWare/driverlib\timer.c ****            (ulBase == WTIMER4_BASE) || (ulBase == WTIMER5_BASE));
  99:C:/StellarisWare/driverlib\timer.c **** }
 100:C:/StellarisWare/driverlib\timer.c **** #endif
 101:C:/StellarisWare/driverlib\timer.c **** 
 102:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 103:C:/StellarisWare/driverlib\timer.c **** //
 104:C:/StellarisWare/driverlib\timer.c **** //! \internal
 105:C:/StellarisWare/driverlib\timer.c **** //! Gets the timer interrupt number.
 106:C:/StellarisWare/driverlib\timer.c **** //!
 107:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 108:C:/StellarisWare/driverlib\timer.c **** //!
 109:C:/StellarisWare/driverlib\timer.c **** //! Given a timer base address, this function returns the corresponding
 110:C:/StellarisWare/driverlib\timer.c **** //! interrupt number.
 111:C:/StellarisWare/driverlib\timer.c **** //!
 112:C:/StellarisWare/driverlib\timer.c **** //! \return Returns a timer interrupt number, or -1 if \e ulBase is invalid.
 113:C:/StellarisWare/driverlib\timer.c **** //
 114:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 115:C:/StellarisWare/driverlib\timer.c **** static long
 116:C:/StellarisWare/driverlib\timer.c **** TimerIntNumberGet(unsigned long ulBase)
 117:C:/StellarisWare/driverlib\timer.c **** {
  55              		.loc 1 117 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 16
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60 0000 80B4     		push	{r7}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 7, -4
  64 0002 85B0     		sub	sp, sp, #20
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 24
  67 0004 00AF     		add	r7, sp, #0
  68              	.LCFI2:
  69              		.cfi_def_cfa_register 7
  70 0006 7860     		str	r0, [r7, #4]
 118:C:/StellarisWare/driverlib\timer.c ****     unsigned long ulIdx;
 119:C:/StellarisWare/driverlib\timer.c **** 
 120:C:/StellarisWare/driverlib\timer.c ****     //
 121:C:/StellarisWare/driverlib\timer.c ****     // Loop through the table that maps timer base addresses to interrupt
 122:C:/StellarisWare/driverlib\timer.c ****     // numbers.
 123:C:/StellarisWare/driverlib\timer.c ****     //
 124:C:/StellarisWare/driverlib\timer.c ****     for(ulIdx = 0; ulIdx < (sizeof(g_ppulTimerIntMap) /
  71              		.loc 1 124 0
  72 0008 4FF00003 		mov	r3, #0
  73 000c FB60     		str	r3, [r7, #12]
  74 000e 17E0     		b	.L2
  75              	.L5:
 125:C:/StellarisWare/driverlib\timer.c ****                             sizeof(g_ppulTimerIntMap[0])); ulIdx++)
 126:C:/StellarisWare/driverlib\timer.c ****     {
 127:C:/StellarisWare/driverlib\timer.c ****         //
 128:C:/StellarisWare/driverlib\timer.c ****         // See if this base address matches.
 129:C:/StellarisWare/driverlib\timer.c ****         //
 130:C:/StellarisWare/driverlib\timer.c ****         if(g_ppulTimerIntMap[ulIdx][0] == ulBase)
  76              		.loc 1 130 0
  77 0010 40F20003 		movw	r3, #:lower16:g_ppulTimerIntMap
  78 0014 C0F20003 		movt	r3, #:upper16:g_ppulTimerIntMap
  79 0018 FA68     		ldr	r2, [r7, #12]
  80 001a 53F83220 		ldr	r2, [r3, r2, lsl #3]
  81 001e 7B68     		ldr	r3, [r7, #4]
  82 0020 9A42     		cmp	r2, r3
  83 0022 09D1     		bne	.L3
 131:C:/StellarisWare/driverlib\timer.c ****         {
 132:C:/StellarisWare/driverlib\timer.c ****             //
 133:C:/StellarisWare/driverlib\timer.c ****             // Return the corresponding interrupt number.
 134:C:/StellarisWare/driverlib\timer.c ****             //
 135:C:/StellarisWare/driverlib\timer.c ****             return(g_ppulTimerIntMap[ulIdx][1]);
  84              		.loc 1 135 0
  85 0024 40F20002 		movw	r2, #:lower16:g_ppulTimerIntMap
  86 0028 C0F20002 		movt	r2, #:upper16:g_ppulTimerIntMap
  87 002c FB68     		ldr	r3, [r7, #12]
  88 002e 4FEAC303 		lsl	r3, r3, #3
  89 0032 D318     		adds	r3, r2, r3
  90 0034 5B68     		ldr	r3, [r3, #4]
  91 0036 08E0     		b	.L4
  92              	.L3:
 125:C:/StellarisWare/driverlib\timer.c ****                             sizeof(g_ppulTimerIntMap[0])); ulIdx++)
  93              		.loc 1 125 0
  94 0038 FB68     		ldr	r3, [r7, #12]
  95 003a 03F10103 		add	r3, r3, #1
  96 003e FB60     		str	r3, [r7, #12]
  97              	.L2:
 124:C:/StellarisWare/driverlib\timer.c ****     for(ulIdx = 0; ulIdx < (sizeof(g_ppulTimerIntMap) /
  98              		.loc 1 124 0 discriminator 1
  99 0040 FB68     		ldr	r3, [r7, #12]
 100 0042 0B2B     		cmp	r3, #11
 101 0044 E4D9     		bls	.L5
 136:C:/StellarisWare/driverlib\timer.c ****         }
 137:C:/StellarisWare/driverlib\timer.c ****     }
 138:C:/StellarisWare/driverlib\timer.c **** 
 139:C:/StellarisWare/driverlib\timer.c ****     //
 140:C:/StellarisWare/driverlib\timer.c ****     // The base address could not be found, so return an error.
 141:C:/StellarisWare/driverlib\timer.c ****     //
 142:C:/StellarisWare/driverlib\timer.c ****     return(-1);
 102              		.loc 1 142 0
 103 0046 4FF0FF33 		mov	r3, #-1
 104              	.L4:
 143:C:/StellarisWare/driverlib\timer.c **** }
 105              		.loc 1 143 0
 106 004a 1846     		mov	r0, r3
 107 004c 07F11407 		add	r7, r7, #20
 108 0050 BD46     		mov	sp, r7
 109 0052 80BC     		pop	{r7}
 110 0054 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE0:
 114 0056 00BF     		.section	.text.TimerEnable,"ax",%progbits
 115              		.align	2
 116              		.global	TimerEnable
 117              		.thumb
 118              		.thumb_func
 120              	TimerEnable:
 121              	.LFB1:
 144:C:/StellarisWare/driverlib\timer.c **** 
 145:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 146:C:/StellarisWare/driverlib\timer.c **** //
 147:C:/StellarisWare/driverlib\timer.c **** //! Enables the timer(s).
 148:C:/StellarisWare/driverlib\timer.c **** //!
 149:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 150:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to enable; must be one of \b TIMER_A,
 151:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B, or \b TIMER_BOTH.
 152:C:/StellarisWare/driverlib\timer.c **** //!
 153:C:/StellarisWare/driverlib\timer.c **** //! This function enables operation of the timer module.  The timer must be
 154:C:/StellarisWare/driverlib\timer.c **** //! configured before it is enabled.
 155:C:/StellarisWare/driverlib\timer.c **** //!
 156:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 157:C:/StellarisWare/driverlib\timer.c **** //
 158:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 159:C:/StellarisWare/driverlib\timer.c **** void
 160:C:/StellarisWare/driverlib\timer.c **** TimerEnable(unsigned long ulBase, unsigned long ulTimer)
 161:C:/StellarisWare/driverlib\timer.c **** {
 122              		.loc 1 161 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 8
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127 0000 80B4     		push	{r7}
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 4
 130              		.cfi_offset 7, -4
 131 0002 83B0     		sub	sp, sp, #12
 132              	.LCFI4:
 133              		.cfi_def_cfa_offset 16
 134 0004 00AF     		add	r7, sp, #0
 135              	.LCFI5:
 136              		.cfi_def_cfa_register 7
 137 0006 7860     		str	r0, [r7, #4]
 138 0008 3960     		str	r1, [r7, #0]
 162:C:/StellarisWare/driverlib\timer.c ****     //
 163:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 164:C:/StellarisWare/driverlib\timer.c ****     //
 165:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 166:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 167:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 168:C:/StellarisWare/driverlib\timer.c **** 
 169:C:/StellarisWare/driverlib\timer.c ****     //
 170:C:/StellarisWare/driverlib\timer.c ****     // Enable the timer(s) module.
 171:C:/StellarisWare/driverlib\timer.c ****     //
 172:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) |= ulTimer & (TIMER_CTL_TAEN | TIMER_CTL_TBEN);
 139              		.loc 1 172 0
 140 000a 7B68     		ldr	r3, [r7, #4]
 141 000c 03F10C03 		add	r3, r3, #12
 142 0010 1A46     		mov	r2, r3
 143 0012 7B68     		ldr	r3, [r7, #4]
 144 0014 03F10C03 		add	r3, r3, #12
 145 0018 1968     		ldr	r1, [r3, #0]
 146 001a 3868     		ldr	r0, [r7, #0]
 147 001c 40F20113 		movw	r3, #257
 148 0020 0340     		ands	r3, r3, r0
 149 0022 0B43     		orrs	r3, r3, r1
 150 0024 1360     		str	r3, [r2, #0]
 173:C:/StellarisWare/driverlib\timer.c **** }
 151              		.loc 1 173 0
 152 0026 07F10C07 		add	r7, r7, #12
 153 002a BD46     		mov	sp, r7
 154 002c 80BC     		pop	{r7}
 155 002e 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE1:
 159              		.section	.text.TimerDisable,"ax",%progbits
 160              		.align	2
 161              		.global	TimerDisable
 162              		.thumb
 163              		.thumb_func
 165              	TimerDisable:
 166              	.LFB2:
 174:C:/StellarisWare/driverlib\timer.c **** 
 175:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 176:C:/StellarisWare/driverlib\timer.c **** //
 177:C:/StellarisWare/driverlib\timer.c **** //! Disables the timer(s).
 178:C:/StellarisWare/driverlib\timer.c **** //!
 179:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 180:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to disable; must be one of
 181:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_A, \b TIMER_B, or \b TIMER_BOTH.
 182:C:/StellarisWare/driverlib\timer.c **** //!
 183:C:/StellarisWare/driverlib\timer.c **** //! This function disables operation of the timer module.
 184:C:/StellarisWare/driverlib\timer.c **** //!
 185:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 186:C:/StellarisWare/driverlib\timer.c **** //
 187:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 188:C:/StellarisWare/driverlib\timer.c **** void
 189:C:/StellarisWare/driverlib\timer.c **** TimerDisable(unsigned long ulBase, unsigned long ulTimer)
 190:C:/StellarisWare/driverlib\timer.c **** {
 167              		.loc 1 190 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 80B4     		push	{r7}
 173              	.LCFI6:
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 7, -4
 176 0002 83B0     		sub	sp, sp, #12
 177              	.LCFI7:
 178              		.cfi_def_cfa_offset 16
 179 0004 00AF     		add	r7, sp, #0
 180              	.LCFI8:
 181              		.cfi_def_cfa_register 7
 182 0006 7860     		str	r0, [r7, #4]
 183 0008 3960     		str	r1, [r7, #0]
 191:C:/StellarisWare/driverlib\timer.c ****     //
 192:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 193:C:/StellarisWare/driverlib\timer.c ****     //
 194:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 195:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 196:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 197:C:/StellarisWare/driverlib\timer.c **** 
 198:C:/StellarisWare/driverlib\timer.c ****     //
 199:C:/StellarisWare/driverlib\timer.c ****     // Disable the timer module.
 200:C:/StellarisWare/driverlib\timer.c ****     //
 201:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) &= ~(ulTimer &
 184              		.loc 1 201 0
 185 000a 7B68     		ldr	r3, [r7, #4]
 186 000c 03F10C03 		add	r3, r3, #12
 187 0010 1A46     		mov	r2, r3
 188 0012 7B68     		ldr	r3, [r7, #4]
 189 0014 03F10C03 		add	r3, r3, #12
 190 0018 1968     		ldr	r1, [r3, #0]
 191 001a 3868     		ldr	r0, [r7, #0]
 192 001c 40F20113 		movw	r3, #257
 193 0020 0340     		ands	r3, r3, r0
 194 0022 6FEA0303 		mvn	r3, r3
 195 0026 0B40     		ands	r3, r3, r1
 196 0028 1360     		str	r3, [r2, #0]
 202:C:/StellarisWare/driverlib\timer.c ****                                      (TIMER_CTL_TAEN | TIMER_CTL_TBEN));
 203:C:/StellarisWare/driverlib\timer.c **** }
 197              		.loc 1 203 0
 198 002a 07F10C07 		add	r7, r7, #12
 199 002e BD46     		mov	sp, r7
 200 0030 80BC     		pop	{r7}
 201 0032 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE2:
 205              		.section	.text.TimerConfigure,"ax",%progbits
 206              		.align	2
 207              		.global	TimerConfigure
 208              		.thumb
 209              		.thumb_func
 211              	TimerConfigure:
 212              	.LFB3:
 204:C:/StellarisWare/driverlib\timer.c **** 
 205:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 206:C:/StellarisWare/driverlib\timer.c **** //
 207:C:/StellarisWare/driverlib\timer.c **** //! Configures the timer(s).
 208:C:/StellarisWare/driverlib\timer.c **** //!
 209:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 210:C:/StellarisWare/driverlib\timer.c **** //! \param ulConfig is the configuration for the timer.
 211:C:/StellarisWare/driverlib\timer.c **** //!
 212:C:/StellarisWare/driverlib\timer.c **** //! This function configures the operating mode of the timer(s).  The timer
 213:C:/StellarisWare/driverlib\timer.c **** //! module is disabled before being configured and is left in the disabled
 214:C:/StellarisWare/driverlib\timer.c **** //! state.  The timer can be configured to be a single full-width timer
 215:C:/StellarisWare/driverlib\timer.c **** //! by using the \b TIMER_CFG_* values or a pair of half-width timers using the
 216:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_CFG_A_* and \b TIMER_CFG_B_* values passed in the \e ulConfig
 217:C:/StellarisWare/driverlib\timer.c **** //! parameter.
 218:C:/StellarisWare/driverlib\timer.c **** //!
 219:C:/StellarisWare/driverlib\timer.c **** //! The configuration is specified in \e ulConfig as one of the following
 220:C:/StellarisWare/driverlib\timer.c **** //! values:
 221:C:/StellarisWare/driverlib\timer.c **** //!
 222:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_ONE_SHOT - Full-width one-shot timer
 223:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_ONE_SHOT_UP - Full-width one-shot timer that counts up
 224:C:/StellarisWare/driverlib\timer.c **** //!   instead of down (not available on all parts)
 225:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_PERIODIC - Full-width periodic timer
 226:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_PERIODIC_UP - Full-width periodic timer that counts up
 227:C:/StellarisWare/driverlib\timer.c **** //!   instead of down (not available on all parts)
 228:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_RTC - Full-width real time clock timer
 229:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_SPLIT_PAIR - Two half-width timers
 230:C:/StellarisWare/driverlib\timer.c **** //!
 231:C:/StellarisWare/driverlib\timer.c **** //! When configured for a pair of half-width timers, each timer is separately
 232:C:/StellarisWare/driverlib\timer.c **** //! configured.  The first timer is configured by setting \e ulConfig to
 233:C:/StellarisWare/driverlib\timer.c **** //! the result of a logical OR operation between one of the following values
 234:C:/StellarisWare/driverlib\timer.c **** //! and \e ulConfig:
 235:C:/StellarisWare/driverlib\timer.c **** //!
 236:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_A_ONE_SHOT - Half-width one-shot timer
 237:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_A_ONE_SHOT_UP - Half-width one-shot timer that counts up
 238:C:/StellarisWare/driverlib\timer.c **** //!   instead of down (not available on all parts)
 239:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_A_PERIODIC - Half-width periodic timer
 240:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_A_PERIODIC_UP - Half-width periodic timer that counts up
 241:C:/StellarisWare/driverlib\timer.c **** //!   instead of down (not available on all parts)
 242:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_A_CAP_COUNT - Half-width edge count capture
 243:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_A_CAP_COUNT_UP - Half-width edge count capture that counts
 244:C:/StellarisWare/driverlib\timer.c **** //!   up instead of down (not available on all parts)
 245:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_A_CAP_TIME - Half-width edge time capture
 246:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_A_CAP_TIME_UP - Half-width edge time capture that counts up
 247:C:/StellarisWare/driverlib\timer.c **** //!   instead of down (not available on all parts)
 248:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CFG_A_PWM - Half-width PWM output
 249:C:/StellarisWare/driverlib\timer.c **** //!
 250:C:/StellarisWare/driverlib\timer.c **** //! Similarly, the second timer is configured by setting \e ulConfig to
 251:C:/StellarisWare/driverlib\timer.c **** //! the result of a logical OR operation between one of the corresponding
 252:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_CFG_B_* values and \e ulConfig.
 253:C:/StellarisWare/driverlib\timer.c **** //!
 254:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 255:C:/StellarisWare/driverlib\timer.c **** //
 256:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 257:C:/StellarisWare/driverlib\timer.c **** void
 258:C:/StellarisWare/driverlib\timer.c **** TimerConfigure(unsigned long ulBase, unsigned long ulConfig)
 259:C:/StellarisWare/driverlib\timer.c **** {
 213              		.loc 1 259 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 8
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              	.LCFI9:
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 83B0     		sub	sp, sp, #12
 223              	.LCFI10:
 224              		.cfi_def_cfa_offset 16
 225 0004 00AF     		add	r7, sp, #0
 226              	.LCFI11:
 227              		.cfi_def_cfa_register 7
 228 0006 7860     		str	r0, [r7, #4]
 229 0008 3960     		str	r1, [r7, #0]
 260:C:/StellarisWare/driverlib\timer.c ****     //
 261:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 262:C:/StellarisWare/driverlib\timer.c ****     //
 263:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 264:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulConfig == TIMER_CFG_ONE_SHOT) ||
 265:C:/StellarisWare/driverlib\timer.c ****            (ulConfig == TIMER_CFG_ONE_SHOT_UP) ||
 266:C:/StellarisWare/driverlib\timer.c ****            (ulConfig == TIMER_CFG_PERIODIC) ||
 267:C:/StellarisWare/driverlib\timer.c ****            (ulConfig == TIMER_CFG_PERIODIC_UP) ||
 268:C:/StellarisWare/driverlib\timer.c ****            (ulConfig == TIMER_CFG_RTC) ||
 269:C:/StellarisWare/driverlib\timer.c ****            ((ulConfig & 0xff000000) == TIMER_CFG_SPLIT_PAIR));
 270:C:/StellarisWare/driverlib\timer.c ****     ASSERT(((ulConfig & 0xff000000) != TIMER_CFG_SPLIT_PAIR) ||
 271:C:/StellarisWare/driverlib\timer.c ****            ((((ulConfig & 0x000000ff) == TIMER_CFG_A_ONE_SHOT) ||
 272:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x000000ff) == TIMER_CFG_A_ONE_SHOT_UP) ||
 273:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x000000ff) == TIMER_CFG_A_PERIODIC) ||
 274:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x000000ff) == TIMER_CFG_A_PERIODIC_UP) ||
 275:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x000000ff) == TIMER_CFG_A_CAP_COUNT) ||
 276:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x000000ff) == TIMER_CFG_A_CAP_TIME) ||
 277:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x000000ff) == TIMER_CFG_A_PWM)) &&
 278:C:/StellarisWare/driverlib\timer.c ****             (((ulConfig & 0x0000ff00) == TIMER_CFG_B_ONE_SHOT) ||
 279:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x0000ff00) == TIMER_CFG_B_ONE_SHOT_UP) ||
 280:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x0000ff00) == TIMER_CFG_B_PERIODIC) ||
 281:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x0000ff00) == TIMER_CFG_B_PERIODIC_UP) ||
 282:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x0000ff00) == TIMER_CFG_B_CAP_COUNT) ||
 283:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x0000ff00) == TIMER_CFG_B_CAP_COUNT_UP) ||
 284:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x0000ff00) == TIMER_CFG_B_CAP_TIME) ||
 285:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x0000ff00) == TIMER_CFG_B_CAP_TIME_UP) ||
 286:C:/StellarisWare/driverlib\timer.c ****              ((ulConfig & 0x0000ff00) == TIMER_CFG_B_PWM))));
 287:C:/StellarisWare/driverlib\timer.c **** 
 288:C:/StellarisWare/driverlib\timer.c ****     //
 289:C:/StellarisWare/driverlib\timer.c ****     // Disable the timers.
 290:C:/StellarisWare/driverlib\timer.c ****     //
 291:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) &= ~(TIMER_CTL_TAEN | TIMER_CTL_TBEN);
 230              		.loc 1 291 0
 231 000a 7B68     		ldr	r3, [r7, #4]
 232 000c 03F10C03 		add	r3, r3, #12
 233 0010 1A46     		mov	r2, r3
 234 0012 7B68     		ldr	r3, [r7, #4]
 235 0014 03F10C03 		add	r3, r3, #12
 236 0018 1B68     		ldr	r3, [r3, #0]
 237 001a 23F48073 		bic	r3, r3, #256
 238 001e 23F00103 		bic	r3, r3, #1
 239 0022 1360     		str	r3, [r2, #0]
 292:C:/StellarisWare/driverlib\timer.c **** 
 293:C:/StellarisWare/driverlib\timer.c ****     //
 294:C:/StellarisWare/driverlib\timer.c ****     // Set the global timer configuration.
 295:C:/StellarisWare/driverlib\timer.c ****     //
 296:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CFG) = ulConfig >> 24;
 240              		.loc 1 296 0
 241 0024 7B68     		ldr	r3, [r7, #4]
 242 0026 3A68     		ldr	r2, [r7, #0]
 243 0028 4FEA1262 		lsr	r2, r2, #24
 244 002c 1A60     		str	r2, [r3, #0]
 297:C:/StellarisWare/driverlib\timer.c **** 
 298:C:/StellarisWare/driverlib\timer.c ****     //
 299:C:/StellarisWare/driverlib\timer.c ****     // Set the configuration of the A and B timers.  Note that the B timer
 300:C:/StellarisWare/driverlib\timer.c ****     // configuration is ignored by the hardware in 32-bit modes.
 301:C:/StellarisWare/driverlib\timer.c ****     //
 302:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TAMR) = (ulConfig & 255) | TIMER_TAMR_TAPWMIE;
 245              		.loc 1 302 0
 246 002e 7B68     		ldr	r3, [r7, #4]
 247 0030 03F10403 		add	r3, r3, #4
 248 0034 3A68     		ldr	r2, [r7, #0]
 249 0036 D2B2     		uxtb	r2, r2
 250 0038 42F40072 		orr	r2, r2, #512
 251 003c 1A60     		str	r2, [r3, #0]
 303:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBMR) =
 252              		.loc 1 303 0
 253 003e 7B68     		ldr	r3, [r7, #4]
 254 0040 03F10803 		add	r3, r3, #8
 304:C:/StellarisWare/driverlib\timer.c ****         ((ulConfig >> 8) & 255) | TIMER_TBMR_TBPWMIE;
 255              		.loc 1 304 0
 256 0044 3A68     		ldr	r2, [r7, #0]
 257 0046 4FEA1222 		lsr	r2, r2, #8
 258 004a D2B2     		uxtb	r2, r2
 259 004c 42F40072 		orr	r2, r2, #512
 303:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBMR) =
 260              		.loc 1 303 0
 261 0050 1A60     		str	r2, [r3, #0]
 305:C:/StellarisWare/driverlib\timer.c **** }
 262              		.loc 1 305 0
 263 0052 07F10C07 		add	r7, r7, #12
 264 0056 BD46     		mov	sp, r7
 265 0058 80BC     		pop	{r7}
 266 005a 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE3:
 270              		.section	.text.TimerControlLevel,"ax",%progbits
 271              		.align	2
 272              		.global	TimerControlLevel
 273              		.thumb
 274              		.thumb_func
 276              	TimerControlLevel:
 277              	.LFB4:
 306:C:/StellarisWare/driverlib\timer.c **** 
 307:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 308:C:/StellarisWare/driverlib\timer.c **** //
 309:C:/StellarisWare/driverlib\timer.c **** //! Controls the output level.
 310:C:/StellarisWare/driverlib\timer.c **** //!
 311:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 312:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to adjust; must be one of \b TIMER_A,
 313:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B, or \b TIMER_BOTH.
 314:C:/StellarisWare/driverlib\timer.c **** //! \param bInvert specifies the output level.
 315:C:/StellarisWare/driverlib\timer.c **** //!
 316:C:/StellarisWare/driverlib\timer.c **** //! This function configures the PWM output level for the specified timer.  If
 317:C:/StellarisWare/driverlib\timer.c **** //! the \e bInvert parameter is \b true, then the timer's output is made active
 318:C:/StellarisWare/driverlib\timer.c **** //! low; otherwise, it is made active high.
 319:C:/StellarisWare/driverlib\timer.c **** //!
 320:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 321:C:/StellarisWare/driverlib\timer.c **** //
 322:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 323:C:/StellarisWare/driverlib\timer.c **** void
 324:C:/StellarisWare/driverlib\timer.c **** TimerControlLevel(unsigned long ulBase, unsigned long ulTimer,
 325:C:/StellarisWare/driverlib\timer.c ****                   tBoolean bInvert)
 326:C:/StellarisWare/driverlib\timer.c **** {
 278              		.loc 1 326 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 16
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283 0000 80B4     		push	{r7}
 284              	.LCFI12:
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 7, -4
 287 0002 85B0     		sub	sp, sp, #20
 288              	.LCFI13:
 289              		.cfi_def_cfa_offset 24
 290 0004 00AF     		add	r7, sp, #0
 291              	.LCFI14:
 292              		.cfi_def_cfa_register 7
 293 0006 F860     		str	r0, [r7, #12]
 294 0008 B960     		str	r1, [r7, #8]
 295 000a 1346     		mov	r3, r2
 296 000c FB71     		strb	r3, [r7, #7]
 327:C:/StellarisWare/driverlib\timer.c ****     //
 328:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 329:C:/StellarisWare/driverlib\timer.c ****     //
 330:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 331:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 332:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 333:C:/StellarisWare/driverlib\timer.c **** 
 334:C:/StellarisWare/driverlib\timer.c ****     //
 335:C:/StellarisWare/driverlib\timer.c ****     // Set the output levels as requested.
 336:C:/StellarisWare/driverlib\timer.c ****     //
 337:C:/StellarisWare/driverlib\timer.c ****     ulTimer &= TIMER_CTL_TAPWML | TIMER_CTL_TBPWML;
 297              		.loc 1 337 0
 298 000e BA68     		ldr	r2, [r7, #8]
 299 0010 44F24003 		movw	r3, #16448
 300 0014 1340     		ands	r3, r3, r2
 301 0016 BB60     		str	r3, [r7, #8]
 338:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) = (bInvert ?
 302              		.loc 1 338 0
 303 0018 FB68     		ldr	r3, [r7, #12]
 304 001a 03F10C03 		add	r3, r3, #12
 305 001e 1A46     		mov	r2, r3
 339:C:/StellarisWare/driverlib\timer.c ****                                    (HWREG(ulBase + TIMER_O_CTL) | ulTimer) :
 306              		.loc 1 339 0
 307 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 308 0022 002B     		cmp	r3, #0
 309 0024 06D0     		beq	.L10
 310              		.loc 1 339 0 is_stmt 0 discriminator 1
 311 0026 FB68     		ldr	r3, [r7, #12]
 312 0028 03F10C03 		add	r3, r3, #12
 313 002c 1968     		ldr	r1, [r3, #0]
 314 002e BB68     		ldr	r3, [r7, #8]
 315 0030 0B43     		orrs	r3, r3, r1
 316 0032 07E0     		b	.L11
 317              	.L10:
 340:C:/StellarisWare/driverlib\timer.c ****                                    (HWREG(ulBase + TIMER_O_CTL) & ~(ulTimer)));
 318              		.loc 1 340 0 is_stmt 1 discriminator 2
 319 0034 FB68     		ldr	r3, [r7, #12]
 320 0036 03F10C03 		add	r3, r3, #12
 321 003a 1968     		ldr	r1, [r3, #0]
 322 003c BB68     		ldr	r3, [r7, #8]
 323 003e 6FEA0303 		mvn	r3, r3
 339:C:/StellarisWare/driverlib\timer.c ****                                    (HWREG(ulBase + TIMER_O_CTL) | ulTimer) :
 324              		.loc 1 339 0 discriminator 2
 325 0042 0B40     		ands	r3, r3, r1
 326              	.L11:
 338:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) = (bInvert ?
 327              		.loc 1 338 0
 328 0044 1360     		str	r3, [r2, #0]
 341:C:/StellarisWare/driverlib\timer.c **** }
 329              		.loc 1 341 0
 330 0046 07F11407 		add	r7, r7, #20
 331 004a BD46     		mov	sp, r7
 332 004c 80BC     		pop	{r7}
 333 004e 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE4:
 337              		.section	.text.TimerControlTrigger,"ax",%progbits
 338              		.align	2
 339              		.global	TimerControlTrigger
 340              		.thumb
 341              		.thumb_func
 343              	TimerControlTrigger:
 344              	.LFB5:
 342:C:/StellarisWare/driverlib\timer.c **** 
 343:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 344:C:/StellarisWare/driverlib\timer.c **** //
 345:C:/StellarisWare/driverlib\timer.c **** //! Enables or disables the ADC trigger output.
 346:C:/StellarisWare/driverlib\timer.c **** //!
 347:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 348:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer to adjust; must be one of \b TIMER_A,
 349:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B, or \b TIMER_BOTH.
 350:C:/StellarisWare/driverlib\timer.c **** //! \param bEnable specifies the desired ADC trigger state.
 351:C:/StellarisWare/driverlib\timer.c **** //!
 352:C:/StellarisWare/driverlib\timer.c **** //! This function controls the ADC trigger output for the specified timer.  If
 353:C:/StellarisWare/driverlib\timer.c **** //! the \e bEnable parameter is \b true, then the timer's ADC output trigger is
 354:C:/StellarisWare/driverlib\timer.c **** //! enabled; otherwise it is disabled.
 355:C:/StellarisWare/driverlib\timer.c **** //!
 356:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 357:C:/StellarisWare/driverlib\timer.c **** //
 358:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 359:C:/StellarisWare/driverlib\timer.c **** void
 360:C:/StellarisWare/driverlib\timer.c **** TimerControlTrigger(unsigned long ulBase, unsigned long ulTimer,
 361:C:/StellarisWare/driverlib\timer.c ****                     tBoolean bEnable)
 362:C:/StellarisWare/driverlib\timer.c **** {
 345              		.loc 1 362 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 16
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350 0000 80B4     		push	{r7}
 351              	.LCFI15:
 352              		.cfi_def_cfa_offset 4
 353              		.cfi_offset 7, -4
 354 0002 85B0     		sub	sp, sp, #20
 355              	.LCFI16:
 356              		.cfi_def_cfa_offset 24
 357 0004 00AF     		add	r7, sp, #0
 358              	.LCFI17:
 359              		.cfi_def_cfa_register 7
 360 0006 F860     		str	r0, [r7, #12]
 361 0008 B960     		str	r1, [r7, #8]
 362 000a 1346     		mov	r3, r2
 363 000c FB71     		strb	r3, [r7, #7]
 363:C:/StellarisWare/driverlib\timer.c ****     //
 364:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 365:C:/StellarisWare/driverlib\timer.c ****     //
 366:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 367:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 368:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 369:C:/StellarisWare/driverlib\timer.c **** 
 370:C:/StellarisWare/driverlib\timer.c ****     //
 371:C:/StellarisWare/driverlib\timer.c ****     // Set the trigger output as requested.
 372:C:/StellarisWare/driverlib\timer.c ****     // Set the ADC trigger output as requested.
 373:C:/StellarisWare/driverlib\timer.c ****     //
 374:C:/StellarisWare/driverlib\timer.c ****     ulTimer &= TIMER_CTL_TAOTE | TIMER_CTL_TBOTE;
 364              		.loc 1 374 0
 365 000e BA68     		ldr	r2, [r7, #8]
 366 0010 42F22003 		movw	r3, #8224
 367 0014 1340     		ands	r3, r3, r2
 368 0016 BB60     		str	r3, [r7, #8]
 375:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) = (bEnable ?
 369              		.loc 1 375 0
 370 0018 FB68     		ldr	r3, [r7, #12]
 371 001a 03F10C03 		add	r3, r3, #12
 372 001e 1A46     		mov	r2, r3
 376:C:/StellarisWare/driverlib\timer.c ****                                    (HWREG(ulBase + TIMER_O_CTL) | ulTimer) :
 373              		.loc 1 376 0
 374 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 375 0022 002B     		cmp	r3, #0
 376 0024 06D0     		beq	.L13
 377              		.loc 1 376 0 is_stmt 0 discriminator 1
 378 0026 FB68     		ldr	r3, [r7, #12]
 379 0028 03F10C03 		add	r3, r3, #12
 380 002c 1968     		ldr	r1, [r3, #0]
 381 002e BB68     		ldr	r3, [r7, #8]
 382 0030 0B43     		orrs	r3, r3, r1
 383 0032 07E0     		b	.L14
 384              	.L13:
 377:C:/StellarisWare/driverlib\timer.c ****                                    (HWREG(ulBase + TIMER_O_CTL) & ~(ulTimer)));
 385              		.loc 1 377 0 is_stmt 1 discriminator 2
 386 0034 FB68     		ldr	r3, [r7, #12]
 387 0036 03F10C03 		add	r3, r3, #12
 388 003a 1968     		ldr	r1, [r3, #0]
 389 003c BB68     		ldr	r3, [r7, #8]
 390 003e 6FEA0303 		mvn	r3, r3
 376:C:/StellarisWare/driverlib\timer.c ****                                    (HWREG(ulBase + TIMER_O_CTL) | ulTimer) :
 391              		.loc 1 376 0 discriminator 2
 392 0042 0B40     		ands	r3, r3, r1
 393              	.L14:
 375:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) = (bEnable ?
 394              		.loc 1 375 0
 395 0044 1360     		str	r3, [r2, #0]
 378:C:/StellarisWare/driverlib\timer.c **** }
 396              		.loc 1 378 0
 397 0046 07F11407 		add	r7, r7, #20
 398 004a BD46     		mov	sp, r7
 399 004c 80BC     		pop	{r7}
 400 004e 7047     		bx	lr
 401              		.cfi_endproc
 402              	.LFE5:
 404              		.section	.text.TimerControlEvent,"ax",%progbits
 405              		.align	2
 406              		.global	TimerControlEvent
 407              		.thumb
 408              		.thumb_func
 410              	TimerControlEvent:
 411              	.LFB6:
 379:C:/StellarisWare/driverlib\timer.c **** 
 380:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 381:C:/StellarisWare/driverlib\timer.c **** //
 382:C:/StellarisWare/driverlib\timer.c **** //! Controls the event type.
 383:C:/StellarisWare/driverlib\timer.c **** //!
 384:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 385:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to be adjusted; must be one of
 386:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_A, \b TIMER_B, or \b TIMER_BOTH.
 387:C:/StellarisWare/driverlib\timer.c **** //! \param ulEvent specifies the type of event; must be one of
 388:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_EVENT_POS_EDGE, \b TIMER_EVENT_NEG_EDGE, or
 389:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_EVENT_BOTH_EDGES.
 390:C:/StellarisWare/driverlib\timer.c **** //!
 391:C:/StellarisWare/driverlib\timer.c **** //! This function configures the signal edge(s) that triggers the timer when
 392:C:/StellarisWare/driverlib\timer.c **** //! in capture mode.
 393:C:/StellarisWare/driverlib\timer.c **** //!
 394:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 395:C:/StellarisWare/driverlib\timer.c **** //
 396:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 397:C:/StellarisWare/driverlib\timer.c **** void
 398:C:/StellarisWare/driverlib\timer.c **** TimerControlEvent(unsigned long ulBase, unsigned long ulTimer,
 399:C:/StellarisWare/driverlib\timer.c ****                   unsigned long ulEvent)
 400:C:/StellarisWare/driverlib\timer.c **** {
 412              		.loc 1 400 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 16
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 80B4     		push	{r7}
 418              	.LCFI18:
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 7, -4
 421 0002 85B0     		sub	sp, sp, #20
 422              	.LCFI19:
 423              		.cfi_def_cfa_offset 24
 424 0004 00AF     		add	r7, sp, #0
 425              	.LCFI20:
 426              		.cfi_def_cfa_register 7
 427 0006 F860     		str	r0, [r7, #12]
 428 0008 B960     		str	r1, [r7, #8]
 429 000a 7A60     		str	r2, [r7, #4]
 401:C:/StellarisWare/driverlib\timer.c ****     //
 402:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 403:C:/StellarisWare/driverlib\timer.c ****     //
 404:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 405:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 406:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 407:C:/StellarisWare/driverlib\timer.c **** 
 408:C:/StellarisWare/driverlib\timer.c ****     //
 409:C:/StellarisWare/driverlib\timer.c ****     // Set the event type.
 410:C:/StellarisWare/driverlib\timer.c ****     //
 411:C:/StellarisWare/driverlib\timer.c ****     ulTimer &= TIMER_CTL_TAEVENT_M | TIMER_CTL_TBEVENT_M;
 430              		.loc 1 411 0
 431 000c BA68     		ldr	r2, [r7, #8]
 432 000e 40F60C43 		movw	r3, #3084
 433 0012 1340     		ands	r3, r3, r2
 434 0014 BB60     		str	r3, [r7, #8]
 412:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) = ((HWREG(ulBase + TIMER_O_CTL) & ~ulTimer) |
 435              		.loc 1 412 0
 436 0016 FB68     		ldr	r3, [r7, #12]
 437 0018 03F10C03 		add	r3, r3, #12
 438 001c FA68     		ldr	r2, [r7, #12]
 439 001e 02F10C02 		add	r2, r2, #12
 440 0022 1168     		ldr	r1, [r2, #0]
 441 0024 BA68     		ldr	r2, [r7, #8]
 442 0026 6FEA0202 		mvn	r2, r2
 443 002a 1140     		ands	r1, r1, r2
 413:C:/StellarisWare/driverlib\timer.c ****                                    (ulEvent & ulTimer));
 444              		.loc 1 413 0
 445 002c 7868     		ldr	r0, [r7, #4]
 446 002e BA68     		ldr	r2, [r7, #8]
 447 0030 0240     		ands	r2, r2, r0
 412:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) = ((HWREG(ulBase + TIMER_O_CTL) & ~ulTimer) |
 448              		.loc 1 412 0
 449 0032 0A43     		orrs	r2, r2, r1
 450 0034 1A60     		str	r2, [r3, #0]
 414:C:/StellarisWare/driverlib\timer.c **** }
 451              		.loc 1 414 0
 452 0036 07F11407 		add	r7, r7, #20
 453 003a BD46     		mov	sp, r7
 454 003c 80BC     		pop	{r7}
 455 003e 7047     		bx	lr
 456              		.cfi_endproc
 457              	.LFE6:
 459              		.section	.text.TimerControlStall,"ax",%progbits
 460              		.align	2
 461              		.global	TimerControlStall
 462              		.thumb
 463              		.thumb_func
 465              	TimerControlStall:
 466              	.LFB7:
 415:C:/StellarisWare/driverlib\timer.c **** 
 416:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 417:C:/StellarisWare/driverlib\timer.c **** //
 418:C:/StellarisWare/driverlib\timer.c **** //! Controls the stall handling.
 419:C:/StellarisWare/driverlib\timer.c **** //!
 420:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 421:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to be adjusted; must be one of
 422:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_A, \b TIMER_B, or \b TIMER_BOTH.
 423:C:/StellarisWare/driverlib\timer.c **** //! \param bStall specifies the response to a stall signal.
 424:C:/StellarisWare/driverlib\timer.c **** //!
 425:C:/StellarisWare/driverlib\timer.c **** //! This function controls the stall response for the specified timer.  If the
 426:C:/StellarisWare/driverlib\timer.c **** //! \e bStall parameter is \b true, then the timer stops counting if the
 427:C:/StellarisWare/driverlib\timer.c **** //! processor enters debug mode; otherwise the timer keeps running while in
 428:C:/StellarisWare/driverlib\timer.c **** //! debug mode.
 429:C:/StellarisWare/driverlib\timer.c **** //!
 430:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 431:C:/StellarisWare/driverlib\timer.c **** //
 432:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 433:C:/StellarisWare/driverlib\timer.c **** void
 434:C:/StellarisWare/driverlib\timer.c **** TimerControlStall(unsigned long ulBase, unsigned long ulTimer,
 435:C:/StellarisWare/driverlib\timer.c ****                   tBoolean bStall)
 436:C:/StellarisWare/driverlib\timer.c **** {
 467              		.loc 1 436 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 16
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              	.LCFI21:
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 85B0     		sub	sp, sp, #20
 477              	.LCFI22:
 478              		.cfi_def_cfa_offset 24
 479 0004 00AF     		add	r7, sp, #0
 480              	.LCFI23:
 481              		.cfi_def_cfa_register 7
 482 0006 F860     		str	r0, [r7, #12]
 483 0008 B960     		str	r1, [r7, #8]
 484 000a 1346     		mov	r3, r2
 485 000c FB71     		strb	r3, [r7, #7]
 437:C:/StellarisWare/driverlib\timer.c ****     //
 438:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 439:C:/StellarisWare/driverlib\timer.c ****     //
 440:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 441:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 442:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 443:C:/StellarisWare/driverlib\timer.c **** 
 444:C:/StellarisWare/driverlib\timer.c ****     //
 445:C:/StellarisWare/driverlib\timer.c ****     // Set the stall mode.
 446:C:/StellarisWare/driverlib\timer.c ****     //
 447:C:/StellarisWare/driverlib\timer.c ****     ulTimer &= TIMER_CTL_TASTALL | TIMER_CTL_TBSTALL;
 486              		.loc 1 447 0
 487 000e BA68     		ldr	r2, [r7, #8]
 488 0010 40F20223 		movw	r3, #514
 489 0014 1340     		ands	r3, r3, r2
 490 0016 BB60     		str	r3, [r7, #8]
 448:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) = (bStall ?
 491              		.loc 1 448 0
 492 0018 FB68     		ldr	r3, [r7, #12]
 493 001a 03F10C03 		add	r3, r3, #12
 494 001e 1A46     		mov	r2, r3
 449:C:/StellarisWare/driverlib\timer.c ****                                    (HWREG(ulBase + TIMER_O_CTL) | ulTimer) :
 495              		.loc 1 449 0
 496 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 497 0022 002B     		cmp	r3, #0
 498 0024 06D0     		beq	.L17
 499              		.loc 1 449 0 is_stmt 0 discriminator 1
 500 0026 FB68     		ldr	r3, [r7, #12]
 501 0028 03F10C03 		add	r3, r3, #12
 502 002c 1968     		ldr	r1, [r3, #0]
 503 002e BB68     		ldr	r3, [r7, #8]
 504 0030 0B43     		orrs	r3, r3, r1
 505 0032 07E0     		b	.L18
 506              	.L17:
 450:C:/StellarisWare/driverlib\timer.c ****                                    (HWREG(ulBase + TIMER_O_CTL) & ~(ulTimer)));
 507              		.loc 1 450 0 is_stmt 1 discriminator 2
 508 0034 FB68     		ldr	r3, [r7, #12]
 509 0036 03F10C03 		add	r3, r3, #12
 510 003a 1968     		ldr	r1, [r3, #0]
 511 003c BB68     		ldr	r3, [r7, #8]
 512 003e 6FEA0303 		mvn	r3, r3
 449:C:/StellarisWare/driverlib\timer.c ****                                    (HWREG(ulBase + TIMER_O_CTL) | ulTimer) :
 513              		.loc 1 449 0 discriminator 2
 514 0042 0B40     		ands	r3, r3, r1
 515              	.L18:
 448:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) = (bStall ?
 516              		.loc 1 448 0
 517 0044 1360     		str	r3, [r2, #0]
 451:C:/StellarisWare/driverlib\timer.c **** }
 518              		.loc 1 451 0
 519 0046 07F11407 		add	r7, r7, #20
 520 004a BD46     		mov	sp, r7
 521 004c 80BC     		pop	{r7}
 522 004e 7047     		bx	lr
 523              		.cfi_endproc
 524              	.LFE7:
 526              		.section	.text.TimerControlWaitOnTrigger,"ax",%progbits
 527              		.align	2
 528              		.global	TimerControlWaitOnTrigger
 529              		.thumb
 530              		.thumb_func
 532              	TimerControlWaitOnTrigger:
 533              	.LFB8:
 452:C:/StellarisWare/driverlib\timer.c **** 
 453:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 454:C:/StellarisWare/driverlib\timer.c **** //
 455:C:/StellarisWare/driverlib\timer.c **** //! Controls the wait on trigger handling.
 456:C:/StellarisWare/driverlib\timer.c **** //!
 457:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 458:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to be adjusted; must be one of
 459:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_A, \b TIMER_B, or \b TIMER_BOTH.
 460:C:/StellarisWare/driverlib\timer.c **** //! \param bWait specifies if the timer should wait for a trigger input.
 461:C:/StellarisWare/driverlib\timer.c **** //!
 462:C:/StellarisWare/driverlib\timer.c **** //! This function controls whether or not a timer waits for a trigger input to
 463:C:/StellarisWare/driverlib\timer.c **** //! start counting.  When enabled, the previous timer in the trigger chain must
 464:C:/StellarisWare/driverlib\timer.c **** //! count to its timeout in order for this timer to start counting.  Refer to
 465:C:/StellarisWare/driverlib\timer.c **** //! the part's data sheet for a description of the trigger chain.
 466:C:/StellarisWare/driverlib\timer.c **** //!
 467:C:/StellarisWare/driverlib\timer.c **** //! \note This functionality is not available on all parts.  This function
 468:C:/StellarisWare/driverlib\timer.c **** //! should not be used for Timer 0A or Wide Timer 0A.
 469:C:/StellarisWare/driverlib\timer.c **** //!
 470:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 471:C:/StellarisWare/driverlib\timer.c **** //
 472:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 473:C:/StellarisWare/driverlib\timer.c **** void
 474:C:/StellarisWare/driverlib\timer.c **** TimerControlWaitOnTrigger(unsigned long ulBase, unsigned long ulTimer,
 475:C:/StellarisWare/driverlib\timer.c ****                           tBoolean bWait)
 476:C:/StellarisWare/driverlib\timer.c **** {
 534              		.loc 1 476 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 16
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539 0000 80B4     		push	{r7}
 540              	.LCFI24:
 541              		.cfi_def_cfa_offset 4
 542              		.cfi_offset 7, -4
 543 0002 85B0     		sub	sp, sp, #20
 544              	.LCFI25:
 545              		.cfi_def_cfa_offset 24
 546 0004 00AF     		add	r7, sp, #0
 547              	.LCFI26:
 548              		.cfi_def_cfa_register 7
 549 0006 F860     		str	r0, [r7, #12]
 550 0008 B960     		str	r1, [r7, #8]
 551 000a 1346     		mov	r3, r2
 552 000c FB71     		strb	r3, [r7, #7]
 477:C:/StellarisWare/driverlib\timer.c ****     //
 478:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 479:C:/StellarisWare/driverlib\timer.c ****     //
 480:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 481:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 482:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 483:C:/StellarisWare/driverlib\timer.c **** 
 484:C:/StellarisWare/driverlib\timer.c ****     //
 485:C:/StellarisWare/driverlib\timer.c ****     // Set the wait on trigger mode for timer A.
 486:C:/StellarisWare/driverlib\timer.c ****     //
 487:C:/StellarisWare/driverlib\timer.c ****     if((ulTimer & TIMER_A) != 0)
 553              		.loc 1 487 0
 554 000e BB68     		ldr	r3, [r7, #8]
 555 0010 DBB2     		uxtb	r3, r3
 556 0012 002B     		cmp	r3, #0
 557 0014 17D0     		beq	.L20
 488:C:/StellarisWare/driverlib\timer.c ****     {
 489:C:/StellarisWare/driverlib\timer.c ****         if(bWait)
 558              		.loc 1 489 0
 559 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 560 0018 002B     		cmp	r3, #0
 561 001a 0AD0     		beq	.L21
 490:C:/StellarisWare/driverlib\timer.c ****         {
 491:C:/StellarisWare/driverlib\timer.c ****             HWREG(ulBase + TIMER_O_TAMR) |= TIMER_TAMR_TAWOT;
 562              		.loc 1 491 0
 563 001c FB68     		ldr	r3, [r7, #12]
 564 001e 03F10403 		add	r3, r3, #4
 565 0022 FA68     		ldr	r2, [r7, #12]
 566 0024 02F10402 		add	r2, r2, #4
 567 0028 1268     		ldr	r2, [r2, #0]
 568 002a 42F04002 		orr	r2, r2, #64
 569 002e 1A60     		str	r2, [r3, #0]
 570 0030 09E0     		b	.L20
 571              	.L21:
 492:C:/StellarisWare/driverlib\timer.c ****         }
 493:C:/StellarisWare/driverlib\timer.c ****         else
 494:C:/StellarisWare/driverlib\timer.c ****         {
 495:C:/StellarisWare/driverlib\timer.c ****             HWREG(ulBase + TIMER_O_TAMR) &= ~(TIMER_TAMR_TAWOT);
 572              		.loc 1 495 0
 573 0032 FB68     		ldr	r3, [r7, #12]
 574 0034 03F10403 		add	r3, r3, #4
 575 0038 FA68     		ldr	r2, [r7, #12]
 576 003a 02F10402 		add	r2, r2, #4
 577 003e 1268     		ldr	r2, [r2, #0]
 578 0040 22F04002 		bic	r2, r2, #64
 579 0044 1A60     		str	r2, [r3, #0]
 580              	.L20:
 496:C:/StellarisWare/driverlib\timer.c ****         }
 497:C:/StellarisWare/driverlib\timer.c ****     }
 498:C:/StellarisWare/driverlib\timer.c **** 
 499:C:/StellarisWare/driverlib\timer.c ****     //
 500:C:/StellarisWare/driverlib\timer.c ****     // Set the wait on trigger mode for timer B.
 501:C:/StellarisWare/driverlib\timer.c ****     //
 502:C:/StellarisWare/driverlib\timer.c ****     if((ulTimer & TIMER_B) != 0)
 581              		.loc 1 502 0
 582 0046 BB68     		ldr	r3, [r7, #8]
 583 0048 03F47F43 		and	r3, r3, #65280
 584 004c 002B     		cmp	r3, #0
 585 004e 17D0     		beq	.L19
 503:C:/StellarisWare/driverlib\timer.c ****     {
 504:C:/StellarisWare/driverlib\timer.c ****         if(bWait)
 586              		.loc 1 504 0
 587 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 588 0052 002B     		cmp	r3, #0
 589 0054 0AD0     		beq	.L23
 505:C:/StellarisWare/driverlib\timer.c ****         {
 506:C:/StellarisWare/driverlib\timer.c ****             HWREG(ulBase + TIMER_O_TBMR) |= TIMER_TBMR_TBWOT;
 590              		.loc 1 506 0
 591 0056 FB68     		ldr	r3, [r7, #12]
 592 0058 03F10803 		add	r3, r3, #8
 593 005c FA68     		ldr	r2, [r7, #12]
 594 005e 02F10802 		add	r2, r2, #8
 595 0062 1268     		ldr	r2, [r2, #0]
 596 0064 42F04002 		orr	r2, r2, #64
 597 0068 1A60     		str	r2, [r3, #0]
 598 006a 09E0     		b	.L19
 599              	.L23:
 507:C:/StellarisWare/driverlib\timer.c ****         }
 508:C:/StellarisWare/driverlib\timer.c ****         else
 509:C:/StellarisWare/driverlib\timer.c ****         {
 510:C:/StellarisWare/driverlib\timer.c ****             HWREG(ulBase + TIMER_O_TBMR) &= ~(TIMER_TBMR_TBWOT);
 600              		.loc 1 510 0
 601 006c FB68     		ldr	r3, [r7, #12]
 602 006e 03F10803 		add	r3, r3, #8
 603 0072 FA68     		ldr	r2, [r7, #12]
 604 0074 02F10802 		add	r2, r2, #8
 605 0078 1268     		ldr	r2, [r2, #0]
 606 007a 22F04002 		bic	r2, r2, #64
 607 007e 1A60     		str	r2, [r3, #0]
 608              	.L19:
 511:C:/StellarisWare/driverlib\timer.c ****         }
 512:C:/StellarisWare/driverlib\timer.c ****     }
 513:C:/StellarisWare/driverlib\timer.c **** }
 609              		.loc 1 513 0
 610 0080 07F11407 		add	r7, r7, #20
 611 0084 BD46     		mov	sp, r7
 612 0086 80BC     		pop	{r7}
 613 0088 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE8:
 617 008a 00BF     		.section	.text.TimerRTCEnable,"ax",%progbits
 618              		.align	2
 619              		.global	TimerRTCEnable
 620              		.thumb
 621              		.thumb_func
 623              	TimerRTCEnable:
 624              	.LFB9:
 514:C:/StellarisWare/driverlib\timer.c **** 
 515:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 516:C:/StellarisWare/driverlib\timer.c **** //
 517:C:/StellarisWare/driverlib\timer.c **** //! Enable RTC counting.
 518:C:/StellarisWare/driverlib\timer.c **** //!
 519:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 520:C:/StellarisWare/driverlib\timer.c **** //!
 521:C:/StellarisWare/driverlib\timer.c **** //! This function causes the timer to start counting when in RTC mode.  If not
 522:C:/StellarisWare/driverlib\timer.c **** //! configured for RTC mode, this function does nothing.
 523:C:/StellarisWare/driverlib\timer.c **** //!
 524:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 525:C:/StellarisWare/driverlib\timer.c **** //
 526:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 527:C:/StellarisWare/driverlib\timer.c **** void
 528:C:/StellarisWare/driverlib\timer.c **** TimerRTCEnable(unsigned long ulBase)
 529:C:/StellarisWare/driverlib\timer.c **** {
 625              		.loc 1 529 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 8
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630 0000 80B4     		push	{r7}
 631              	.LCFI27:
 632              		.cfi_def_cfa_offset 4
 633              		.cfi_offset 7, -4
 634 0002 83B0     		sub	sp, sp, #12
 635              	.LCFI28:
 636              		.cfi_def_cfa_offset 16
 637 0004 00AF     		add	r7, sp, #0
 638              	.LCFI29:
 639              		.cfi_def_cfa_register 7
 640 0006 7860     		str	r0, [r7, #4]
 530:C:/StellarisWare/driverlib\timer.c ****     //
 531:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 532:C:/StellarisWare/driverlib\timer.c ****     //
 533:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 534:C:/StellarisWare/driverlib\timer.c **** 
 535:C:/StellarisWare/driverlib\timer.c ****     //
 536:C:/StellarisWare/driverlib\timer.c ****     // Enable RTC counting.
 537:C:/StellarisWare/driverlib\timer.c ****     //
 538:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) |= TIMER_CTL_RTCEN;
 641              		.loc 1 538 0
 642 0008 7B68     		ldr	r3, [r7, #4]
 643 000a 03F10C03 		add	r3, r3, #12
 644 000e 7A68     		ldr	r2, [r7, #4]
 645 0010 02F10C02 		add	r2, r2, #12
 646 0014 1268     		ldr	r2, [r2, #0]
 647 0016 42F01002 		orr	r2, r2, #16
 648 001a 1A60     		str	r2, [r3, #0]
 539:C:/StellarisWare/driverlib\timer.c **** }
 649              		.loc 1 539 0
 650 001c 07F10C07 		add	r7, r7, #12
 651 0020 BD46     		mov	sp, r7
 652 0022 80BC     		pop	{r7}
 653 0024 7047     		bx	lr
 654              		.cfi_endproc
 655              	.LFE9:
 657 0026 00BF     		.section	.text.TimerRTCDisable,"ax",%progbits
 658              		.align	2
 659              		.global	TimerRTCDisable
 660              		.thumb
 661              		.thumb_func
 663              	TimerRTCDisable:
 664              	.LFB10:
 540:C:/StellarisWare/driverlib\timer.c **** 
 541:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 542:C:/StellarisWare/driverlib\timer.c **** //
 543:C:/StellarisWare/driverlib\timer.c **** //! Disable RTC counting.
 544:C:/StellarisWare/driverlib\timer.c **** //!
 545:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 546:C:/StellarisWare/driverlib\timer.c **** //!
 547:C:/StellarisWare/driverlib\timer.c **** //! This function causes the timer to stop counting when in RTC mode.
 548:C:/StellarisWare/driverlib\timer.c **** //!
 549:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 550:C:/StellarisWare/driverlib\timer.c **** //
 551:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 552:C:/StellarisWare/driverlib\timer.c **** void
 553:C:/StellarisWare/driverlib\timer.c **** TimerRTCDisable(unsigned long ulBase)
 554:C:/StellarisWare/driverlib\timer.c **** {
 665              		.loc 1 554 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 8
 668              		@ frame_needed = 1, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670 0000 80B4     		push	{r7}
 671              	.LCFI30:
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 7, -4
 674 0002 83B0     		sub	sp, sp, #12
 675              	.LCFI31:
 676              		.cfi_def_cfa_offset 16
 677 0004 00AF     		add	r7, sp, #0
 678              	.LCFI32:
 679              		.cfi_def_cfa_register 7
 680 0006 7860     		str	r0, [r7, #4]
 555:C:/StellarisWare/driverlib\timer.c ****     //
 556:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 557:C:/StellarisWare/driverlib\timer.c ****     //
 558:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 559:C:/StellarisWare/driverlib\timer.c **** 
 560:C:/StellarisWare/driverlib\timer.c ****     //
 561:C:/StellarisWare/driverlib\timer.c ****     // Disable RTC counting.
 562:C:/StellarisWare/driverlib\timer.c ****     //
 563:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) &= ~(TIMER_CTL_RTCEN);
 681              		.loc 1 563 0
 682 0008 7B68     		ldr	r3, [r7, #4]
 683 000a 03F10C03 		add	r3, r3, #12
 684 000e 7A68     		ldr	r2, [r7, #4]
 685 0010 02F10C02 		add	r2, r2, #12
 686 0014 1268     		ldr	r2, [r2, #0]
 687 0016 22F01002 		bic	r2, r2, #16
 688 001a 1A60     		str	r2, [r3, #0]
 564:C:/StellarisWare/driverlib\timer.c **** }
 689              		.loc 1 564 0
 690 001c 07F10C07 		add	r7, r7, #12
 691 0020 BD46     		mov	sp, r7
 692 0022 80BC     		pop	{r7}
 693 0024 7047     		bx	lr
 694              		.cfi_endproc
 695              	.LFE10:
 697 0026 00BF     		.section	.text.TimerPrescaleSet,"ax",%progbits
 698              		.align	2
 699              		.global	TimerPrescaleSet
 700              		.thumb
 701              		.thumb_func
 703              	TimerPrescaleSet:
 704              	.LFB11:
 565:C:/StellarisWare/driverlib\timer.c **** 
 566:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 567:C:/StellarisWare/driverlib\timer.c **** //
 568:C:/StellarisWare/driverlib\timer.c **** //! Set the timer prescale value.
 569:C:/StellarisWare/driverlib\timer.c **** //!
 570:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 571:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to adjust; must be one of \b TIMER_A,
 572:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B, or \b TIMER_BOTH.
 573:C:/StellarisWare/driverlib\timer.c **** //! \param ulValue is the timer prescale value which must be between 0 and 255
 574:C:/StellarisWare/driverlib\timer.c **** //! (inclusive) for 16/32-bit timers and between 0 and 65535 (inclusive) for
 575:C:/StellarisWare/driverlib\timer.c **** //! 32/64-bit timers.
 576:C:/StellarisWare/driverlib\timer.c **** //!
 577:C:/StellarisWare/driverlib\timer.c **** //! This function configures the value of the input clock prescaler.  The
 578:C:/StellarisWare/driverlib\timer.c **** //! prescaler is only operational when in half-width mode and is used to extend
 579:C:/StellarisWare/driverlib\timer.c **** //! the range of the half-width timer modes. The prescaler provides the least
 580:C:/StellarisWare/driverlib\timer.c **** //! significant bits when counting down in periodic and one-shot modes; in all
 581:C:/StellarisWare/driverlib\timer.c **** //! other modes, the prescaler provides the most significant bits.
 582:C:/StellarisWare/driverlib\timer.c **** //!
 583:C:/StellarisWare/driverlib\timer.c **** //! \note The availability of the prescaler varies with the Stellaris part and
 584:C:/StellarisWare/driverlib\timer.c **** //! timer mode in use.  Please consult the datasheet for the part you are using
 585:C:/StellarisWare/driverlib\timer.c **** //! to determine whether this support is available.
 586:C:/StellarisWare/driverlib\timer.c **** //!
 587:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 588:C:/StellarisWare/driverlib\timer.c **** //
 589:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 590:C:/StellarisWare/driverlib\timer.c **** void
 591:C:/StellarisWare/driverlib\timer.c **** TimerPrescaleSet(unsigned long ulBase, unsigned long ulTimer,
 592:C:/StellarisWare/driverlib\timer.c ****                  unsigned long ulValue)
 593:C:/StellarisWare/driverlib\timer.c **** {
 705              		.loc 1 593 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 16
 708              		@ frame_needed = 1, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 710 0000 80B4     		push	{r7}
 711              	.LCFI33:
 712              		.cfi_def_cfa_offset 4
 713              		.cfi_offset 7, -4
 714 0002 85B0     		sub	sp, sp, #20
 715              	.LCFI34:
 716              		.cfi_def_cfa_offset 24
 717 0004 00AF     		add	r7, sp, #0
 718              	.LCFI35:
 719              		.cfi_def_cfa_register 7
 720 0006 F860     		str	r0, [r7, #12]
 721 0008 B960     		str	r1, [r7, #8]
 722 000a 7A60     		str	r2, [r7, #4]
 594:C:/StellarisWare/driverlib\timer.c ****     //
 595:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 596:C:/StellarisWare/driverlib\timer.c ****     //
 597:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 598:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 599:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 600:C:/StellarisWare/driverlib\timer.c ****     ASSERT(ulValue < 256);
 601:C:/StellarisWare/driverlib\timer.c **** 
 602:C:/StellarisWare/driverlib\timer.c ****     //
 603:C:/StellarisWare/driverlib\timer.c ****     // Set the timer A prescaler if requested.
 604:C:/StellarisWare/driverlib\timer.c ****     //
 605:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_A)
 723              		.loc 1 605 0
 724 000c BB68     		ldr	r3, [r7, #8]
 725 000e DBB2     		uxtb	r3, r3
 726 0010 002B     		cmp	r3, #0
 727 0012 04D0     		beq	.L27
 606:C:/StellarisWare/driverlib\timer.c ****     {
 607:C:/StellarisWare/driverlib\timer.c ****         HWREG(ulBase + TIMER_O_TAPR) = ulValue;
 728              		.loc 1 607 0
 729 0014 FB68     		ldr	r3, [r7, #12]
 730 0016 03F13803 		add	r3, r3, #56
 731 001a 7A68     		ldr	r2, [r7, #4]
 732 001c 1A60     		str	r2, [r3, #0]
 733              	.L27:
 608:C:/StellarisWare/driverlib\timer.c ****     }
 609:C:/StellarisWare/driverlib\timer.c **** 
 610:C:/StellarisWare/driverlib\timer.c ****     //
 611:C:/StellarisWare/driverlib\timer.c ****     // Set the timer B prescaler if requested.
 612:C:/StellarisWare/driverlib\timer.c ****     //
 613:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_B)
 734              		.loc 1 613 0
 735 001e BB68     		ldr	r3, [r7, #8]
 736 0020 03F47F43 		and	r3, r3, #65280
 737 0024 002B     		cmp	r3, #0
 738 0026 04D0     		beq	.L26
 614:C:/StellarisWare/driverlib\timer.c ****     {
 615:C:/StellarisWare/driverlib\timer.c ****         HWREG(ulBase + TIMER_O_TBPR) = ulValue;
 739              		.loc 1 615 0
 740 0028 FB68     		ldr	r3, [r7, #12]
 741 002a 03F13C03 		add	r3, r3, #60
 742 002e 7A68     		ldr	r2, [r7, #4]
 743 0030 1A60     		str	r2, [r3, #0]
 744              	.L26:
 616:C:/StellarisWare/driverlib\timer.c ****     }
 617:C:/StellarisWare/driverlib\timer.c **** }
 745              		.loc 1 617 0
 746 0032 07F11407 		add	r7, r7, #20
 747 0036 BD46     		mov	sp, r7
 748 0038 80BC     		pop	{r7}
 749 003a 7047     		bx	lr
 750              		.cfi_endproc
 751              	.LFE11:
 753              		.section	.text.TimerPrescaleGet,"ax",%progbits
 754              		.align	2
 755              		.global	TimerPrescaleGet
 756              		.thumb
 757              		.thumb_func
 759              	TimerPrescaleGet:
 760              	.LFB12:
 618:C:/StellarisWare/driverlib\timer.c **** 
 619:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 620:C:/StellarisWare/driverlib\timer.c **** //
 621:C:/StellarisWare/driverlib\timer.c **** //! Get the timer prescale value.
 622:C:/StellarisWare/driverlib\timer.c **** //!
 623:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 624:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer; must be one of \b TIMER_A or
 625:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B.
 626:C:/StellarisWare/driverlib\timer.c **** //!
 627:C:/StellarisWare/driverlib\timer.c **** //! This function gets the value of the input clock prescaler.  The prescaler
 628:C:/StellarisWare/driverlib\timer.c **** //! is only operational when in half-width mode and is used to extend the range
 629:C:/StellarisWare/driverlib\timer.c **** //! of the half-width timer modes. The prescaler provides the least significant
 630:C:/StellarisWare/driverlib\timer.c **** //! bits when counting down in periodic and one-shot modes; in all other modes,
 631:C:/StellarisWare/driverlib\timer.c **** //! the prescaler provides the most significant bits.
 632:C:/StellarisWare/driverlib\timer.c **** //!
 633:C:/StellarisWare/driverlib\timer.c **** //! \note The availability of the prescaler varies with the Stellaris part and
 634:C:/StellarisWare/driverlib\timer.c **** //! timer mode in use.  Please consult the datasheet for the part you are using
 635:C:/StellarisWare/driverlib\timer.c **** //! to determine whether this support is available.
 636:C:/StellarisWare/driverlib\timer.c **** //!
 637:C:/StellarisWare/driverlib\timer.c **** //! \return The value of the timer prescaler.
 638:C:/StellarisWare/driverlib\timer.c **** //
 639:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 640:C:/StellarisWare/driverlib\timer.c **** unsigned long
 641:C:/StellarisWare/driverlib\timer.c **** TimerPrescaleGet(unsigned long ulBase, unsigned long ulTimer)
 642:C:/StellarisWare/driverlib\timer.c **** {
 761              		.loc 1 642 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 8
 764              		@ frame_needed = 1, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766 0000 80B4     		push	{r7}
 767              	.LCFI36:
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 0002 83B0     		sub	sp, sp, #12
 771              	.LCFI37:
 772              		.cfi_def_cfa_offset 16
 773 0004 00AF     		add	r7, sp, #0
 774              	.LCFI38:
 775              		.cfi_def_cfa_register 7
 776 0006 7860     		str	r0, [r7, #4]
 777 0008 3960     		str	r1, [r7, #0]
 643:C:/StellarisWare/driverlib\timer.c ****     //
 644:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 645:C:/StellarisWare/driverlib\timer.c ****     //
 646:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 647:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 648:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 649:C:/StellarisWare/driverlib\timer.c **** 
 650:C:/StellarisWare/driverlib\timer.c ****     //
 651:C:/StellarisWare/driverlib\timer.c ****     // Return the appropriate prescale value.
 652:C:/StellarisWare/driverlib\timer.c ****     //
 653:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAPR) :
 778              		.loc 1 653 0
 779 000a 3B68     		ldr	r3, [r7, #0]
 780 000c FF2B     		cmp	r3, #255
 781 000e 04D1     		bne	.L30
 782              		.loc 1 653 0 is_stmt 0 discriminator 1
 783 0010 7B68     		ldr	r3, [r7, #4]
 784 0012 03F13803 		add	r3, r3, #56
 785 0016 1B68     		ldr	r3, [r3, #0]
 786 0018 03E0     		b	.L31
 787              	.L30:
 654:C:/StellarisWare/driverlib\timer.c ****            HWREG(ulBase + TIMER_O_TBPR));
 788              		.loc 1 654 0 is_stmt 1 discriminator 2
 789 001a 7B68     		ldr	r3, [r7, #4]
 790 001c 03F13C03 		add	r3, r3, #60
 653:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAPR) :
 791              		.loc 1 653 0 discriminator 2
 792 0020 1B68     		ldr	r3, [r3, #0]
 793              	.L31:
 655:C:/StellarisWare/driverlib\timer.c **** }
 794              		.loc 1 655 0 discriminator 3
 795 0022 1846     		mov	r0, r3
 796 0024 07F10C07 		add	r7, r7, #12
 797 0028 BD46     		mov	sp, r7
 798 002a 80BC     		pop	{r7}
 799 002c 7047     		bx	lr
 800              		.cfi_endproc
 801              	.LFE12:
 803 002e 00BF     		.section	.text.TimerPrescaleMatchSet,"ax",%progbits
 804              		.align	2
 805              		.global	TimerPrescaleMatchSet
 806              		.thumb
 807              		.thumb_func
 809              	TimerPrescaleMatchSet:
 810              	.LFB13:
 656:C:/StellarisWare/driverlib\timer.c **** 
 657:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 658:C:/StellarisWare/driverlib\timer.c **** //
 659:C:/StellarisWare/driverlib\timer.c **** //! Set the timer prescale match value.
 660:C:/StellarisWare/driverlib\timer.c **** //!
 661:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 662:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to adjust; must be one of \b TIMER_A,
 663:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B, or \b TIMER_BOTH.
 664:C:/StellarisWare/driverlib\timer.c **** //! \param ulValue is the timer prescale match value which must be between 0
 665:C:/StellarisWare/driverlib\timer.c **** //! and 255 (inclusive) for 16/32-bit timers and between 0 and 65535
 666:C:/StellarisWare/driverlib\timer.c **** //! (inclusive) for 32/64-bit timers.
 667:C:/StellarisWare/driverlib\timer.c **** //!
 668:C:/StellarisWare/driverlib\timer.c **** //! This function configures the value of the input clock prescaler match
 669:C:/StellarisWare/driverlib\timer.c **** //! value. When in a half-width mode that uses the counter match and the
 670:C:/StellarisWare/driverlib\timer.c **** //! prescaler, the prescale match effectively extends the range of the match.
 671:C:/StellarisWare/driverlib\timer.c **** //! The prescaler provides the least significant bits when counting down in
 672:C:/StellarisWare/driverlib\timer.c **** //! periodic and one-shot modes; in all other modes, the prescaler provides the
 673:C:/StellarisWare/driverlib\timer.c **** //! most significant bits.
 674:C:/StellarisWare/driverlib\timer.c **** //!
 675:C:/StellarisWare/driverlib\timer.c **** //! \note The availability of the prescaler match varies with the Stellaris
 676:C:/StellarisWare/driverlib\timer.c **** //! part and timer mode in use.  Please consult the datasheet for the part you
 677:C:/StellarisWare/driverlib\timer.c **** //! are using to determine whether this support is available.
 678:C:/StellarisWare/driverlib\timer.c **** //!
 679:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 680:C:/StellarisWare/driverlib\timer.c **** //
 681:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 682:C:/StellarisWare/driverlib\timer.c **** void
 683:C:/StellarisWare/driverlib\timer.c **** TimerPrescaleMatchSet(unsigned long ulBase, unsigned long ulTimer,
 684:C:/StellarisWare/driverlib\timer.c ****                       unsigned long ulValue)
 685:C:/StellarisWare/driverlib\timer.c **** {
 811              		.loc 1 685 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 16
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816 0000 80B4     		push	{r7}
 817              	.LCFI39:
 818              		.cfi_def_cfa_offset 4
 819              		.cfi_offset 7, -4
 820 0002 85B0     		sub	sp, sp, #20
 821              	.LCFI40:
 822              		.cfi_def_cfa_offset 24
 823 0004 00AF     		add	r7, sp, #0
 824              	.LCFI41:
 825              		.cfi_def_cfa_register 7
 826 0006 F860     		str	r0, [r7, #12]
 827 0008 B960     		str	r1, [r7, #8]
 828 000a 7A60     		str	r2, [r7, #4]
 686:C:/StellarisWare/driverlib\timer.c ****     //
 687:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 688:C:/StellarisWare/driverlib\timer.c ****     //
 689:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 690:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 691:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 692:C:/StellarisWare/driverlib\timer.c ****     ASSERT(ulValue < 256);
 693:C:/StellarisWare/driverlib\timer.c **** 
 694:C:/StellarisWare/driverlib\timer.c ****     //
 695:C:/StellarisWare/driverlib\timer.c ****     // Set the timer A prescale match if requested.
 696:C:/StellarisWare/driverlib\timer.c ****     //
 697:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_A)
 829              		.loc 1 697 0
 830 000c BB68     		ldr	r3, [r7, #8]
 831 000e DBB2     		uxtb	r3, r3
 832 0010 002B     		cmp	r3, #0
 833 0012 04D0     		beq	.L33
 698:C:/StellarisWare/driverlib\timer.c ****     {
 699:C:/StellarisWare/driverlib\timer.c ****         HWREG(ulBase + TIMER_O_TAPMR) = ulValue;
 834              		.loc 1 699 0
 835 0014 FB68     		ldr	r3, [r7, #12]
 836 0016 03F14003 		add	r3, r3, #64
 837 001a 7A68     		ldr	r2, [r7, #4]
 838 001c 1A60     		str	r2, [r3, #0]
 839              	.L33:
 700:C:/StellarisWare/driverlib\timer.c ****     }
 701:C:/StellarisWare/driverlib\timer.c **** 
 702:C:/StellarisWare/driverlib\timer.c ****     //
 703:C:/StellarisWare/driverlib\timer.c ****     // Set the timer B prescale match if requested.
 704:C:/StellarisWare/driverlib\timer.c ****     //
 705:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_B)
 840              		.loc 1 705 0
 841 001e BB68     		ldr	r3, [r7, #8]
 842 0020 03F47F43 		and	r3, r3, #65280
 843 0024 002B     		cmp	r3, #0
 844 0026 04D0     		beq	.L32
 706:C:/StellarisWare/driverlib\timer.c ****     {
 707:C:/StellarisWare/driverlib\timer.c ****         HWREG(ulBase + TIMER_O_TBPMR) = ulValue;
 845              		.loc 1 707 0
 846 0028 FB68     		ldr	r3, [r7, #12]
 847 002a 03F14403 		add	r3, r3, #68
 848 002e 7A68     		ldr	r2, [r7, #4]
 849 0030 1A60     		str	r2, [r3, #0]
 850              	.L32:
 708:C:/StellarisWare/driverlib\timer.c ****     }
 709:C:/StellarisWare/driverlib\timer.c **** }
 851              		.loc 1 709 0
 852 0032 07F11407 		add	r7, r7, #20
 853 0036 BD46     		mov	sp, r7
 854 0038 80BC     		pop	{r7}
 855 003a 7047     		bx	lr
 856              		.cfi_endproc
 857              	.LFE13:
 859              		.section	.text.TimerPrescaleMatchGet,"ax",%progbits
 860              		.align	2
 861              		.global	TimerPrescaleMatchGet
 862              		.thumb
 863              		.thumb_func
 865              	TimerPrescaleMatchGet:
 866              	.LFB14:
 710:C:/StellarisWare/driverlib\timer.c **** 
 711:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 712:C:/StellarisWare/driverlib\timer.c **** //
 713:C:/StellarisWare/driverlib\timer.c **** //! Get the timer prescale match value.
 714:C:/StellarisWare/driverlib\timer.c **** //!
 715:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 716:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer; must be one of \b TIMER_A or
 717:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B.
 718:C:/StellarisWare/driverlib\timer.c **** //!
 719:C:/StellarisWare/driverlib\timer.c **** //! This function gets the value of the input clock prescaler match value.
 720:C:/StellarisWare/driverlib\timer.c **** //! When in a half-width mode that uses the counter match and prescaler, the
 721:C:/StellarisWare/driverlib\timer.c **** //! prescale match effectively extends the range of the match. The prescaler
 722:C:/StellarisWare/driverlib\timer.c **** //! provides the least significant bits when counting down in periodic and
 723:C:/StellarisWare/driverlib\timer.c **** //! one-shot modes; in all other modes, the prescaler provides the most
 724:C:/StellarisWare/driverlib\timer.c **** //! significant bits.
 725:C:/StellarisWare/driverlib\timer.c **** //!
 726:C:/StellarisWare/driverlib\timer.c **** //! \note The availability of the prescaler match varies with the Stellaris
 727:C:/StellarisWare/driverlib\timer.c **** //! part and timer mode in use.  Please consult the datasheet for the part you
 728:C:/StellarisWare/driverlib\timer.c **** //! are using to determine whether this support is available.
 729:C:/StellarisWare/driverlib\timer.c **** //!
 730:C:/StellarisWare/driverlib\timer.c **** //! \return The value of the timer prescale match.
 731:C:/StellarisWare/driverlib\timer.c **** //
 732:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 733:C:/StellarisWare/driverlib\timer.c **** unsigned long
 734:C:/StellarisWare/driverlib\timer.c **** TimerPrescaleMatchGet(unsigned long ulBase, unsigned long ulTimer)
 735:C:/StellarisWare/driverlib\timer.c **** {
 867              		.loc 1 735 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 8
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872 0000 80B4     		push	{r7}
 873              	.LCFI42:
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 0002 83B0     		sub	sp, sp, #12
 877              	.LCFI43:
 878              		.cfi_def_cfa_offset 16
 879 0004 00AF     		add	r7, sp, #0
 880              	.LCFI44:
 881              		.cfi_def_cfa_register 7
 882 0006 7860     		str	r0, [r7, #4]
 883 0008 3960     		str	r1, [r7, #0]
 736:C:/StellarisWare/driverlib\timer.c ****     //
 737:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 738:C:/StellarisWare/driverlib\timer.c ****     //
 739:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 740:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 741:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 742:C:/StellarisWare/driverlib\timer.c **** 
 743:C:/StellarisWare/driverlib\timer.c ****     //
 744:C:/StellarisWare/driverlib\timer.c ****     // Return the appropriate prescale match value.
 745:C:/StellarisWare/driverlib\timer.c ****     //
 746:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAPMR) :
 884              		.loc 1 746 0
 885 000a 3B68     		ldr	r3, [r7, #0]
 886 000c FF2B     		cmp	r3, #255
 887 000e 04D1     		bne	.L36
 888              		.loc 1 746 0 is_stmt 0 discriminator 1
 889 0010 7B68     		ldr	r3, [r7, #4]
 890 0012 03F14003 		add	r3, r3, #64
 891 0016 1B68     		ldr	r3, [r3, #0]
 892 0018 03E0     		b	.L37
 893              	.L36:
 747:C:/StellarisWare/driverlib\timer.c ****            HWREG(ulBase + TIMER_O_TBPMR));
 894              		.loc 1 747 0 is_stmt 1 discriminator 2
 895 001a 7B68     		ldr	r3, [r7, #4]
 896 001c 03F14403 		add	r3, r3, #68
 746:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAPMR) :
 897              		.loc 1 746 0 discriminator 2
 898 0020 1B68     		ldr	r3, [r3, #0]
 899              	.L37:
 748:C:/StellarisWare/driverlib\timer.c **** }
 900              		.loc 1 748 0 discriminator 3
 901 0022 1846     		mov	r0, r3
 902 0024 07F10C07 		add	r7, r7, #12
 903 0028 BD46     		mov	sp, r7
 904 002a 80BC     		pop	{r7}
 905 002c 7047     		bx	lr
 906              		.cfi_endproc
 907              	.LFE14:
 909 002e 00BF     		.section	.text.TimerLoadSet,"ax",%progbits
 910              		.align	2
 911              		.global	TimerLoadSet
 912              		.thumb
 913              		.thumb_func
 915              	TimerLoadSet:
 916              	.LFB15:
 749:C:/StellarisWare/driverlib\timer.c **** 
 750:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 751:C:/StellarisWare/driverlib\timer.c **** //
 752:C:/StellarisWare/driverlib\timer.c **** //! Sets the timer load value.
 753:C:/StellarisWare/driverlib\timer.c **** //!
 754:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 755:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to adjust; must be one of \b TIMER_A,
 756:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B, or \b TIMER_BOTH.  Only \b TIMER_A should be used when the
 757:C:/StellarisWare/driverlib\timer.c **** //! timer is configured for full-width operation.
 758:C:/StellarisWare/driverlib\timer.c **** //! \param ulValue is the load value.
 759:C:/StellarisWare/driverlib\timer.c **** //!
 760:C:/StellarisWare/driverlib\timer.c **** //! This function configures the timer load value; if the timer is running then
 761:C:/StellarisWare/driverlib\timer.c **** //! the value is immediately loaded into the timer.
 762:C:/StellarisWare/driverlib\timer.c **** //!
 763:C:/StellarisWare/driverlib\timer.c **** //! \note This function can be used for both full- and half-width modes of
 764:C:/StellarisWare/driverlib\timer.c **** //! 16/32-bit timers and for half-width modes of 32/64-bit timers.  Use
 765:C:/StellarisWare/driverlib\timer.c **** //! TimerLoadSet64() for full-width modes of 32/64-bit timers.
 766:C:/StellarisWare/driverlib\timer.c **** //!
 767:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 768:C:/StellarisWare/driverlib\timer.c **** //
 769:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 770:C:/StellarisWare/driverlib\timer.c **** void
 771:C:/StellarisWare/driverlib\timer.c **** TimerLoadSet(unsigned long ulBase, unsigned long ulTimer,
 772:C:/StellarisWare/driverlib\timer.c ****              unsigned long ulValue)
 773:C:/StellarisWare/driverlib\timer.c **** {
 917              		.loc 1 773 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 16
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 922 0000 80B4     		push	{r7}
 923              	.LCFI45:
 924              		.cfi_def_cfa_offset 4
 925              		.cfi_offset 7, -4
 926 0002 85B0     		sub	sp, sp, #20
 927              	.LCFI46:
 928              		.cfi_def_cfa_offset 24
 929 0004 00AF     		add	r7, sp, #0
 930              	.LCFI47:
 931              		.cfi_def_cfa_register 7
 932 0006 F860     		str	r0, [r7, #12]
 933 0008 B960     		str	r1, [r7, #8]
 934 000a 7A60     		str	r2, [r7, #4]
 774:C:/StellarisWare/driverlib\timer.c ****     //
 775:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 776:C:/StellarisWare/driverlib\timer.c ****     //
 777:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 778:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
 779:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
 780:C:/StellarisWare/driverlib\timer.c **** 
 781:C:/StellarisWare/driverlib\timer.c ****     //
 782:C:/StellarisWare/driverlib\timer.c ****     // Set the timer A load value if requested.
 783:C:/StellarisWare/driverlib\timer.c ****     //
 784:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_A)
 935              		.loc 1 784 0
 936 000c BB68     		ldr	r3, [r7, #8]
 937 000e DBB2     		uxtb	r3, r3
 938 0010 002B     		cmp	r3, #0
 939 0012 04D0     		beq	.L39
 785:C:/StellarisWare/driverlib\timer.c ****     {
 786:C:/StellarisWare/driverlib\timer.c ****         HWREG(ulBase + TIMER_O_TAILR) = ulValue;
 940              		.loc 1 786 0
 941 0014 FB68     		ldr	r3, [r7, #12]
 942 0016 03F12803 		add	r3, r3, #40
 943 001a 7A68     		ldr	r2, [r7, #4]
 944 001c 1A60     		str	r2, [r3, #0]
 945              	.L39:
 787:C:/StellarisWare/driverlib\timer.c ****     }
 788:C:/StellarisWare/driverlib\timer.c **** 
 789:C:/StellarisWare/driverlib\timer.c ****     //
 790:C:/StellarisWare/driverlib\timer.c ****     // Set the timer B load value if requested.
 791:C:/StellarisWare/driverlib\timer.c ****     //
 792:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_B)
 946              		.loc 1 792 0
 947 001e BB68     		ldr	r3, [r7, #8]
 948 0020 03F47F43 		and	r3, r3, #65280
 949 0024 002B     		cmp	r3, #0
 950 0026 04D0     		beq	.L38
 793:C:/StellarisWare/driverlib\timer.c ****     {
 794:C:/StellarisWare/driverlib\timer.c ****         HWREG(ulBase + TIMER_O_TBILR) = ulValue;
 951              		.loc 1 794 0
 952 0028 FB68     		ldr	r3, [r7, #12]
 953 002a 03F12C03 		add	r3, r3, #44
 954 002e 7A68     		ldr	r2, [r7, #4]
 955 0030 1A60     		str	r2, [r3, #0]
 956              	.L38:
 795:C:/StellarisWare/driverlib\timer.c ****     }
 796:C:/StellarisWare/driverlib\timer.c **** }
 957              		.loc 1 796 0
 958 0032 07F11407 		add	r7, r7, #20
 959 0036 BD46     		mov	sp, r7
 960 0038 80BC     		pop	{r7}
 961 003a 7047     		bx	lr
 962              		.cfi_endproc
 963              	.LFE15:
 965              		.section	.text.TimerLoadGet,"ax",%progbits
 966              		.align	2
 967              		.global	TimerLoadGet
 968              		.thumb
 969              		.thumb_func
 971              	TimerLoadGet:
 972              	.LFB16:
 797:C:/StellarisWare/driverlib\timer.c **** 
 798:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 799:C:/StellarisWare/driverlib\timer.c **** //
 800:C:/StellarisWare/driverlib\timer.c **** //! Gets the timer load value.
 801:C:/StellarisWare/driverlib\timer.c **** //!
 802:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 803:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer; must be one of \b TIMER_A or
 804:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B.  Only \b TIMER_A should be used when the timer is configured
 805:C:/StellarisWare/driverlib\timer.c **** //! for full-width operation.
 806:C:/StellarisWare/driverlib\timer.c **** //!
 807:C:/StellarisWare/driverlib\timer.c **** //! This function gets the currently programmed interval load value for the
 808:C:/StellarisWare/driverlib\timer.c **** //! specified timer.
 809:C:/StellarisWare/driverlib\timer.c **** //!
 810:C:/StellarisWare/driverlib\timer.c **** //! \note This function can be used for both full- and half-width modes of
 811:C:/StellarisWare/driverlib\timer.c **** //! 16/32-bit timers and for half-width modes of 32/64-bit timers.  Use
 812:C:/StellarisWare/driverlib\timer.c **** //! TimerLoadGet64() for full-width modes of 32/64-bit timers.
 813:C:/StellarisWare/driverlib\timer.c **** //!
 814:C:/StellarisWare/driverlib\timer.c **** //! \return Returns the load value for the timer.
 815:C:/StellarisWare/driverlib\timer.c **** //
 816:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 817:C:/StellarisWare/driverlib\timer.c **** unsigned long
 818:C:/StellarisWare/driverlib\timer.c **** TimerLoadGet(unsigned long ulBase, unsigned long ulTimer)
 819:C:/StellarisWare/driverlib\timer.c **** {
 973              		.loc 1 819 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 8
 976              		@ frame_needed = 1, uses_anonymous_args = 0
 977              		@ link register save eliminated.
 978 0000 80B4     		push	{r7}
 979              	.LCFI48:
 980              		.cfi_def_cfa_offset 4
 981              		.cfi_offset 7, -4
 982 0002 83B0     		sub	sp, sp, #12
 983              	.LCFI49:
 984              		.cfi_def_cfa_offset 16
 985 0004 00AF     		add	r7, sp, #0
 986              	.LCFI50:
 987              		.cfi_def_cfa_register 7
 988 0006 7860     		str	r0, [r7, #4]
 989 0008 3960     		str	r1, [r7, #0]
 820:C:/StellarisWare/driverlib\timer.c ****     //
 821:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 822:C:/StellarisWare/driverlib\timer.c ****     //
 823:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 824:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B));
 825:C:/StellarisWare/driverlib\timer.c **** 
 826:C:/StellarisWare/driverlib\timer.c ****     //
 827:C:/StellarisWare/driverlib\timer.c ****     // Return the appropriate load value.
 828:C:/StellarisWare/driverlib\timer.c ****     //
 829:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAILR) :
 990              		.loc 1 829 0
 991 000a 3B68     		ldr	r3, [r7, #0]
 992 000c FF2B     		cmp	r3, #255
 993 000e 04D1     		bne	.L42
 994              		.loc 1 829 0 is_stmt 0 discriminator 1
 995 0010 7B68     		ldr	r3, [r7, #4]
 996 0012 03F12803 		add	r3, r3, #40
 997 0016 1B68     		ldr	r3, [r3, #0]
 998 0018 03E0     		b	.L43
 999              	.L42:
 830:C:/StellarisWare/driverlib\timer.c ****            HWREG(ulBase + TIMER_O_TBILR));
 1000              		.loc 1 830 0 is_stmt 1 discriminator 2
 1001 001a 7B68     		ldr	r3, [r7, #4]
 1002 001c 03F12C03 		add	r3, r3, #44
 829:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAILR) :
 1003              		.loc 1 829 0 discriminator 2
 1004 0020 1B68     		ldr	r3, [r3, #0]
 1005              	.L43:
 831:C:/StellarisWare/driverlib\timer.c **** }
 1006              		.loc 1 831 0 discriminator 3
 1007 0022 1846     		mov	r0, r3
 1008 0024 07F10C07 		add	r7, r7, #12
 1009 0028 BD46     		mov	sp, r7
 1010 002a 80BC     		pop	{r7}
 1011 002c 7047     		bx	lr
 1012              		.cfi_endproc
 1013              	.LFE16:
 1015 002e 00BF     		.section	.text.TimerLoadSet64,"ax",%progbits
 1016              		.align	2
 1017              		.global	TimerLoadSet64
 1018              		.thumb
 1019              		.thumb_func
 1021              	TimerLoadSet64:
 1022              	.LFB17:
 832:C:/StellarisWare/driverlib\timer.c **** 
 833:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 834:C:/StellarisWare/driverlib\timer.c **** //
 835:C:/StellarisWare/driverlib\timer.c **** //! Sets the timer load value for a 64-bit timer.
 836:C:/StellarisWare/driverlib\timer.c **** //!
 837:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 838:C:/StellarisWare/driverlib\timer.c **** //! \param ullValue is the load value.
 839:C:/StellarisWare/driverlib\timer.c **** //!
 840:C:/StellarisWare/driverlib\timer.c **** //! This function configures the timer load value for a 64-bit timer; if the
 841:C:/StellarisWare/driverlib\timer.c **** //! timer is running, then the value is immediately loaded into the timer.
 842:C:/StellarisWare/driverlib\timer.c **** //!
 843:C:/StellarisWare/driverlib\timer.c **** //! \return None.
 844:C:/StellarisWare/driverlib\timer.c **** //
 845:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 846:C:/StellarisWare/driverlib\timer.c **** void
 847:C:/StellarisWare/driverlib\timer.c **** TimerLoadSet64(unsigned long ulBase, unsigned long long ullValue)
 848:C:/StellarisWare/driverlib\timer.c **** {
 1023              		.loc 1 848 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 16
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
 1028 0000 B0B4     		push	{r4, r5, r7}
 1029              	.LCFI51:
 1030              		.cfi_def_cfa_offset 12
 1031              		.cfi_offset 7, -4
 1032              		.cfi_offset 5, -8
 1033              		.cfi_offset 4, -12
 1034 0002 85B0     		sub	sp, sp, #20
 1035              	.LCFI52:
 1036              		.cfi_def_cfa_offset 32
 1037 0004 00AF     		add	r7, sp, #0
 1038              	.LCFI53:
 1039              		.cfi_def_cfa_register 7
 1040 0006 F860     		str	r0, [r7, #12]
 1041 0008 C7E90023 		strd	r2, [r7]
 849:C:/StellarisWare/driverlib\timer.c ****     //
 850:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 851:C:/StellarisWare/driverlib\timer.c ****     //
 852:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 853:C:/StellarisWare/driverlib\timer.c **** 
 854:C:/StellarisWare/driverlib\timer.c ****     //
 855:C:/StellarisWare/driverlib\timer.c ****     // Set the timer load value.  The upper 32-bits must be written before the
 856:C:/StellarisWare/driverlib\timer.c ****     // lower 32-bits in order to adhere to the hardware interlocks on the
 857:C:/StellarisWare/driverlib\timer.c ****     // 64-bit value.
 858:C:/StellarisWare/driverlib\timer.c ****     //
 859:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBILR) = ullValue >> 32;
 1042              		.loc 1 859 0
 1043 000c FB68     		ldr	r3, [r7, #12]
 1044 000e 03F12C03 		add	r3, r3, #44
 1045 0012 7A68     		ldr	r2, [r7, #4]
 1046 0014 1446     		mov	r4, r2
 1047 0016 4FF00005 		mov	r5, #0
 1048 001a 2246     		mov	r2, r4
 1049 001c 1A60     		str	r2, [r3, #0]
 860:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TAILR) = ullValue & 0xffffffff;
 1050              		.loc 1 860 0
 1051 001e FB68     		ldr	r3, [r7, #12]
 1052 0020 03F12803 		add	r3, r3, #40
 1053 0024 3A68     		ldr	r2, [r7, #0]
 1054 0026 1A60     		str	r2, [r3, #0]
 861:C:/StellarisWare/driverlib\timer.c **** }
 1055              		.loc 1 861 0
 1056 0028 07F11407 		add	r7, r7, #20
 1057 002c BD46     		mov	sp, r7
 1058 002e B0BC     		pop	{r4, r5, r7}
 1059 0030 7047     		bx	lr
 1060              		.cfi_endproc
 1061              	.LFE17:
 1063 0032 00BF     		.section	.text.TimerLoadGet64,"ax",%progbits
 1064              		.align	2
 1065              		.global	TimerLoadGet64
 1066              		.thumb
 1067              		.thumb_func
 1069              	TimerLoadGet64:
 1070              	.LFB18:
 862:C:/StellarisWare/driverlib\timer.c **** 
 863:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 864:C:/StellarisWare/driverlib\timer.c **** //
 865:C:/StellarisWare/driverlib\timer.c **** //! Gets the timer load value for a 64-bit timer.
 866:C:/StellarisWare/driverlib\timer.c **** //!
 867:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 868:C:/StellarisWare/driverlib\timer.c **** //!
 869:C:/StellarisWare/driverlib\timer.c **** //! This function gets the currently programmed interval load value for the
 870:C:/StellarisWare/driverlib\timer.c **** //! specified 64-bit timer.
 871:C:/StellarisWare/driverlib\timer.c **** //!
 872:C:/StellarisWare/driverlib\timer.c **** //! \return Returns the load value for the timer.
 873:C:/StellarisWare/driverlib\timer.c **** //
 874:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 875:C:/StellarisWare/driverlib\timer.c **** unsigned long long
 876:C:/StellarisWare/driverlib\timer.c **** TimerLoadGet64(unsigned long ulBase)
 877:C:/StellarisWare/driverlib\timer.c **** {
 1071              		.loc 1 877 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 24
 1074              		@ frame_needed = 1, uses_anonymous_args = 0
 1075              		@ link register save eliminated.
 1076 0000 B0B4     		push	{r4, r5, r7}
 1077              	.LCFI54:
 1078              		.cfi_def_cfa_offset 12
 1079              		.cfi_offset 7, -4
 1080              		.cfi_offset 5, -8
 1081              		.cfi_offset 4, -12
 1082 0002 87B0     		sub	sp, sp, #28
 1083              	.LCFI55:
 1084              		.cfi_def_cfa_offset 40
 1085 0004 00AF     		add	r7, sp, #0
 1086              	.LCFI56:
 1087              		.cfi_def_cfa_register 7
 1088 0006 7860     		str	r0, [r7, #4]
 1089              	.L46:
 878:C:/StellarisWare/driverlib\timer.c ****     unsigned long ulHigh1, ulHigh2, ulLow;
 879:C:/StellarisWare/driverlib\timer.c **** 
 880:C:/StellarisWare/driverlib\timer.c ****     //
 881:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 882:C:/StellarisWare/driverlib\timer.c ****     //
 883:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 884:C:/StellarisWare/driverlib\timer.c **** 
 885:C:/StellarisWare/driverlib\timer.c ****     //
 886:C:/StellarisWare/driverlib\timer.c ****     // Read the 64-bit load value.  A read of the low 32-bits is performed
 887:C:/StellarisWare/driverlib\timer.c ****     // between two reads of the upper 32-bits; if the upper 32-bit values match
 888:C:/StellarisWare/driverlib\timer.c ****     // then the 64-bit value is consistent.  If they do not match, then the
 889:C:/StellarisWare/driverlib\timer.c ****     // read is performed again until they do match (it should never execute the
 890:C:/StellarisWare/driverlib\timer.c ****     // loop body more than twice).
 891:C:/StellarisWare/driverlib\timer.c ****     //
 892:C:/StellarisWare/driverlib\timer.c ****     do
 893:C:/StellarisWare/driverlib\timer.c ****     {
 894:C:/StellarisWare/driverlib\timer.c ****         ulHigh1 = HWREG(ulBase + TIMER_O_TBILR);
 1090              		.loc 1 894 0 discriminator 1
 1091 0008 7B68     		ldr	r3, [r7, #4]
 1092 000a 03F12C03 		add	r3, r3, #44
 1093 000e 1B68     		ldr	r3, [r3, #0]
 1094 0010 7B61     		str	r3, [r7, #20]
 895:C:/StellarisWare/driverlib\timer.c ****         ulLow = HWREG(ulBase + TIMER_O_TAILR);
 1095              		.loc 1 895 0 discriminator 1
 1096 0012 7B68     		ldr	r3, [r7, #4]
 1097 0014 03F12803 		add	r3, r3, #40
 1098 0018 1B68     		ldr	r3, [r3, #0]
 1099 001a 3B61     		str	r3, [r7, #16]
 896:C:/StellarisWare/driverlib\timer.c ****         ulHigh2 = HWREG(ulBase + TIMER_O_TBILR);
 1100              		.loc 1 896 0 discriminator 1
 1101 001c 7B68     		ldr	r3, [r7, #4]
 1102 001e 03F12C03 		add	r3, r3, #44
 1103 0022 1B68     		ldr	r3, [r3, #0]
 1104 0024 FB60     		str	r3, [r7, #12]
 897:C:/StellarisWare/driverlib\timer.c ****     }
 898:C:/StellarisWare/driverlib\timer.c ****     while(ulHigh1 != ulHigh2);
 1105              		.loc 1 898 0 discriminator 1
 1106 0026 7A69     		ldr	r2, [r7, #20]
 1107 0028 FB68     		ldr	r3, [r7, #12]
 1108 002a 9A42     		cmp	r2, r3
 1109 002c ECD1     		bne	.L46
 899:C:/StellarisWare/driverlib\timer.c **** 
 900:C:/StellarisWare/driverlib\timer.c ****     //
 901:C:/StellarisWare/driverlib\timer.c ****     // Return the load value.
 902:C:/StellarisWare/driverlib\timer.c ****     //
 903:C:/StellarisWare/driverlib\timer.c ****     return(((unsigned long long)ulHigh1 << 32) | (unsigned long long)ulLow);
 1110              		.loc 1 903 0
 1111 002e 7969     		ldr	r1, [r7, #20]
 1112 0030 0A46     		mov	r2, r1
 1113 0032 4FF00003 		mov	r3, #0
 1114 0036 1546     		mov	r5, r2
 1115 0038 4FF00004 		mov	r4, #0
 1116 003c 3969     		ldr	r1, [r7, #16]
 1117 003e 0A46     		mov	r2, r1
 1118 0040 4FF00003 		mov	r3, #0
 1119 0044 42EA0402 		orr	r2, r2, r4
 1120 0048 43EA0503 		orr	r3, r3, r5
 904:C:/StellarisWare/driverlib\timer.c **** }
 1121              		.loc 1 904 0
 1122 004c 1046     		mov	r0, r2
 1123 004e 1946     		mov	r1, r3
 1124 0050 07F11C07 		add	r7, r7, #28
 1125 0054 BD46     		mov	sp, r7
 1126 0056 B0BC     		pop	{r4, r5, r7}
 1127 0058 7047     		bx	lr
 1128              		.cfi_endproc
 1129              	.LFE18:
 1131 005a 00BF     		.section	.text.TimerValueGet,"ax",%progbits
 1132              		.align	2
 1133              		.global	TimerValueGet
 1134              		.thumb
 1135              		.thumb_func
 1137              	TimerValueGet:
 1138              	.LFB19:
 905:C:/StellarisWare/driverlib\timer.c **** 
 906:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 907:C:/StellarisWare/driverlib\timer.c **** //
 908:C:/StellarisWare/driverlib\timer.c **** //! Gets the current timer value.
 909:C:/StellarisWare/driverlib\timer.c **** //!
 910:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 911:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer; must be one of \b TIMER_A or
 912:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B.  Only \b TIMER_A should be used when the timer is configured
 913:C:/StellarisWare/driverlib\timer.c **** //! for full-width operation.
 914:C:/StellarisWare/driverlib\timer.c **** //!
 915:C:/StellarisWare/driverlib\timer.c **** //! This function reads the current value of the specified timer.
 916:C:/StellarisWare/driverlib\timer.c **** //!
 917:C:/StellarisWare/driverlib\timer.c **** //! \note This function can be used for both full- and half-width modes of
 918:C:/StellarisWare/driverlib\timer.c **** //! 16/32-bit timers and for half-width modes of 32/64-bit timers.  Use
 919:C:/StellarisWare/driverlib\timer.c **** //! TimerValueGet64() for full-width modes of 32/64-bit timers.
 920:C:/StellarisWare/driverlib\timer.c **** //!
 921:C:/StellarisWare/driverlib\timer.c **** //! \return Returns the current value of the timer.
 922:C:/StellarisWare/driverlib\timer.c **** //
 923:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 924:C:/StellarisWare/driverlib\timer.c **** unsigned long
 925:C:/StellarisWare/driverlib\timer.c **** TimerValueGet(unsigned long ulBase, unsigned long ulTimer)
 926:C:/StellarisWare/driverlib\timer.c **** {
 1139              		.loc 1 926 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 8
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143              		@ link register save eliminated.
 1144 0000 80B4     		push	{r7}
 1145              	.LCFI57:
 1146              		.cfi_def_cfa_offset 4
 1147              		.cfi_offset 7, -4
 1148 0002 83B0     		sub	sp, sp, #12
 1149              	.LCFI58:
 1150              		.cfi_def_cfa_offset 16
 1151 0004 00AF     		add	r7, sp, #0
 1152              	.LCFI59:
 1153              		.cfi_def_cfa_register 7
 1154 0006 7860     		str	r0, [r7, #4]
 1155 0008 3960     		str	r1, [r7, #0]
 927:C:/StellarisWare/driverlib\timer.c ****     //
 928:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 929:C:/StellarisWare/driverlib\timer.c ****     //
 930:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 931:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B));
 932:C:/StellarisWare/driverlib\timer.c **** 
 933:C:/StellarisWare/driverlib\timer.c ****     //
 934:C:/StellarisWare/driverlib\timer.c ****     // Return the appropriate timer value.
 935:C:/StellarisWare/driverlib\timer.c ****     //
 936:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAR) :
 1156              		.loc 1 936 0
 1157 000a 3B68     		ldr	r3, [r7, #0]
 1158 000c FF2B     		cmp	r3, #255
 1159 000e 04D1     		bne	.L48
 1160              		.loc 1 936 0 is_stmt 0 discriminator 1
 1161 0010 7B68     		ldr	r3, [r7, #4]
 1162 0012 03F14803 		add	r3, r3, #72
 1163 0016 1B68     		ldr	r3, [r3, #0]
 1164 0018 03E0     		b	.L49
 1165              	.L48:
 937:C:/StellarisWare/driverlib\timer.c ****            HWREG(ulBase + TIMER_O_TBR));
 1166              		.loc 1 937 0 is_stmt 1 discriminator 2
 1167 001a 7B68     		ldr	r3, [r7, #4]
 1168 001c 03F14C03 		add	r3, r3, #76
 936:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAR) :
 1169              		.loc 1 936 0 discriminator 2
 1170 0020 1B68     		ldr	r3, [r3, #0]
 1171              	.L49:
 938:C:/StellarisWare/driverlib\timer.c **** }
 1172              		.loc 1 938 0 discriminator 3
 1173 0022 1846     		mov	r0, r3
 1174 0024 07F10C07 		add	r7, r7, #12
 1175 0028 BD46     		mov	sp, r7
 1176 002a 80BC     		pop	{r7}
 1177 002c 7047     		bx	lr
 1178              		.cfi_endproc
 1179              	.LFE19:
 1181 002e 00BF     		.section	.text.TimerValueGet64,"ax",%progbits
 1182              		.align	2
 1183              		.global	TimerValueGet64
 1184              		.thumb
 1185              		.thumb_func
 1187              	TimerValueGet64:
 1188              	.LFB20:
 939:C:/StellarisWare/driverlib\timer.c **** 
 940:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 941:C:/StellarisWare/driverlib\timer.c **** //
 942:C:/StellarisWare/driverlib\timer.c **** //! Gets the current 64-bit timer value.
 943:C:/StellarisWare/driverlib\timer.c **** //!
 944:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 945:C:/StellarisWare/driverlib\timer.c **** //!
 946:C:/StellarisWare/driverlib\timer.c **** //! This function reads the current value of the specified timer.
 947:C:/StellarisWare/driverlib\timer.c **** //!
 948:C:/StellarisWare/driverlib\timer.c **** //! \return Returns the current value of the timer.
 949:C:/StellarisWare/driverlib\timer.c **** //
 950:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 951:C:/StellarisWare/driverlib\timer.c **** unsigned long long
 952:C:/StellarisWare/driverlib\timer.c **** TimerValueGet64(unsigned long ulBase)
 953:C:/StellarisWare/driverlib\timer.c **** {
 1189              		.loc 1 953 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 24
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 1194 0000 B0B4     		push	{r4, r5, r7}
 1195              	.LCFI60:
 1196              		.cfi_def_cfa_offset 12
 1197              		.cfi_offset 7, -4
 1198              		.cfi_offset 5, -8
 1199              		.cfi_offset 4, -12
 1200 0002 87B0     		sub	sp, sp, #28
 1201              	.LCFI61:
 1202              		.cfi_def_cfa_offset 40
 1203 0004 00AF     		add	r7, sp, #0
 1204              	.LCFI62:
 1205              		.cfi_def_cfa_register 7
 1206 0006 7860     		str	r0, [r7, #4]
 1207              	.L51:
 954:C:/StellarisWare/driverlib\timer.c ****     unsigned long ulHigh1, ulHigh2, ulLow;
 955:C:/StellarisWare/driverlib\timer.c **** 
 956:C:/StellarisWare/driverlib\timer.c ****     //
 957:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
 958:C:/StellarisWare/driverlib\timer.c ****     //
 959:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
 960:C:/StellarisWare/driverlib\timer.c **** 
 961:C:/StellarisWare/driverlib\timer.c ****     //
 962:C:/StellarisWare/driverlib\timer.c ****     // Read the 64-bit timer value.  A read of the low 32-bits is performed
 963:C:/StellarisWare/driverlib\timer.c ****     // between two reads of the upper 32-bits; if the upper 32-bit values match
 964:C:/StellarisWare/driverlib\timer.c ****     // then the 64-bit value is consistent.  If they do not match, then the
 965:C:/StellarisWare/driverlib\timer.c ****     // read is performed again until they do match (it should never execute the
 966:C:/StellarisWare/driverlib\timer.c ****     // loop body more than twice).
 967:C:/StellarisWare/driverlib\timer.c ****     //
 968:C:/StellarisWare/driverlib\timer.c ****     do
 969:C:/StellarisWare/driverlib\timer.c ****     {
 970:C:/StellarisWare/driverlib\timer.c ****         ulHigh1 = HWREG(ulBase + TIMER_O_TBR);
 1208              		.loc 1 970 0 discriminator 1
 1209 0008 7B68     		ldr	r3, [r7, #4]
 1210 000a 03F14C03 		add	r3, r3, #76
 1211 000e 1B68     		ldr	r3, [r3, #0]
 1212 0010 7B61     		str	r3, [r7, #20]
 971:C:/StellarisWare/driverlib\timer.c ****         ulLow = HWREG(ulBase + TIMER_O_TAR);
 1213              		.loc 1 971 0 discriminator 1
 1214 0012 7B68     		ldr	r3, [r7, #4]
 1215 0014 03F14803 		add	r3, r3, #72
 1216 0018 1B68     		ldr	r3, [r3, #0]
 1217 001a 3B61     		str	r3, [r7, #16]
 972:C:/StellarisWare/driverlib\timer.c ****         ulHigh2 = HWREG(ulBase + TIMER_O_TBR);
 1218              		.loc 1 972 0 discriminator 1
 1219 001c 7B68     		ldr	r3, [r7, #4]
 1220 001e 03F14C03 		add	r3, r3, #76
 1221 0022 1B68     		ldr	r3, [r3, #0]
 1222 0024 FB60     		str	r3, [r7, #12]
 973:C:/StellarisWare/driverlib\timer.c ****     }
 974:C:/StellarisWare/driverlib\timer.c ****     while(ulHigh1 != ulHigh2);
 1223              		.loc 1 974 0 discriminator 1
 1224 0026 7A69     		ldr	r2, [r7, #20]
 1225 0028 FB68     		ldr	r3, [r7, #12]
 1226 002a 9A42     		cmp	r2, r3
 1227 002c ECD1     		bne	.L51
 975:C:/StellarisWare/driverlib\timer.c **** 
 976:C:/StellarisWare/driverlib\timer.c ****     //
 977:C:/StellarisWare/driverlib\timer.c ****     // Return the timer value.
 978:C:/StellarisWare/driverlib\timer.c ****     //
 979:C:/StellarisWare/driverlib\timer.c ****     return(((unsigned long long)ulHigh1 << 32) | (unsigned long long)ulLow);
 1228              		.loc 1 979 0
 1229 002e 7969     		ldr	r1, [r7, #20]
 1230 0030 0A46     		mov	r2, r1
 1231 0032 4FF00003 		mov	r3, #0
 1232 0036 1546     		mov	r5, r2
 1233 0038 4FF00004 		mov	r4, #0
 1234 003c 3969     		ldr	r1, [r7, #16]
 1235 003e 0A46     		mov	r2, r1
 1236 0040 4FF00003 		mov	r3, #0
 1237 0044 42EA0402 		orr	r2, r2, r4
 1238 0048 43EA0503 		orr	r3, r3, r5
 980:C:/StellarisWare/driverlib\timer.c **** }
 1239              		.loc 1 980 0
 1240 004c 1046     		mov	r0, r2
 1241 004e 1946     		mov	r1, r3
 1242 0050 07F11C07 		add	r7, r7, #28
 1243 0054 BD46     		mov	sp, r7
 1244 0056 B0BC     		pop	{r4, r5, r7}
 1245 0058 7047     		bx	lr
 1246              		.cfi_endproc
 1247              	.LFE20:
 1249 005a 00BF     		.section	.text.TimerMatchSet,"ax",%progbits
 1250              		.align	2
 1251              		.global	TimerMatchSet
 1252              		.thumb
 1253              		.thumb_func
 1255              	TimerMatchSet:
 1256              	.LFB21:
 981:C:/StellarisWare/driverlib\timer.c **** 
 982:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
 983:C:/StellarisWare/driverlib\timer.c **** //
 984:C:/StellarisWare/driverlib\timer.c **** //! Sets the timer match value.
 985:C:/StellarisWare/driverlib\timer.c **** //!
 986:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
 987:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s) to adjust; must be one of \b TIMER_A,
 988:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B, or \b TIMER_BOTH.  Only \b TIMER_A should be used when the
 989:C:/StellarisWare/driverlib\timer.c **** //! timer is configured for full-width operation.
 990:C:/StellarisWare/driverlib\timer.c **** //! \param ulValue is the match value.
 991:C:/StellarisWare/driverlib\timer.c **** //!
 992:C:/StellarisWare/driverlib\timer.c **** //! This function configures the match value for a timer.  This value is used
 993:C:/StellarisWare/driverlib\timer.c **** //! in capture count mode to determine when to interrupt the processor and in
 994:C:/StellarisWare/driverlib\timer.c **** //! PWM mode to determine the duty cycle of the output signal. On some
 995:C:/StellarisWare/driverlib\timer.c **** //! Stellaris devices, match interrupts can also be generated in periodic and
 996:C:/StellarisWare/driverlib\timer.c **** //! one-shot modes.
 997:C:/StellarisWare/driverlib\timer.c **** //!
 998:C:/StellarisWare/driverlib\timer.c **** //! \note This function can be used for both full- and half-width modes of
 999:C:/StellarisWare/driverlib\timer.c **** //! 16/32-bit timers and for half-width modes of 32/64-bit timers.  Use
1000:C:/StellarisWare/driverlib\timer.c **** //! TimerMatchSet64() for full-width modes of 32/64-bit timers.
1001:C:/StellarisWare/driverlib\timer.c **** //!
1002:C:/StellarisWare/driverlib\timer.c **** //! \return None.
1003:C:/StellarisWare/driverlib\timer.c **** //
1004:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1005:C:/StellarisWare/driverlib\timer.c **** void
1006:C:/StellarisWare/driverlib\timer.c **** TimerMatchSet(unsigned long ulBase, unsigned long ulTimer,
1007:C:/StellarisWare/driverlib\timer.c ****               unsigned long ulValue)
1008:C:/StellarisWare/driverlib\timer.c **** {
 1257              		.loc 1 1008 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 16
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262 0000 80B4     		push	{r7}
 1263              	.LCFI63:
 1264              		.cfi_def_cfa_offset 4
 1265              		.cfi_offset 7, -4
 1266 0002 85B0     		sub	sp, sp, #20
 1267              	.LCFI64:
 1268              		.cfi_def_cfa_offset 24
 1269 0004 00AF     		add	r7, sp, #0
 1270              	.LCFI65:
 1271              		.cfi_def_cfa_register 7
 1272 0006 F860     		str	r0, [r7, #12]
 1273 0008 B960     		str	r1, [r7, #8]
 1274 000a 7A60     		str	r2, [r7, #4]
1009:C:/StellarisWare/driverlib\timer.c ****     //
1010:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1011:C:/StellarisWare/driverlib\timer.c ****     //
1012:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1013:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
1014:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
1015:C:/StellarisWare/driverlib\timer.c **** 
1016:C:/StellarisWare/driverlib\timer.c ****     //
1017:C:/StellarisWare/driverlib\timer.c ****     // Set the timer A match value if requested.
1018:C:/StellarisWare/driverlib\timer.c ****     //
1019:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_A)
 1275              		.loc 1 1019 0
 1276 000c BB68     		ldr	r3, [r7, #8]
 1277 000e DBB2     		uxtb	r3, r3
 1278 0010 002B     		cmp	r3, #0
 1279 0012 04D0     		beq	.L53
1020:C:/StellarisWare/driverlib\timer.c ****     {
1021:C:/StellarisWare/driverlib\timer.c ****         HWREG(ulBase + TIMER_O_TAMATCHR) = ulValue;
 1280              		.loc 1 1021 0
 1281 0014 FB68     		ldr	r3, [r7, #12]
 1282 0016 03F13003 		add	r3, r3, #48
 1283 001a 7A68     		ldr	r2, [r7, #4]
 1284 001c 1A60     		str	r2, [r3, #0]
 1285              	.L53:
1022:C:/StellarisWare/driverlib\timer.c ****     }
1023:C:/StellarisWare/driverlib\timer.c **** 
1024:C:/StellarisWare/driverlib\timer.c ****     //
1025:C:/StellarisWare/driverlib\timer.c ****     // Set the timer B match value if requested.
1026:C:/StellarisWare/driverlib\timer.c ****     //
1027:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_B)
 1286              		.loc 1 1027 0
 1287 001e BB68     		ldr	r3, [r7, #8]
 1288 0020 03F47F43 		and	r3, r3, #65280
 1289 0024 002B     		cmp	r3, #0
 1290 0026 04D0     		beq	.L52
1028:C:/StellarisWare/driverlib\timer.c ****     {
1029:C:/StellarisWare/driverlib\timer.c ****         HWREG(ulBase + TIMER_O_TBMATCHR) = ulValue;
 1291              		.loc 1 1029 0
 1292 0028 FB68     		ldr	r3, [r7, #12]
 1293 002a 03F13403 		add	r3, r3, #52
 1294 002e 7A68     		ldr	r2, [r7, #4]
 1295 0030 1A60     		str	r2, [r3, #0]
 1296              	.L52:
1030:C:/StellarisWare/driverlib\timer.c ****     }
1031:C:/StellarisWare/driverlib\timer.c **** }
 1297              		.loc 1 1031 0
 1298 0032 07F11407 		add	r7, r7, #20
 1299 0036 BD46     		mov	sp, r7
 1300 0038 80BC     		pop	{r7}
 1301 003a 7047     		bx	lr
 1302              		.cfi_endproc
 1303              	.LFE21:
 1305              		.section	.text.TimerMatchGet,"ax",%progbits
 1306              		.align	2
 1307              		.global	TimerMatchGet
 1308              		.thumb
 1309              		.thumb_func
 1311              	TimerMatchGet:
 1312              	.LFB22:
1032:C:/StellarisWare/driverlib\timer.c **** 
1033:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1034:C:/StellarisWare/driverlib\timer.c **** //
1035:C:/StellarisWare/driverlib\timer.c **** //! Gets the timer match value.
1036:C:/StellarisWare/driverlib\timer.c **** //!
1037:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
1038:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer; must be one of \b TIMER_A or
1039:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B.  Only \b TIMER_A should be used when the timer is configured
1040:C:/StellarisWare/driverlib\timer.c **** //! for full-width operation.
1041:C:/StellarisWare/driverlib\timer.c **** //!
1042:C:/StellarisWare/driverlib\timer.c **** //! This function gets the match value for the specified timer.
1043:C:/StellarisWare/driverlib\timer.c **** //!
1044:C:/StellarisWare/driverlib\timer.c **** //! \note This function can be used for both full- and half-width modes of
1045:C:/StellarisWare/driverlib\timer.c **** //! 16/32-bit timers and for half-width modes of 32/64-bit timers.  Use
1046:C:/StellarisWare/driverlib\timer.c **** //! TimerMatchGet64() for full-width modes of 32/64-bit timers.
1047:C:/StellarisWare/driverlib\timer.c **** //!
1048:C:/StellarisWare/driverlib\timer.c **** //! \return Returns the match value for the timer.
1049:C:/StellarisWare/driverlib\timer.c **** //
1050:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1051:C:/StellarisWare/driverlib\timer.c **** unsigned long
1052:C:/StellarisWare/driverlib\timer.c **** TimerMatchGet(unsigned long ulBase, unsigned long ulTimer)
1053:C:/StellarisWare/driverlib\timer.c **** {
 1313              		.loc 1 1053 0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 8
 1316              		@ frame_needed = 1, uses_anonymous_args = 0
 1317              		@ link register save eliminated.
 1318 0000 80B4     		push	{r7}
 1319              	.LCFI66:
 1320              		.cfi_def_cfa_offset 4
 1321              		.cfi_offset 7, -4
 1322 0002 83B0     		sub	sp, sp, #12
 1323              	.LCFI67:
 1324              		.cfi_def_cfa_offset 16
 1325 0004 00AF     		add	r7, sp, #0
 1326              	.LCFI68:
 1327              		.cfi_def_cfa_register 7
 1328 0006 7860     		str	r0, [r7, #4]
 1329 0008 3960     		str	r1, [r7, #0]
1054:C:/StellarisWare/driverlib\timer.c ****     //
1055:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1056:C:/StellarisWare/driverlib\timer.c ****     //
1057:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1058:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B));
1059:C:/StellarisWare/driverlib\timer.c **** 
1060:C:/StellarisWare/driverlib\timer.c ****     //
1061:C:/StellarisWare/driverlib\timer.c ****     // Return the appropriate match value.
1062:C:/StellarisWare/driverlib\timer.c ****     //
1063:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAMATCHR) :
 1330              		.loc 1 1063 0
 1331 000a 3B68     		ldr	r3, [r7, #0]
 1332 000c FF2B     		cmp	r3, #255
 1333 000e 04D1     		bne	.L56
 1334              		.loc 1 1063 0 is_stmt 0 discriminator 1
 1335 0010 7B68     		ldr	r3, [r7, #4]
 1336 0012 03F13003 		add	r3, r3, #48
 1337 0016 1B68     		ldr	r3, [r3, #0]
 1338 0018 03E0     		b	.L57
 1339              	.L56:
1064:C:/StellarisWare/driverlib\timer.c ****            HWREG(ulBase + TIMER_O_TBMATCHR));
 1340              		.loc 1 1064 0 is_stmt 1 discriminator 2
 1341 001a 7B68     		ldr	r3, [r7, #4]
 1342 001c 03F13403 		add	r3, r3, #52
1063:C:/StellarisWare/driverlib\timer.c ****     return((ulTimer == TIMER_A) ? HWREG(ulBase + TIMER_O_TAMATCHR) :
 1343              		.loc 1 1063 0 discriminator 2
 1344 0020 1B68     		ldr	r3, [r3, #0]
 1345              	.L57:
1065:C:/StellarisWare/driverlib\timer.c **** }
 1346              		.loc 1 1065 0 discriminator 3
 1347 0022 1846     		mov	r0, r3
 1348 0024 07F10C07 		add	r7, r7, #12
 1349 0028 BD46     		mov	sp, r7
 1350 002a 80BC     		pop	{r7}
 1351 002c 7047     		bx	lr
 1352              		.cfi_endproc
 1353              	.LFE22:
 1355 002e 00BF     		.section	.text.TimerMatchSet64,"ax",%progbits
 1356              		.align	2
 1357              		.global	TimerMatchSet64
 1358              		.thumb
 1359              		.thumb_func
 1361              	TimerMatchSet64:
 1362              	.LFB23:
1066:C:/StellarisWare/driverlib\timer.c **** 
1067:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1068:C:/StellarisWare/driverlib\timer.c **** //
1069:C:/StellarisWare/driverlib\timer.c **** //! Sets the timer match value for a 64-bit timer.
1070:C:/StellarisWare/driverlib\timer.c **** //!
1071:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
1072:C:/StellarisWare/driverlib\timer.c **** //! \param ullValue is the match value.
1073:C:/StellarisWare/driverlib\timer.c **** //!
1074:C:/StellarisWare/driverlib\timer.c **** //! This function configures the match value for a timer.  This value is used
1075:C:/StellarisWare/driverlib\timer.c **** //! in capture count mode to determine when to interrupt the processor and in
1076:C:/StellarisWare/driverlib\timer.c **** //! PWM mode to determine the duty cycle of the output signal.
1077:C:/StellarisWare/driverlib\timer.c **** //!
1078:C:/StellarisWare/driverlib\timer.c **** //! \return None.
1079:C:/StellarisWare/driverlib\timer.c **** //
1080:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1081:C:/StellarisWare/driverlib\timer.c **** void
1082:C:/StellarisWare/driverlib\timer.c **** TimerMatchSet64(unsigned long ulBase, unsigned long long ullValue)
1083:C:/StellarisWare/driverlib\timer.c **** {
 1363              		.loc 1 1083 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 16
 1366              		@ frame_needed = 1, uses_anonymous_args = 0
 1367              		@ link register save eliminated.
 1368 0000 B0B4     		push	{r4, r5, r7}
 1369              	.LCFI69:
 1370              		.cfi_def_cfa_offset 12
 1371              		.cfi_offset 7, -4
 1372              		.cfi_offset 5, -8
 1373              		.cfi_offset 4, -12
 1374 0002 85B0     		sub	sp, sp, #20
 1375              	.LCFI70:
 1376              		.cfi_def_cfa_offset 32
 1377 0004 00AF     		add	r7, sp, #0
 1378              	.LCFI71:
 1379              		.cfi_def_cfa_register 7
 1380 0006 F860     		str	r0, [r7, #12]
 1381 0008 C7E90023 		strd	r2, [r7]
1084:C:/StellarisWare/driverlib\timer.c ****     //
1085:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1086:C:/StellarisWare/driverlib\timer.c ****     //
1087:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1088:C:/StellarisWare/driverlib\timer.c **** 
1089:C:/StellarisWare/driverlib\timer.c ****     //
1090:C:/StellarisWare/driverlib\timer.c ****     // Set the timer match value.  The upper 32-bits must be written before the
1091:C:/StellarisWare/driverlib\timer.c ****     // lower 32-bits in order to adhere to the hardware interlocks on the
1092:C:/StellarisWare/driverlib\timer.c ****     // 64-bit value.
1093:C:/StellarisWare/driverlib\timer.c ****     //
1094:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBMATCHR) = ullValue >> 32;
 1382              		.loc 1 1094 0
 1383 000c FB68     		ldr	r3, [r7, #12]
 1384 000e 03F13403 		add	r3, r3, #52
 1385 0012 7A68     		ldr	r2, [r7, #4]
 1386 0014 1446     		mov	r4, r2
 1387 0016 4FF00005 		mov	r5, #0
 1388 001a 2246     		mov	r2, r4
 1389 001c 1A60     		str	r2, [r3, #0]
1095:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TAMATCHR) = ullValue & 0xffffffff;
 1390              		.loc 1 1095 0
 1391 001e FB68     		ldr	r3, [r7, #12]
 1392 0020 03F13003 		add	r3, r3, #48
 1393 0024 3A68     		ldr	r2, [r7, #0]
 1394 0026 1A60     		str	r2, [r3, #0]
1096:C:/StellarisWare/driverlib\timer.c **** }
 1395              		.loc 1 1096 0
 1396 0028 07F11407 		add	r7, r7, #20
 1397 002c BD46     		mov	sp, r7
 1398 002e B0BC     		pop	{r4, r5, r7}
 1399 0030 7047     		bx	lr
 1400              		.cfi_endproc
 1401              	.LFE23:
 1403 0032 00BF     		.section	.text.TimerMatchGet64,"ax",%progbits
 1404              		.align	2
 1405              		.global	TimerMatchGet64
 1406              		.thumb
 1407              		.thumb_func
 1409              	TimerMatchGet64:
 1410              	.LFB24:
1097:C:/StellarisWare/driverlib\timer.c **** 
1098:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1099:C:/StellarisWare/driverlib\timer.c **** //
1100:C:/StellarisWare/driverlib\timer.c **** //! Gets the timer match value for a 64-bit timer.
1101:C:/StellarisWare/driverlib\timer.c **** //!
1102:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
1103:C:/StellarisWare/driverlib\timer.c **** //!
1104:C:/StellarisWare/driverlib\timer.c **** //! This function gets the match value for the specified timer.
1105:C:/StellarisWare/driverlib\timer.c **** //!
1106:C:/StellarisWare/driverlib\timer.c **** //! \return Returns the match value for the timer.
1107:C:/StellarisWare/driverlib\timer.c **** //
1108:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1109:C:/StellarisWare/driverlib\timer.c **** unsigned long long
1110:C:/StellarisWare/driverlib\timer.c **** TimerMatchGet64(unsigned long ulBase)
1111:C:/StellarisWare/driverlib\timer.c **** {
 1411              		.loc 1 1111 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 24
 1414              		@ frame_needed = 1, uses_anonymous_args = 0
 1415              		@ link register save eliminated.
 1416 0000 B0B4     		push	{r4, r5, r7}
 1417              	.LCFI72:
 1418              		.cfi_def_cfa_offset 12
 1419              		.cfi_offset 7, -4
 1420              		.cfi_offset 5, -8
 1421              		.cfi_offset 4, -12
 1422 0002 87B0     		sub	sp, sp, #28
 1423              	.LCFI73:
 1424              		.cfi_def_cfa_offset 40
 1425 0004 00AF     		add	r7, sp, #0
 1426              	.LCFI74:
 1427              		.cfi_def_cfa_register 7
 1428 0006 7860     		str	r0, [r7, #4]
 1429              	.L60:
1112:C:/StellarisWare/driverlib\timer.c ****     unsigned long ulHigh1, ulHigh2, ulLow;
1113:C:/StellarisWare/driverlib\timer.c **** 
1114:C:/StellarisWare/driverlib\timer.c ****     //
1115:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1116:C:/StellarisWare/driverlib\timer.c ****     //
1117:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1118:C:/StellarisWare/driverlib\timer.c **** 
1119:C:/StellarisWare/driverlib\timer.c ****     //
1120:C:/StellarisWare/driverlib\timer.c ****     // Read the 64-bit match value.  A read of the low 32-bits is performed
1121:C:/StellarisWare/driverlib\timer.c ****     // between two reads of the upper 32-bits; if the upper 32-bit values match
1122:C:/StellarisWare/driverlib\timer.c ****     // then the 64-bit value is consistent.  If they do not match, then the
1123:C:/StellarisWare/driverlib\timer.c ****     // read is performed again until they do match (it should never execute the
1124:C:/StellarisWare/driverlib\timer.c ****     // loop body more than twice).
1125:C:/StellarisWare/driverlib\timer.c ****     //
1126:C:/StellarisWare/driverlib\timer.c ****     do
1127:C:/StellarisWare/driverlib\timer.c ****     {
1128:C:/StellarisWare/driverlib\timer.c ****         ulHigh1 = HWREG(ulBase + TIMER_O_TBMATCHR);
 1430              		.loc 1 1128 0 discriminator 1
 1431 0008 7B68     		ldr	r3, [r7, #4]
 1432 000a 03F13403 		add	r3, r3, #52
 1433 000e 1B68     		ldr	r3, [r3, #0]
 1434 0010 7B61     		str	r3, [r7, #20]
1129:C:/StellarisWare/driverlib\timer.c ****         ulLow = HWREG(ulBase + TIMER_O_TAMATCHR);
 1435              		.loc 1 1129 0 discriminator 1
 1436 0012 7B68     		ldr	r3, [r7, #4]
 1437 0014 03F13003 		add	r3, r3, #48
 1438 0018 1B68     		ldr	r3, [r3, #0]
 1439 001a 3B61     		str	r3, [r7, #16]
1130:C:/StellarisWare/driverlib\timer.c ****         ulHigh2 = HWREG(ulBase + TIMER_O_TBMATCHR);
 1440              		.loc 1 1130 0 discriminator 1
 1441 001c 7B68     		ldr	r3, [r7, #4]
 1442 001e 03F13403 		add	r3, r3, #52
 1443 0022 1B68     		ldr	r3, [r3, #0]
 1444 0024 FB60     		str	r3, [r7, #12]
1131:C:/StellarisWare/driverlib\timer.c ****     }
1132:C:/StellarisWare/driverlib\timer.c ****     while(ulHigh1 != ulHigh2);
 1445              		.loc 1 1132 0 discriminator 1
 1446 0026 7A69     		ldr	r2, [r7, #20]
 1447 0028 FB68     		ldr	r3, [r7, #12]
 1448 002a 9A42     		cmp	r2, r3
 1449 002c ECD1     		bne	.L60
1133:C:/StellarisWare/driverlib\timer.c **** 
1134:C:/StellarisWare/driverlib\timer.c ****     //
1135:C:/StellarisWare/driverlib\timer.c ****     // Return the match value.
1136:C:/StellarisWare/driverlib\timer.c ****     //
1137:C:/StellarisWare/driverlib\timer.c ****     return(((unsigned long long)ulHigh1 << 32) | (unsigned long long)ulLow);
 1450              		.loc 1 1137 0
 1451 002e 7969     		ldr	r1, [r7, #20]
 1452 0030 0A46     		mov	r2, r1
 1453 0032 4FF00003 		mov	r3, #0
 1454 0036 1546     		mov	r5, r2
 1455 0038 4FF00004 		mov	r4, #0
 1456 003c 3969     		ldr	r1, [r7, #16]
 1457 003e 0A46     		mov	r2, r1
 1458 0040 4FF00003 		mov	r3, #0
 1459 0044 42EA0402 		orr	r2, r2, r4
 1460 0048 43EA0503 		orr	r3, r3, r5
1138:C:/StellarisWare/driverlib\timer.c **** }
 1461              		.loc 1 1138 0
 1462 004c 1046     		mov	r0, r2
 1463 004e 1946     		mov	r1, r3
 1464 0050 07F11C07 		add	r7, r7, #28
 1465 0054 BD46     		mov	sp, r7
 1466 0056 B0BC     		pop	{r4, r5, r7}
 1467 0058 7047     		bx	lr
 1468              		.cfi_endproc
 1469              	.LFE24:
 1471 005a 00BF     		.section	.text.TimerIntRegister,"ax",%progbits
 1472              		.align	2
 1473              		.global	TimerIntRegister
 1474              		.thumb
 1475              		.thumb_func
 1477              	TimerIntRegister:
 1478              	.LFB25:
1139:C:/StellarisWare/driverlib\timer.c **** 
1140:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1141:C:/StellarisWare/driverlib\timer.c **** //
1142:C:/StellarisWare/driverlib\timer.c **** //! Registers an interrupt handler for the timer interrupt.
1143:C:/StellarisWare/driverlib\timer.c **** //!
1144:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
1145:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s); must be one of \b TIMER_A,
1146:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B, or \b TIMER_BOTH.
1147:C:/StellarisWare/driverlib\timer.c **** //! \param pfnHandler is a pointer to the function to be called when the timer
1148:C:/StellarisWare/driverlib\timer.c **** //! interrupt occurs.
1149:C:/StellarisWare/driverlib\timer.c **** //!
1150:C:/StellarisWare/driverlib\timer.c **** //! This function registers the handler to be called when a timer interrupt
1151:C:/StellarisWare/driverlib\timer.c **** //! occurs. In addition, this function enables the global interrupt in the
1152:C:/StellarisWare/driverlib\timer.c **** //! interrupt controller; specific timer interrupts must be enabled via
1153:C:/StellarisWare/driverlib\timer.c **** //! TimerIntEnable(). It is the interrupt handler's responsibility to clear the
1154:C:/StellarisWare/driverlib\timer.c **** //! interrupt source via TimerIntClear().
1155:C:/StellarisWare/driverlib\timer.c **** //!
1156:C:/StellarisWare/driverlib\timer.c **** //! \sa IntRegister() for important information about registering interrupt
1157:C:/StellarisWare/driverlib\timer.c **** //! handlers.
1158:C:/StellarisWare/driverlib\timer.c **** //!
1159:C:/StellarisWare/driverlib\timer.c **** //! \return None.
1160:C:/StellarisWare/driverlib\timer.c **** //
1161:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1162:C:/StellarisWare/driverlib\timer.c **** void
1163:C:/StellarisWare/driverlib\timer.c **** TimerIntRegister(unsigned long ulBase, unsigned long ulTimer,
1164:C:/StellarisWare/driverlib\timer.c ****                  void (*pfnHandler)(void))
1165:C:/StellarisWare/driverlib\timer.c **** {
 1479              		.loc 1 1165 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 16
 1482              		@ frame_needed = 1, uses_anonymous_args = 0
 1483 0000 80B5     		push	{r7, lr}
 1484              	.LCFI75:
 1485              		.cfi_def_cfa_offset 8
 1486              		.cfi_offset 14, -4
 1487              		.cfi_offset 7, -8
 1488 0002 84B0     		sub	sp, sp, #16
 1489              	.LCFI76:
 1490              		.cfi_def_cfa_offset 24
 1491 0004 00AF     		add	r7, sp, #0
 1492              	.LCFI77:
 1493              		.cfi_def_cfa_register 7
 1494 0006 F860     		str	r0, [r7, #12]
 1495 0008 B960     		str	r1, [r7, #8]
 1496 000a 7A60     		str	r2, [r7, #4]
1166:C:/StellarisWare/driverlib\timer.c ****     //
1167:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1168:C:/StellarisWare/driverlib\timer.c ****     //
1169:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1170:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
1171:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
1172:C:/StellarisWare/driverlib\timer.c **** 
1173:C:/StellarisWare/driverlib\timer.c ****     //
1174:C:/StellarisWare/driverlib\timer.c ****     // Get the interrupt number for this timer module.
1175:C:/StellarisWare/driverlib\timer.c ****     //
1176:C:/StellarisWare/driverlib\timer.c ****     ulBase = TimerIntNumberGet(ulBase);
 1497              		.loc 1 1176 0
 1498 000c F868     		ldr	r0, [r7, #12]
 1499 000e FFF7FEFF 		bl	TimerIntNumberGet
 1500 0012 0346     		mov	r3, r0
 1501 0014 FB60     		str	r3, [r7, #12]
1177:C:/StellarisWare/driverlib\timer.c **** 
1178:C:/StellarisWare/driverlib\timer.c ****     //
1179:C:/StellarisWare/driverlib\timer.c ****     // Register an interrupt handler for timer A if requested.
1180:C:/StellarisWare/driverlib\timer.c ****     //
1181:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_A)
 1502              		.loc 1 1181 0
 1503 0016 BB68     		ldr	r3, [r7, #8]
 1504 0018 DBB2     		uxtb	r3, r3
 1505 001a 002B     		cmp	r3, #0
 1506 001c 06D0     		beq	.L62
1182:C:/StellarisWare/driverlib\timer.c ****     {
1183:C:/StellarisWare/driverlib\timer.c ****         //
1184:C:/StellarisWare/driverlib\timer.c ****         // Register the interrupt handler.
1185:C:/StellarisWare/driverlib\timer.c ****         //
1186:C:/StellarisWare/driverlib\timer.c ****         IntRegister(ulBase, pfnHandler);
 1507              		.loc 1 1186 0
 1508 001e F868     		ldr	r0, [r7, #12]
 1509 0020 7968     		ldr	r1, [r7, #4]
 1510 0022 FFF7FEFF 		bl	IntRegister
1187:C:/StellarisWare/driverlib\timer.c **** 
1188:C:/StellarisWare/driverlib\timer.c ****         //
1189:C:/StellarisWare/driverlib\timer.c ****         // Enable the interrupt.
1190:C:/StellarisWare/driverlib\timer.c ****         //
1191:C:/StellarisWare/driverlib\timer.c ****         IntEnable(ulBase);
 1511              		.loc 1 1191 0
 1512 0026 F868     		ldr	r0, [r7, #12]
 1513 0028 FFF7FEFF 		bl	IntEnable
 1514              	.L62:
1192:C:/StellarisWare/driverlib\timer.c ****     }
1193:C:/StellarisWare/driverlib\timer.c **** 
1194:C:/StellarisWare/driverlib\timer.c ****     //
1195:C:/StellarisWare/driverlib\timer.c ****     // Register an interrupt handler for timer B if requested.
1196:C:/StellarisWare/driverlib\timer.c ****     //
1197:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_B)
 1515              		.loc 1 1197 0
 1516 002c BB68     		ldr	r3, [r7, #8]
 1517 002e 03F47F43 		and	r3, r3, #65280
 1518 0032 002B     		cmp	r3, #0
 1519 0034 0CD0     		beq	.L61
1198:C:/StellarisWare/driverlib\timer.c ****     {
1199:C:/StellarisWare/driverlib\timer.c ****         //
1200:C:/StellarisWare/driverlib\timer.c ****         // Register the interrupt handler.
1201:C:/StellarisWare/driverlib\timer.c ****         //
1202:C:/StellarisWare/driverlib\timer.c ****         IntRegister(ulBase + 1, pfnHandler);
 1520              		.loc 1 1202 0
 1521 0036 FB68     		ldr	r3, [r7, #12]
 1522 0038 03F10103 		add	r3, r3, #1
 1523 003c 1846     		mov	r0, r3
 1524 003e 7968     		ldr	r1, [r7, #4]
 1525 0040 FFF7FEFF 		bl	IntRegister
1203:C:/StellarisWare/driverlib\timer.c **** 
1204:C:/StellarisWare/driverlib\timer.c ****         //
1205:C:/StellarisWare/driverlib\timer.c ****         // Enable the interrupt.
1206:C:/StellarisWare/driverlib\timer.c ****         //
1207:C:/StellarisWare/driverlib\timer.c ****         IntEnable(ulBase + 1);
 1526              		.loc 1 1207 0
 1527 0044 FB68     		ldr	r3, [r7, #12]
 1528 0046 03F10103 		add	r3, r3, #1
 1529 004a 1846     		mov	r0, r3
 1530 004c FFF7FEFF 		bl	IntEnable
 1531              	.L61:
1208:C:/StellarisWare/driverlib\timer.c ****     }
1209:C:/StellarisWare/driverlib\timer.c **** }
 1532              		.loc 1 1209 0
 1533 0050 07F11007 		add	r7, r7, #16
 1534 0054 BD46     		mov	sp, r7
 1535 0056 80BD     		pop	{r7, pc}
 1536              		.cfi_endproc
 1537              	.LFE25:
 1539              		.section	.text.TimerIntUnregister,"ax",%progbits
 1540              		.align	2
 1541              		.global	TimerIntUnregister
 1542              		.thumb
 1543              		.thumb_func
 1545              	TimerIntUnregister:
 1546              	.LFB26:
1210:C:/StellarisWare/driverlib\timer.c **** 
1211:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1212:C:/StellarisWare/driverlib\timer.c **** //
1213:C:/StellarisWare/driverlib\timer.c **** //! Unregisters an interrupt handler for the timer interrupt.
1214:C:/StellarisWare/driverlib\timer.c **** //!
1215:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
1216:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimer specifies the timer(s); must be one of \b TIMER_A,
1217:C:/StellarisWare/driverlib\timer.c **** //! \b TIMER_B, or \b TIMER_BOTH.
1218:C:/StellarisWare/driverlib\timer.c **** //!
1219:C:/StellarisWare/driverlib\timer.c **** //! This function unregisters the handler to be called when a timer interrupt
1220:C:/StellarisWare/driverlib\timer.c **** //! occurs.  This function also masks off the interrupt in the interrupt
1221:C:/StellarisWare/driverlib\timer.c **** //! controller so that the interrupt handler is no longer called.
1222:C:/StellarisWare/driverlib\timer.c **** //!
1223:C:/StellarisWare/driverlib\timer.c **** //! \sa IntRegister() for important information about registering interrupt
1224:C:/StellarisWare/driverlib\timer.c **** //! handlers.
1225:C:/StellarisWare/driverlib\timer.c **** //!
1226:C:/StellarisWare/driverlib\timer.c **** //! \return None.
1227:C:/StellarisWare/driverlib\timer.c **** //
1228:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1229:C:/StellarisWare/driverlib\timer.c **** void
1230:C:/StellarisWare/driverlib\timer.c **** TimerIntUnregister(unsigned long ulBase, unsigned long ulTimer)
1231:C:/StellarisWare/driverlib\timer.c **** {
 1547              		.loc 1 1231 0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 8
 1550              		@ frame_needed = 1, uses_anonymous_args = 0
 1551 0000 80B5     		push	{r7, lr}
 1552              	.LCFI78:
 1553              		.cfi_def_cfa_offset 8
 1554              		.cfi_offset 14, -4
 1555              		.cfi_offset 7, -8
 1556 0002 82B0     		sub	sp, sp, #8
 1557              	.LCFI79:
 1558              		.cfi_def_cfa_offset 16
 1559 0004 00AF     		add	r7, sp, #0
 1560              	.LCFI80:
 1561              		.cfi_def_cfa_register 7
 1562 0006 7860     		str	r0, [r7, #4]
 1563 0008 3960     		str	r1, [r7, #0]
1232:C:/StellarisWare/driverlib\timer.c ****     //
1233:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1234:C:/StellarisWare/driverlib\timer.c ****     //
1235:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1236:C:/StellarisWare/driverlib\timer.c ****     ASSERT((ulTimer == TIMER_A) || (ulTimer == TIMER_B) ||
1237:C:/StellarisWare/driverlib\timer.c ****            (ulTimer == TIMER_BOTH));
1238:C:/StellarisWare/driverlib\timer.c **** 
1239:C:/StellarisWare/driverlib\timer.c ****     //
1240:C:/StellarisWare/driverlib\timer.c ****     // Get the interrupt number for this timer module.
1241:C:/StellarisWare/driverlib\timer.c ****     //
1242:C:/StellarisWare/driverlib\timer.c ****     ulBase = TimerIntNumberGet(ulBase);
 1564              		.loc 1 1242 0
 1565 000a 7868     		ldr	r0, [r7, #4]
 1566 000c FFF7FEFF 		bl	TimerIntNumberGet
 1567 0010 0346     		mov	r3, r0
 1568 0012 7B60     		str	r3, [r7, #4]
1243:C:/StellarisWare/driverlib\timer.c **** 
1244:C:/StellarisWare/driverlib\timer.c ****     //
1245:C:/StellarisWare/driverlib\timer.c ****     // Unregister the interrupt handler for timer A if requested.
1246:C:/StellarisWare/driverlib\timer.c ****     //
1247:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_A)
 1569              		.loc 1 1247 0
 1570 0014 3B68     		ldr	r3, [r7, #0]
 1571 0016 DBB2     		uxtb	r3, r3
 1572 0018 002B     		cmp	r3, #0
 1573 001a 05D0     		beq	.L65
1248:C:/StellarisWare/driverlib\timer.c ****     {
1249:C:/StellarisWare/driverlib\timer.c ****         //
1250:C:/StellarisWare/driverlib\timer.c ****         // Disable the interrupt.
1251:C:/StellarisWare/driverlib\timer.c ****         //
1252:C:/StellarisWare/driverlib\timer.c ****         IntDisable(ulBase);
 1574              		.loc 1 1252 0
 1575 001c 7868     		ldr	r0, [r7, #4]
 1576 001e FFF7FEFF 		bl	IntDisable
1253:C:/StellarisWare/driverlib\timer.c **** 
1254:C:/StellarisWare/driverlib\timer.c ****         //
1255:C:/StellarisWare/driverlib\timer.c ****         // Unregister the interrupt handler.
1256:C:/StellarisWare/driverlib\timer.c ****         //
1257:C:/StellarisWare/driverlib\timer.c ****         IntUnregister(ulBase);
 1577              		.loc 1 1257 0
 1578 0022 7868     		ldr	r0, [r7, #4]
 1579 0024 FFF7FEFF 		bl	IntUnregister
 1580              	.L65:
1258:C:/StellarisWare/driverlib\timer.c ****     }
1259:C:/StellarisWare/driverlib\timer.c **** 
1260:C:/StellarisWare/driverlib\timer.c ****     //
1261:C:/StellarisWare/driverlib\timer.c ****     // Unregister the interrupt handler for timer B if requested.
1262:C:/StellarisWare/driverlib\timer.c ****     //
1263:C:/StellarisWare/driverlib\timer.c ****     if(ulTimer & TIMER_B)
 1581              		.loc 1 1263 0
 1582 0028 3B68     		ldr	r3, [r7, #0]
 1583 002a 03F47F43 		and	r3, r3, #65280
 1584 002e 002B     		cmp	r3, #0
 1585 0030 0BD0     		beq	.L64
1264:C:/StellarisWare/driverlib\timer.c ****     {
1265:C:/StellarisWare/driverlib\timer.c ****         //
1266:C:/StellarisWare/driverlib\timer.c ****         // Disable the interrupt.
1267:C:/StellarisWare/driverlib\timer.c ****         //
1268:C:/StellarisWare/driverlib\timer.c ****         IntDisable(ulBase + 1);
 1586              		.loc 1 1268 0
 1587 0032 7B68     		ldr	r3, [r7, #4]
 1588 0034 03F10103 		add	r3, r3, #1
 1589 0038 1846     		mov	r0, r3
 1590 003a FFF7FEFF 		bl	IntDisable
1269:C:/StellarisWare/driverlib\timer.c **** 
1270:C:/StellarisWare/driverlib\timer.c ****         //
1271:C:/StellarisWare/driverlib\timer.c ****         // Unregister the interrupt handler.
1272:C:/StellarisWare/driverlib\timer.c ****         //
1273:C:/StellarisWare/driverlib\timer.c ****         IntUnregister(ulBase + 1);
 1591              		.loc 1 1273 0
 1592 003e 7B68     		ldr	r3, [r7, #4]
 1593 0040 03F10103 		add	r3, r3, #1
 1594 0044 1846     		mov	r0, r3
 1595 0046 FFF7FEFF 		bl	IntUnregister
 1596              	.L64:
1274:C:/StellarisWare/driverlib\timer.c ****     }
1275:C:/StellarisWare/driverlib\timer.c **** }
 1597              		.loc 1 1275 0
 1598 004a 07F10807 		add	r7, r7, #8
 1599 004e BD46     		mov	sp, r7
 1600 0050 80BD     		pop	{r7, pc}
 1601              		.cfi_endproc
 1602              	.LFE26:
 1604 0052 00BF     		.section	.text.TimerIntEnable,"ax",%progbits
 1605              		.align	2
 1606              		.global	TimerIntEnable
 1607              		.thumb
 1608              		.thumb_func
 1610              	TimerIntEnable:
 1611              	.LFB27:
1276:C:/StellarisWare/driverlib\timer.c **** 
1277:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1278:C:/StellarisWare/driverlib\timer.c **** //
1279:C:/StellarisWare/driverlib\timer.c **** //! Enables individual timer interrupt sources.
1280:C:/StellarisWare/driverlib\timer.c **** //!
1281:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
1282:C:/StellarisWare/driverlib\timer.c **** //! \param ulIntFlags is the bit mask of the interrupt sources to be enabled.
1283:C:/StellarisWare/driverlib\timer.c **** //!
1284:C:/StellarisWare/driverlib\timer.c **** //! This function enables the indicated timer interrupt sources.  Only the
1285:C:/StellarisWare/driverlib\timer.c **** //! sources that are enabled can be reflected to the processor interrupt;
1286:C:/StellarisWare/driverlib\timer.c **** //! disabled sources have no effect on the processor.
1287:C:/StellarisWare/driverlib\timer.c **** //!
1288:C:/StellarisWare/driverlib\timer.c **** //! The \e ulIntFlags parameter must be the logical OR of any combination of
1289:C:/StellarisWare/driverlib\timer.c **** //! the following:
1290:C:/StellarisWare/driverlib\timer.c **** //!
1291:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CAPB_EVENT  - Capture B event interrupt
1292:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CAPB_MATCH  - Capture B match interrupt
1293:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_TIMB_TIMEOUT  - Timer B timeout interrupt
1294:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_RTC_MATCH  - RTC interrupt mask
1295:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CAPA_EVENT  - Capture A event interrupt
1296:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_CAPA_MATCH  - Capture A match interrupt
1297:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_TIMA_TIMEOUT  - Timer A timeout interrupt
1298:C:/StellarisWare/driverlib\timer.c **** //!
1299:C:/StellarisWare/driverlib\timer.c **** //! \return None.
1300:C:/StellarisWare/driverlib\timer.c **** //
1301:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1302:C:/StellarisWare/driverlib\timer.c **** void
1303:C:/StellarisWare/driverlib\timer.c **** TimerIntEnable(unsigned long ulBase, unsigned long ulIntFlags)
1304:C:/StellarisWare/driverlib\timer.c **** {
 1612              		.loc 1 1304 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 8
 1615              		@ frame_needed = 1, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
 1617 0000 80B4     		push	{r7}
 1618              	.LCFI81:
 1619              		.cfi_def_cfa_offset 4
 1620              		.cfi_offset 7, -4
 1621 0002 83B0     		sub	sp, sp, #12
 1622              	.LCFI82:
 1623              		.cfi_def_cfa_offset 16
 1624 0004 00AF     		add	r7, sp, #0
 1625              	.LCFI83:
 1626              		.cfi_def_cfa_register 7
 1627 0006 7860     		str	r0, [r7, #4]
 1628 0008 3960     		str	r1, [r7, #0]
1305:C:/StellarisWare/driverlib\timer.c ****     //
1306:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1307:C:/StellarisWare/driverlib\timer.c ****     //
1308:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1309:C:/StellarisWare/driverlib\timer.c **** 
1310:C:/StellarisWare/driverlib\timer.c ****     //
1311:C:/StellarisWare/driverlib\timer.c ****     // Enable the specified interrupts.
1312:C:/StellarisWare/driverlib\timer.c ****     //
1313:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_IMR) |= ulIntFlags;
 1629              		.loc 1 1313 0
 1630 000a 7B68     		ldr	r3, [r7, #4]
 1631 000c 03F11803 		add	r3, r3, #24
 1632 0010 7A68     		ldr	r2, [r7, #4]
 1633 0012 02F11802 		add	r2, r2, #24
 1634 0016 1168     		ldr	r1, [r2, #0]
 1635 0018 3A68     		ldr	r2, [r7, #0]
 1636 001a 0A43     		orrs	r2, r2, r1
 1637 001c 1A60     		str	r2, [r3, #0]
1314:C:/StellarisWare/driverlib\timer.c **** }
 1638              		.loc 1 1314 0
 1639 001e 07F10C07 		add	r7, r7, #12
 1640 0022 BD46     		mov	sp, r7
 1641 0024 80BC     		pop	{r7}
 1642 0026 7047     		bx	lr
 1643              		.cfi_endproc
 1644              	.LFE27:
 1646              		.section	.text.TimerIntDisable,"ax",%progbits
 1647              		.align	2
 1648              		.global	TimerIntDisable
 1649              		.thumb
 1650              		.thumb_func
 1652              	TimerIntDisable:
 1653              	.LFB28:
1315:C:/StellarisWare/driverlib\timer.c **** 
1316:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1317:C:/StellarisWare/driverlib\timer.c **** //
1318:C:/StellarisWare/driverlib\timer.c **** //! Disables individual timer interrupt sources.
1319:C:/StellarisWare/driverlib\timer.c **** //!
1320:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
1321:C:/StellarisWare/driverlib\timer.c **** //! \param ulIntFlags is the bit mask of the interrupt sources to be disabled.
1322:C:/StellarisWare/driverlib\timer.c **** //!
1323:C:/StellarisWare/driverlib\timer.c **** //! This function disables the indicated timer interrupt sources.  Only the
1324:C:/StellarisWare/driverlib\timer.c **** //! sources that are enabled can be reflected to the processor interrupt;
1325:C:/StellarisWare/driverlib\timer.c **** //! disabled sources have no effect on the processor.
1326:C:/StellarisWare/driverlib\timer.c **** //!
1327:C:/StellarisWare/driverlib\timer.c **** //! The \e ulIntFlags parameter has the same definition as the \e ulIntFlags
1328:C:/StellarisWare/driverlib\timer.c **** //! parameter to TimerIntEnable().
1329:C:/StellarisWare/driverlib\timer.c **** //!
1330:C:/StellarisWare/driverlib\timer.c **** //! \return None.
1331:C:/StellarisWare/driverlib\timer.c **** //
1332:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1333:C:/StellarisWare/driverlib\timer.c **** void
1334:C:/StellarisWare/driverlib\timer.c **** TimerIntDisable(unsigned long ulBase, unsigned long ulIntFlags)
1335:C:/StellarisWare/driverlib\timer.c **** {
 1654              		.loc 1 1335 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 8
 1657              		@ frame_needed = 1, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659 0000 80B4     		push	{r7}
 1660              	.LCFI84:
 1661              		.cfi_def_cfa_offset 4
 1662              		.cfi_offset 7, -4
 1663 0002 83B0     		sub	sp, sp, #12
 1664              	.LCFI85:
 1665              		.cfi_def_cfa_offset 16
 1666 0004 00AF     		add	r7, sp, #0
 1667              	.LCFI86:
 1668              		.cfi_def_cfa_register 7
 1669 0006 7860     		str	r0, [r7, #4]
 1670 0008 3960     		str	r1, [r7, #0]
1336:C:/StellarisWare/driverlib\timer.c ****     //
1337:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1338:C:/StellarisWare/driverlib\timer.c ****     //
1339:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1340:C:/StellarisWare/driverlib\timer.c **** 
1341:C:/StellarisWare/driverlib\timer.c ****     //
1342:C:/StellarisWare/driverlib\timer.c ****     // Disable the specified interrupts.
1343:C:/StellarisWare/driverlib\timer.c ****     //
1344:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_IMR) &= ~(ulIntFlags);
 1671              		.loc 1 1344 0
 1672 000a 7B68     		ldr	r3, [r7, #4]
 1673 000c 03F11803 		add	r3, r3, #24
 1674 0010 7A68     		ldr	r2, [r7, #4]
 1675 0012 02F11802 		add	r2, r2, #24
 1676 0016 1168     		ldr	r1, [r2, #0]
 1677 0018 3A68     		ldr	r2, [r7, #0]
 1678 001a 6FEA0202 		mvn	r2, r2
 1679 001e 0A40     		ands	r2, r2, r1
 1680 0020 1A60     		str	r2, [r3, #0]
1345:C:/StellarisWare/driverlib\timer.c **** }
 1681              		.loc 1 1345 0
 1682 0022 07F10C07 		add	r7, r7, #12
 1683 0026 BD46     		mov	sp, r7
 1684 0028 80BC     		pop	{r7}
 1685 002a 7047     		bx	lr
 1686              		.cfi_endproc
 1687              	.LFE28:
 1689              		.section	.text.TimerIntStatus,"ax",%progbits
 1690              		.align	2
 1691              		.global	TimerIntStatus
 1692              		.thumb
 1693              		.thumb_func
 1695              	TimerIntStatus:
 1696              	.LFB29:
1346:C:/StellarisWare/driverlib\timer.c **** 
1347:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1348:C:/StellarisWare/driverlib\timer.c **** //
1349:C:/StellarisWare/driverlib\timer.c **** //! Gets the current interrupt status.
1350:C:/StellarisWare/driverlib\timer.c **** //!
1351:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
1352:C:/StellarisWare/driverlib\timer.c **** //! \param bMasked is false if the raw interrupt status is required and true if
1353:C:/StellarisWare/driverlib\timer.c **** //! the masked interrupt status is required.
1354:C:/StellarisWare/driverlib\timer.c **** //!
1355:C:/StellarisWare/driverlib\timer.c **** //! This function returns the interrupt status for the timer module.  Either
1356:C:/StellarisWare/driverlib\timer.c **** //! the raw interrupt status or the status of interrupts that are allowed to
1357:C:/StellarisWare/driverlib\timer.c **** //! reflect to the processor can be returned.
1358:C:/StellarisWare/driverlib\timer.c **** //!
1359:C:/StellarisWare/driverlib\timer.c **** //! \return The current interrupt status, enumerated as a bit field of
1360:C:/StellarisWare/driverlib\timer.c **** //! values described in TimerIntEnable().
1361:C:/StellarisWare/driverlib\timer.c **** //
1362:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1363:C:/StellarisWare/driverlib\timer.c **** unsigned long
1364:C:/StellarisWare/driverlib\timer.c **** TimerIntStatus(unsigned long ulBase, tBoolean bMasked)
1365:C:/StellarisWare/driverlib\timer.c **** {
 1697              		.loc 1 1365 0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 8
 1700              		@ frame_needed = 1, uses_anonymous_args = 0
 1701              		@ link register save eliminated.
 1702 0000 80B4     		push	{r7}
 1703              	.LCFI87:
 1704              		.cfi_def_cfa_offset 4
 1705              		.cfi_offset 7, -4
 1706 0002 83B0     		sub	sp, sp, #12
 1707              	.LCFI88:
 1708              		.cfi_def_cfa_offset 16
 1709 0004 00AF     		add	r7, sp, #0
 1710              	.LCFI89:
 1711              		.cfi_def_cfa_register 7
 1712 0006 7860     		str	r0, [r7, #4]
 1713 0008 0B46     		mov	r3, r1
 1714 000a FB70     		strb	r3, [r7, #3]
1366:C:/StellarisWare/driverlib\timer.c ****     //
1367:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1368:C:/StellarisWare/driverlib\timer.c ****     //
1369:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1370:C:/StellarisWare/driverlib\timer.c **** 
1371:C:/StellarisWare/driverlib\timer.c ****     //
1372:C:/StellarisWare/driverlib\timer.c ****     // Return either the interrupt status or the raw interrupt status as
1373:C:/StellarisWare/driverlib\timer.c ****     // requested.
1374:C:/StellarisWare/driverlib\timer.c ****     //
1375:C:/StellarisWare/driverlib\timer.c ****     return(bMasked ? HWREG(ulBase + TIMER_O_MIS) :
 1715              		.loc 1 1375 0
 1716 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1717 000e 002B     		cmp	r3, #0
 1718 0010 04D0     		beq	.L70
 1719              		.loc 1 1375 0 is_stmt 0 discriminator 1
 1720 0012 7B68     		ldr	r3, [r7, #4]
 1721 0014 03F12003 		add	r3, r3, #32
 1722 0018 1B68     		ldr	r3, [r3, #0]
 1723 001a 03E0     		b	.L71
 1724              	.L70:
1376:C:/StellarisWare/driverlib\timer.c ****            HWREG(ulBase + TIMER_O_RIS));
 1725              		.loc 1 1376 0 is_stmt 1 discriminator 2
 1726 001c 7B68     		ldr	r3, [r7, #4]
 1727 001e 03F11C03 		add	r3, r3, #28
1375:C:/StellarisWare/driverlib\timer.c ****     return(bMasked ? HWREG(ulBase + TIMER_O_MIS) :
 1728              		.loc 1 1375 0 discriminator 2
 1729 0022 1B68     		ldr	r3, [r3, #0]
 1730              	.L71:
1377:C:/StellarisWare/driverlib\timer.c **** }
 1731              		.loc 1 1377 0 discriminator 3
 1732 0024 1846     		mov	r0, r3
 1733 0026 07F10C07 		add	r7, r7, #12
 1734 002a BD46     		mov	sp, r7
 1735 002c 80BC     		pop	{r7}
 1736 002e 7047     		bx	lr
 1737              		.cfi_endproc
 1738              	.LFE29:
 1740              		.section	.text.TimerIntClear,"ax",%progbits
 1741              		.align	2
 1742              		.global	TimerIntClear
 1743              		.thumb
 1744              		.thumb_func
 1746              	TimerIntClear:
 1747              	.LFB30:
1378:C:/StellarisWare/driverlib\timer.c **** 
1379:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1380:C:/StellarisWare/driverlib\timer.c **** //
1381:C:/StellarisWare/driverlib\timer.c **** //! Clears timer interrupt sources.
1382:C:/StellarisWare/driverlib\timer.c **** //!
1383:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.
1384:C:/StellarisWare/driverlib\timer.c **** //! \param ulIntFlags is a bit mask of the interrupt sources to be cleared.
1385:C:/StellarisWare/driverlib\timer.c **** //!
1386:C:/StellarisWare/driverlib\timer.c **** //! The specified timer interrupt sources are cleared, so that they no longer
1387:C:/StellarisWare/driverlib\timer.c **** //! assert.  This function must be called in the interrupt handler to keep the
1388:C:/StellarisWare/driverlib\timer.c **** //! interrupt from being triggered again immediately upon exit.
1389:C:/StellarisWare/driverlib\timer.c **** //!
1390:C:/StellarisWare/driverlib\timer.c **** //! The \e ulIntFlags parameter has the same definition as the \e ulIntFlags
1391:C:/StellarisWare/driverlib\timer.c **** //! parameter to TimerIntEnable().
1392:C:/StellarisWare/driverlib\timer.c **** //!
1393:C:/StellarisWare/driverlib\timer.c **** //! \note Because there is a write buffer in the Cortex-M processor, it may
1394:C:/StellarisWare/driverlib\timer.c **** //! take several clock cycles before the interrupt source is actually cleared.
1395:C:/StellarisWare/driverlib\timer.c **** //! Therefore, it is recommended that the interrupt source be cleared early in
1396:C:/StellarisWare/driverlib\timer.c **** //! the interrupt handler (as opposed to the very last action) to avoid
1397:C:/StellarisWare/driverlib\timer.c **** //! returning from the interrupt handler before the interrupt source is
1398:C:/StellarisWare/driverlib\timer.c **** //! actually cleared.  Failure to do so may result in the interrupt handler
1399:C:/StellarisWare/driverlib\timer.c **** //! being immediately reentered (because the interrupt controller still sees
1400:C:/StellarisWare/driverlib\timer.c **** //! the interrupt source asserted).
1401:C:/StellarisWare/driverlib\timer.c **** //!
1402:C:/StellarisWare/driverlib\timer.c **** //! \return None.
1403:C:/StellarisWare/driverlib\timer.c **** //
1404:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1405:C:/StellarisWare/driverlib\timer.c **** void
1406:C:/StellarisWare/driverlib\timer.c **** TimerIntClear(unsigned long ulBase, unsigned long ulIntFlags)
1407:C:/StellarisWare/driverlib\timer.c **** {
 1748              		.loc 1 1407 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 8
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752              		@ link register save eliminated.
 1753 0000 80B4     		push	{r7}
 1754              	.LCFI90:
 1755              		.cfi_def_cfa_offset 4
 1756              		.cfi_offset 7, -4
 1757 0002 83B0     		sub	sp, sp, #12
 1758              	.LCFI91:
 1759              		.cfi_def_cfa_offset 16
 1760 0004 00AF     		add	r7, sp, #0
 1761              	.LCFI92:
 1762              		.cfi_def_cfa_register 7
 1763 0006 7860     		str	r0, [r7, #4]
 1764 0008 3960     		str	r1, [r7, #0]
1408:C:/StellarisWare/driverlib\timer.c ****     //
1409:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1410:C:/StellarisWare/driverlib\timer.c ****     //
1411:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1412:C:/StellarisWare/driverlib\timer.c **** 
1413:C:/StellarisWare/driverlib\timer.c ****     //
1414:C:/StellarisWare/driverlib\timer.c ****     // Clear the requested interrupt sources.
1415:C:/StellarisWare/driverlib\timer.c ****     //
1416:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_ICR) = ulIntFlags;
 1765              		.loc 1 1416 0
 1766 000a 7B68     		ldr	r3, [r7, #4]
 1767 000c 03F12403 		add	r3, r3, #36
 1768 0010 3A68     		ldr	r2, [r7, #0]
 1769 0012 1A60     		str	r2, [r3, #0]
1417:C:/StellarisWare/driverlib\timer.c **** }
 1770              		.loc 1 1417 0
 1771 0014 07F10C07 		add	r7, r7, #12
 1772 0018 BD46     		mov	sp, r7
 1773 001a 80BC     		pop	{r7}
 1774 001c 7047     		bx	lr
 1775              		.cfi_endproc
 1776              	.LFE30:
 1778 001e 00BF     		.section	.text.TimerSynchronize,"ax",%progbits
 1779              		.align	2
 1780              		.global	TimerSynchronize
 1781              		.thumb
 1782              		.thumb_func
 1784              	TimerSynchronize:
 1785              	.LFB31:
1418:C:/StellarisWare/driverlib\timer.c **** 
1419:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1420:C:/StellarisWare/driverlib\timer.c **** //
1421:C:/StellarisWare/driverlib\timer.c **** //! Synchronizes the counters in a set of timers.
1422:C:/StellarisWare/driverlib\timer.c **** //!
1423:C:/StellarisWare/driverlib\timer.c **** //! \param ulBase is the base address of the timer module.  This parameter must
1424:C:/StellarisWare/driverlib\timer.c **** //! be the base address of Timer0 (in other words, \b TIMER0_BASE).
1425:C:/StellarisWare/driverlib\timer.c **** //! \param ulTimers is the set of timers to synchronize.
1426:C:/StellarisWare/driverlib\timer.c **** //!
1427:C:/StellarisWare/driverlib\timer.c **** //! This function synchronizes the counters in a specified set of timers.
1428:C:/StellarisWare/driverlib\timer.c **** //! When a timer is running in half-width mode, each half can be included or
1429:C:/StellarisWare/driverlib\timer.c **** //! excluded in the synchronization event.  When a timer is running in
1430:C:/StellarisWare/driverlib\timer.c **** //! full-width mode, only the A timer can be synchronized (specifying the B
1431:C:/StellarisWare/driverlib\timer.c **** //! timer has no effect).
1432:C:/StellarisWare/driverlib\timer.c **** //!
1433:C:/StellarisWare/driverlib\timer.c **** //! The \e ulTimers parameter is the logical OR of any of the following
1434:C:/StellarisWare/driverlib\timer.c **** //! defines:
1435:C:/StellarisWare/driverlib\timer.c **** //!
1436:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_0A_SYNC
1437:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_0B_SYNC
1438:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_1A_SYNC
1439:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_1B_SYNC
1440:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_2A_SYNC
1441:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_2B_SYNC
1442:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_3A_SYNC
1443:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_3B_SYNC
1444:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_4A_SYNC
1445:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_4B_SYNC
1446:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_5A_SYNC
1447:C:/StellarisWare/driverlib\timer.c **** //! - \b TIMER_5B_SYNC
1448:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_0A_SYNC
1449:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_0B_SYNC
1450:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_1A_SYNC
1451:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_1B_SYNC
1452:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_2A_SYNC
1453:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_2B_SYNC
1454:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_3A_SYNC
1455:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_3B_SYNC
1456:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_4A_SYNC
1457:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_4B_SYNC
1458:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_5A_SYNC
1459:C:/StellarisWare/driverlib\timer.c **** //! - \b WTIMER_5B_SYNC
1460:C:/StellarisWare/driverlib\timer.c **** //!
1461:C:/StellarisWare/driverlib\timer.c **** //! \note This functionality is not available on all parts.
1462:C:/StellarisWare/driverlib\timer.c **** //!
1463:C:/StellarisWare/driverlib\timer.c **** //! \return None.
1464:C:/StellarisWare/driverlib\timer.c **** //
1465:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1466:C:/StellarisWare/driverlib\timer.c **** void
1467:C:/StellarisWare/driverlib\timer.c **** TimerSynchronize(unsigned long ulBase, unsigned long ulTimers)
1468:C:/StellarisWare/driverlib\timer.c **** {
 1786              		.loc 1 1468 0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 8
 1789              		@ frame_needed = 1, uses_anonymous_args = 0
 1790              		@ link register save eliminated.
 1791 0000 80B4     		push	{r7}
 1792              	.LCFI93:
 1793              		.cfi_def_cfa_offset 4
 1794              		.cfi_offset 7, -4
 1795 0002 83B0     		sub	sp, sp, #12
 1796              	.LCFI94:
 1797              		.cfi_def_cfa_offset 16
 1798 0004 00AF     		add	r7, sp, #0
 1799              	.LCFI95:
 1800              		.cfi_def_cfa_register 7
 1801 0006 7860     		str	r0, [r7, #4]
 1802 0008 3960     		str	r1, [r7, #0]
1469:C:/StellarisWare/driverlib\timer.c ****     //
1470:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1471:C:/StellarisWare/driverlib\timer.c ****     //
1472:C:/StellarisWare/driverlib\timer.c ****     ASSERT(ulBase == TIMER0_BASE);
1473:C:/StellarisWare/driverlib\timer.c **** 
1474:C:/StellarisWare/driverlib\timer.c ****     //
1475:C:/StellarisWare/driverlib\timer.c ****     // Synchronize the specified timers.
1476:C:/StellarisWare/driverlib\timer.c ****     //
1477:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_SYNC) = ulTimers;
 1803              		.loc 1 1477 0
 1804 000a 7B68     		ldr	r3, [r7, #4]
 1805 000c 03F11003 		add	r3, r3, #16
 1806 0010 3A68     		ldr	r2, [r7, #0]
 1807 0012 1A60     		str	r2, [r3, #0]
1478:C:/StellarisWare/driverlib\timer.c **** }
 1808              		.loc 1 1478 0
 1809 0014 07F10C07 		add	r7, r7, #12
 1810 0018 BD46     		mov	sp, r7
 1811 001a 80BC     		pop	{r7}
 1812 001c 7047     		bx	lr
 1813              		.cfi_endproc
 1814              	.LFE31:
 1816 001e 00BF     		.section	.text.TimerQuiesce,"ax",%progbits
 1817              		.align	2
 1818              		.global	TimerQuiesce
 1819              		.thumb
 1820              		.thumb_func
 1822              	TimerQuiesce:
 1823              	.LFB32:
1479:C:/StellarisWare/driverlib\timer.c **** 
1480:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1481:C:/StellarisWare/driverlib\timer.c **** //
1482:C:/StellarisWare/driverlib\timer.c **** // Puts the timer into its reset state.
1483:C:/StellarisWare/driverlib\timer.c **** //
1484:C:/StellarisWare/driverlib\timer.c **** // \param ulBase is the base address of the timer module.
1485:C:/StellarisWare/driverlib\timer.c **** //
1486:C:/StellarisWare/driverlib\timer.c **** // This function disables the specified timer, and all its interrupts are
1487:C:/StellarisWare/driverlib\timer.c **** // disabled, cleared, and unregistered.  Then the timer registers are set to
1488:C:/StellarisWare/driverlib\timer.c **** // their reset value.
1489:C:/StellarisWare/driverlib\timer.c **** //
1490:C:/StellarisWare/driverlib\timer.c **** // \return None.
1491:C:/StellarisWare/driverlib\timer.c **** //
1492:C:/StellarisWare/driverlib\timer.c **** //*****************************************************************************
1493:C:/StellarisWare/driverlib\timer.c **** #ifndef DEPRECATED
1494:C:/StellarisWare/driverlib\timer.c **** void
1495:C:/StellarisWare/driverlib\timer.c **** TimerQuiesce(unsigned long ulBase)
1496:C:/StellarisWare/driverlib\timer.c **** {
 1824              		.loc 1 1496 0
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 8
 1827              		@ frame_needed = 1, uses_anonymous_args = 0
 1828 0000 80B5     		push	{r7, lr}
 1829              	.LCFI96:
 1830              		.cfi_def_cfa_offset 8
 1831              		.cfi_offset 14, -4
 1832              		.cfi_offset 7, -8
 1833 0002 82B0     		sub	sp, sp, #8
 1834              	.LCFI97:
 1835              		.cfi_def_cfa_offset 16
 1836 0004 00AF     		add	r7, sp, #0
 1837              	.LCFI98:
 1838              		.cfi_def_cfa_register 7
 1839 0006 7860     		str	r0, [r7, #4]
1497:C:/StellarisWare/driverlib\timer.c ****     //
1498:C:/StellarisWare/driverlib\timer.c ****     // Check the arguments.
1499:C:/StellarisWare/driverlib\timer.c ****     //
1500:C:/StellarisWare/driverlib\timer.c ****     ASSERT(TimerBaseValid(ulBase));
1501:C:/StellarisWare/driverlib\timer.c **** 
1502:C:/StellarisWare/driverlib\timer.c ****     //
1503:C:/StellarisWare/driverlib\timer.c ****     // Disable the timer.
1504:C:/StellarisWare/driverlib\timer.c ****     //
1505:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CTL) = TIMER_RV_CTL;
 1840              		.loc 1 1505 0
 1841 0008 7B68     		ldr	r3, [r7, #4]
 1842 000a 03F10C03 		add	r3, r3, #12
 1843 000e 4FF00002 		mov	r2, #0
 1844 0012 1A60     		str	r2, [r3, #0]
1506:C:/StellarisWare/driverlib\timer.c **** 
1507:C:/StellarisWare/driverlib\timer.c ****     //
1508:C:/StellarisWare/driverlib\timer.c ****     // Disable all the timer interrupts.
1509:C:/StellarisWare/driverlib\timer.c ****     //
1510:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_IMR) = TIMER_RV_IMR;
 1845              		.loc 1 1510 0
 1846 0014 7B68     		ldr	r3, [r7, #4]
 1847 0016 03F11803 		add	r3, r3, #24
 1848 001a 4FF00002 		mov	r2, #0
 1849 001e 1A60     		str	r2, [r3, #0]
1511:C:/StellarisWare/driverlib\timer.c **** 
1512:C:/StellarisWare/driverlib\timer.c ****     //
1513:C:/StellarisWare/driverlib\timer.c ****     // Clear all the timer interrupts.
1514:C:/StellarisWare/driverlib\timer.c ****     //
1515:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_ICR) = 0xFFFFFFFF;
 1850              		.loc 1 1515 0
 1851 0020 7B68     		ldr	r3, [r7, #4]
 1852 0022 03F12403 		add	r3, r3, #36
 1853 0026 4FF0FF32 		mov	r2, #-1
 1854 002a 1A60     		str	r2, [r3, #0]
1516:C:/StellarisWare/driverlib\timer.c **** 
1517:C:/StellarisWare/driverlib\timer.c ****     //
1518:C:/StellarisWare/driverlib\timer.c ****     // Unregister the interrupt handler, which also disables interrupts to the
1519:C:/StellarisWare/driverlib\timer.c ****     // core.
1520:C:/StellarisWare/driverlib\timer.c ****     //
1521:C:/StellarisWare/driverlib\timer.c ****     TimerIntUnregister(ulBase, TIMER_BOTH);
 1855              		.loc 1 1521 0
 1856 002c 7868     		ldr	r0, [r7, #4]
 1857 002e 4FF6FF71 		movw	r1, #65535
 1858 0032 FFF7FEFF 		bl	TimerIntUnregister
1522:C:/StellarisWare/driverlib\timer.c **** 
1523:C:/StellarisWare/driverlib\timer.c ****     //
1524:C:/StellarisWare/driverlib\timer.c ****     // Set all the registers to their reset value.
1525:C:/StellarisWare/driverlib\timer.c ****     //
1526:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_CFG) = TIMER_RV_CFG;
 1859              		.loc 1 1526 0
 1860 0036 7B68     		ldr	r3, [r7, #4]
 1861 0038 4FF00002 		mov	r2, #0
 1862 003c 1A60     		str	r2, [r3, #0]
1527:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TAMR) = TIMER_RV_TAMR;
 1863              		.loc 1 1527 0
 1864 003e 7B68     		ldr	r3, [r7, #4]
 1865 0040 03F10403 		add	r3, r3, #4
 1866 0044 4FF00002 		mov	r2, #0
 1867 0048 1A60     		str	r2, [r3, #0]
1528:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBMR) = TIMER_RV_TBMR;
 1868              		.loc 1 1528 0
 1869 004a 7B68     		ldr	r3, [r7, #4]
 1870 004c 03F10803 		add	r3, r3, #8
 1871 0050 4FF00002 		mov	r2, #0
 1872 0054 1A60     		str	r2, [r3, #0]
1529:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_RIS) = TIMER_RV_RIS;
 1873              		.loc 1 1529 0
 1874 0056 7B68     		ldr	r3, [r7, #4]
 1875 0058 03F11C03 		add	r3, r3, #28
 1876 005c 4FF00002 		mov	r2, #0
 1877 0060 1A60     		str	r2, [r3, #0]
1530:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_MIS) = TIMER_RV_MIS;
 1878              		.loc 1 1530 0
 1879 0062 7B68     		ldr	r3, [r7, #4]
 1880 0064 03F12003 		add	r3, r3, #32
 1881 0068 4FF00002 		mov	r2, #0
 1882 006c 1A60     		str	r2, [r3, #0]
1531:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TAILR) = TIMER_RV_TAILR;
 1883              		.loc 1 1531 0
 1884 006e 7B68     		ldr	r3, [r7, #4]
 1885 0070 03F12803 		add	r3, r3, #40
 1886 0074 4FF0FF32 		mov	r2, #-1
 1887 0078 1A60     		str	r2, [r3, #0]
1532:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBILR) = TIMER_RV_TBILR;
 1888              		.loc 1 1532 0
 1889 007a 7B68     		ldr	r3, [r7, #4]
 1890 007c 03F12C03 		add	r3, r3, #44
 1891 0080 4FF6FF72 		movw	r2, #65535
 1892 0084 1A60     		str	r2, [r3, #0]
1533:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TAMATCHR) = TIMER_RV_TAMATCHR;
 1893              		.loc 1 1533 0
 1894 0086 7B68     		ldr	r3, [r7, #4]
 1895 0088 03F13003 		add	r3, r3, #48
 1896 008c 4FF0FF32 		mov	r2, #-1
 1897 0090 1A60     		str	r2, [r3, #0]
1534:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBMATCHR) = TIMER_RV_TBMATCHR;
 1898              		.loc 1 1534 0
 1899 0092 7B68     		ldr	r3, [r7, #4]
 1900 0094 03F13403 		add	r3, r3, #52
 1901 0098 4FF6FF72 		movw	r2, #65535
 1902 009c 1A60     		str	r2, [r3, #0]
1535:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TAPR) = TIMER_RV_TAPR;
 1903              		.loc 1 1535 0
 1904 009e 7B68     		ldr	r3, [r7, #4]
 1905 00a0 03F13803 		add	r3, r3, #56
 1906 00a4 4FF00002 		mov	r2, #0
 1907 00a8 1A60     		str	r2, [r3, #0]
1536:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBPR) = TIMER_RV_TBPR;
 1908              		.loc 1 1536 0
 1909 00aa 7B68     		ldr	r3, [r7, #4]
 1910 00ac 03F13C03 		add	r3, r3, #60
 1911 00b0 4FF00002 		mov	r2, #0
 1912 00b4 1A60     		str	r2, [r3, #0]
1537:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TAPMR) = TIMER_RV_TAPMR;
 1913              		.loc 1 1537 0
 1914 00b6 7B68     		ldr	r3, [r7, #4]
 1915 00b8 03F14003 		add	r3, r3, #64
 1916 00bc 4FF00002 		mov	r2, #0
 1917 00c0 1A60     		str	r2, [r3, #0]
1538:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBPMR) = TIMER_RV_TBPMR;
 1918              		.loc 1 1538 0
 1919 00c2 7B68     		ldr	r3, [r7, #4]
 1920 00c4 03F14403 		add	r3, r3, #68
 1921 00c8 4FF00002 		mov	r2, #0
 1922 00cc 1A60     		str	r2, [r3, #0]
1539:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TAR) = TIMER_RV_TAR;
 1923              		.loc 1 1539 0
 1924 00ce 7B68     		ldr	r3, [r7, #4]
 1925 00d0 03F14803 		add	r3, r3, #72
 1926 00d4 4FF0FF32 		mov	r2, #-1
 1927 00d8 1A60     		str	r2, [r3, #0]
1540:C:/StellarisWare/driverlib\timer.c ****     HWREG(ulBase + TIMER_O_TBR) = TIMER_RV_TBR;
 1928              		.loc 1 1540 0
 1929 00da 7B68     		ldr	r3, [r7, #4]
 1930 00dc 03F14C03 		add	r3, r3, #76
 1931 00e0 4FF6FF72 		movw	r2, #65535
 1932 00e4 1A60     		str	r2, [r3, #0]
1541:C:/StellarisWare/driverlib\timer.c **** }
 1933              		.loc 1 1541 0
 1934 00e6 07F10807 		add	r7, r7, #8
 1935 00ea BD46     		mov	sp, r7
 1936 00ec 80BD     		pop	{r7, pc}
 1937              		.cfi_endproc
 1938              	.LFE32:
 1940 00ee 00BF     		.text
 1941              	.Letext0:
 1942              		.file 2 "C:\\StellarisWare/inc/hw_types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:19     .rodata:00000000 $d
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:22     .rodata:00000000 g_ppulTimerIntMap
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:48     .text.TimerIntNumberGet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:52     .text.TimerIntNumberGet:00000000 TimerIntNumberGet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:115    .text.TimerEnable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:120    .text.TimerEnable:00000000 TimerEnable
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:160    .text.TimerDisable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:165    .text.TimerDisable:00000000 TimerDisable
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:206    .text.TimerConfigure:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:211    .text.TimerConfigure:00000000 TimerConfigure
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:271    .text.TimerControlLevel:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:276    .text.TimerControlLevel:00000000 TimerControlLevel
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:338    .text.TimerControlTrigger:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:343    .text.TimerControlTrigger:00000000 TimerControlTrigger
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:405    .text.TimerControlEvent:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:410    .text.TimerControlEvent:00000000 TimerControlEvent
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:460    .text.TimerControlStall:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:465    .text.TimerControlStall:00000000 TimerControlStall
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:527    .text.TimerControlWaitOnTrigger:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:532    .text.TimerControlWaitOnTrigger:00000000 TimerControlWaitOnTrigger
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:618    .text.TimerRTCEnable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:623    .text.TimerRTCEnable:00000000 TimerRTCEnable
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:658    .text.TimerRTCDisable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:663    .text.TimerRTCDisable:00000000 TimerRTCDisable
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:698    .text.TimerPrescaleSet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:703    .text.TimerPrescaleSet:00000000 TimerPrescaleSet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:754    .text.TimerPrescaleGet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:759    .text.TimerPrescaleGet:00000000 TimerPrescaleGet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:804    .text.TimerPrescaleMatchSet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:809    .text.TimerPrescaleMatchSet:00000000 TimerPrescaleMatchSet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:860    .text.TimerPrescaleMatchGet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:865    .text.TimerPrescaleMatchGet:00000000 TimerPrescaleMatchGet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:910    .text.TimerLoadSet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:915    .text.TimerLoadSet:00000000 TimerLoadSet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:966    .text.TimerLoadGet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:971    .text.TimerLoadGet:00000000 TimerLoadGet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1016   .text.TimerLoadSet64:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1021   .text.TimerLoadSet64:00000000 TimerLoadSet64
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1064   .text.TimerLoadGet64:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1069   .text.TimerLoadGet64:00000000 TimerLoadGet64
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1132   .text.TimerValueGet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1137   .text.TimerValueGet:00000000 TimerValueGet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1182   .text.TimerValueGet64:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1187   .text.TimerValueGet64:00000000 TimerValueGet64
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1250   .text.TimerMatchSet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1255   .text.TimerMatchSet:00000000 TimerMatchSet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1306   .text.TimerMatchGet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1311   .text.TimerMatchGet:00000000 TimerMatchGet
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1356   .text.TimerMatchSet64:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1361   .text.TimerMatchSet64:00000000 TimerMatchSet64
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1404   .text.TimerMatchGet64:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1409   .text.TimerMatchGet64:00000000 TimerMatchGet64
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1472   .text.TimerIntRegister:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1477   .text.TimerIntRegister:00000000 TimerIntRegister
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1540   .text.TimerIntUnregister:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1545   .text.TimerIntUnregister:00000000 TimerIntUnregister
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1605   .text.TimerIntEnable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1610   .text.TimerIntEnable:00000000 TimerIntEnable
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1647   .text.TimerIntDisable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1652   .text.TimerIntDisable:00000000 TimerIntDisable
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1690   .text.TimerIntStatus:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1695   .text.TimerIntStatus:00000000 TimerIntStatus
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1741   .text.TimerIntClear:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1746   .text.TimerIntClear:00000000 TimerIntClear
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1779   .text.TimerSynchronize:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1784   .text.TimerSynchronize:00000000 TimerSynchronize
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1817   .text.TimerQuiesce:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\cc08gurN.s:1822   .text.TimerQuiesce:00000000 TimerQuiesce
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
IntRegister
IntEnable
IntDisable
IntUnregister
