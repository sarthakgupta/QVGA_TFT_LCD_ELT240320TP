   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"gpio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	g_pulGPIOBaseAddrs:
  23 0000 00400040 		.word	1073758208
  24 0004 00800540 		.word	1074102272
  25 0008 00500040 		.word	1073762304
  26 000c 00900540 		.word	1074106368
  27 0010 00600040 		.word	1073766400
  28 0014 00A00540 		.word	1074110464
  29 0018 00700040 		.word	1073770496
  30 001c 00B00540 		.word	1074114560
  31 0020 00400240 		.word	1073889280
  32 0024 00C00540 		.word	1074118656
  33 0028 00500240 		.word	1073893376
  34 002c 00D00540 		.word	1074122752
  35 0030 00600240 		.word	1073897472
  36 0034 00E00540 		.word	1074126848
  37 0038 00700240 		.word	1073901568
  38 003c 00F00540 		.word	1074130944
  39 0040 00D00340 		.word	1073991680
  40 0044 00000640 		.word	1074135040
  41 0048 00100640 		.word	1074139136
  42 004c 00100640 		.word	1074139136
  43 0050 00200640 		.word	1074143232
  44 0054 00200640 		.word	1074143232
  45 0058 00300640 		.word	1074147328
  46 005c 00300640 		.word	1074147328
  47 0060 00400640 		.word	1074151424
  48 0064 00400640 		.word	1074151424
  49 0068 00500640 		.word	1074155520
  50 006c 00500640 		.word	1074155520
  51 0070 00600640 		.word	1074159616
  52 0074 00600640 		.word	1074159616
  53              		.section	.text.GPIOGetIntNumber,"ax",%progbits
  54              		.align	2
  55              		.thumb
  56              		.thumb_func
  58              	GPIOGetIntNumber:
  59              	.LFB0:
  60              		.file 1 "C:/StellarisWare/driverlib/gpio.c"
   1:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
   2:C:/StellarisWare/driverlib\gpio.c **** //
   3:C:/StellarisWare/driverlib\gpio.c **** // gpio.c - API for GPIO ports
   4:C:/StellarisWare/driverlib\gpio.c **** //
   5:C:/StellarisWare/driverlib\gpio.c **** // Copyright (c) 2005-2012 Texas Instruments Incorporated.  All rights reserved.
   6:C:/StellarisWare/driverlib\gpio.c **** // Software License Agreement
   7:C:/StellarisWare/driverlib\gpio.c **** // 
   8:C:/StellarisWare/driverlib\gpio.c **** //   Redistribution and use in source and binary forms, with or without
   9:C:/StellarisWare/driverlib\gpio.c **** //   modification, are permitted provided that the following conditions
  10:C:/StellarisWare/driverlib\gpio.c **** //   are met:
  11:C:/StellarisWare/driverlib\gpio.c **** // 
  12:C:/StellarisWare/driverlib\gpio.c **** //   Redistributions of source code must retain the above copyright
  13:C:/StellarisWare/driverlib\gpio.c **** //   notice, this list of conditions and the following disclaimer.
  14:C:/StellarisWare/driverlib\gpio.c **** // 
  15:C:/StellarisWare/driverlib\gpio.c **** //   Redistributions in binary form must reproduce the above copyright
  16:C:/StellarisWare/driverlib\gpio.c **** //   notice, this list of conditions and the following disclaimer in the
  17:C:/StellarisWare/driverlib\gpio.c **** //   documentation and/or other materials provided with the  
  18:C:/StellarisWare/driverlib\gpio.c **** //   distribution.
  19:C:/StellarisWare/driverlib\gpio.c **** // 
  20:C:/StellarisWare/driverlib\gpio.c **** //   Neither the name of Texas Instruments Incorporated nor the names of
  21:C:/StellarisWare/driverlib\gpio.c **** //   its contributors may be used to endorse or promote products derived
  22:C:/StellarisWare/driverlib\gpio.c **** //   from this software without specific prior written permission.
  23:C:/StellarisWare/driverlib\gpio.c **** // 
  24:C:/StellarisWare/driverlib\gpio.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  25:C:/StellarisWare/driverlib\gpio.c **** // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  26:C:/StellarisWare/driverlib\gpio.c **** // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  27:C:/StellarisWare/driverlib\gpio.c **** // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  28:C:/StellarisWare/driverlib\gpio.c **** // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  29:C:/StellarisWare/driverlib\gpio.c **** // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  30:C:/StellarisWare/driverlib\gpio.c **** // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  31:C:/StellarisWare/driverlib\gpio.c **** // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  32:C:/StellarisWare/driverlib\gpio.c **** // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  33:C:/StellarisWare/driverlib\gpio.c **** // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:C:/StellarisWare/driverlib\gpio.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/StellarisWare/driverlib\gpio.c **** // 
  36:C:/StellarisWare/driverlib\gpio.c **** // This is part of revision 9107 of the Stellaris Peripheral Driver Library.
  37:C:/StellarisWare/driverlib\gpio.c **** //
  38:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
  39:C:/StellarisWare/driverlib\gpio.c **** 
  40:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
  41:C:/StellarisWare/driverlib\gpio.c **** //
  42:C:/StellarisWare/driverlib\gpio.c **** //! \addtogroup gpio_api
  43:C:/StellarisWare/driverlib\gpio.c **** //! @{
  44:C:/StellarisWare/driverlib\gpio.c **** //
  45:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
  46:C:/StellarisWare/driverlib\gpio.c **** 
  47:C:/StellarisWare/driverlib\gpio.c **** #include "inc/hw_gpio.h"
  48:C:/StellarisWare/driverlib\gpio.c **** #include "inc/hw_ints.h"
  49:C:/StellarisWare/driverlib\gpio.c **** #include "inc/hw_memmap.h"
  50:C:/StellarisWare/driverlib\gpio.c **** #include "inc/hw_sysctl.h"
  51:C:/StellarisWare/driverlib\gpio.c **** #include "inc/hw_types.h"
  52:C:/StellarisWare/driverlib\gpio.c **** #include "driverlib/debug.h"
  53:C:/StellarisWare/driverlib\gpio.c **** #include "driverlib/gpio.h"
  54:C:/StellarisWare/driverlib\gpio.c **** #include "driverlib/interrupt.h"
  55:C:/StellarisWare/driverlib\gpio.c **** 
  56:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
  57:C:/StellarisWare/driverlib\gpio.c **** //
  58:C:/StellarisWare/driverlib\gpio.c **** // The base addresses of all the GPIO modules.  Both the APB and AHB apertures
  59:C:/StellarisWare/driverlib\gpio.c **** // are provided.
  60:C:/StellarisWare/driverlib\gpio.c **** //
  61:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
  62:C:/StellarisWare/driverlib\gpio.c **** static const unsigned long g_pulGPIOBaseAddrs[] =
  63:C:/StellarisWare/driverlib\gpio.c **** {
  64:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTA_BASE, GPIO_PORTA_AHB_BASE,
  65:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTB_BASE, GPIO_PORTB_AHB_BASE,
  66:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTC_BASE, GPIO_PORTC_AHB_BASE,
  67:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTD_BASE, GPIO_PORTD_AHB_BASE,
  68:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTE_BASE, GPIO_PORTE_AHB_BASE,
  69:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTF_BASE, GPIO_PORTF_AHB_BASE,
  70:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTG_BASE, GPIO_PORTG_AHB_BASE,
  71:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTH_BASE, GPIO_PORTH_AHB_BASE,
  72:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTJ_BASE, GPIO_PORTJ_AHB_BASE,
  73:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTK_BASE, GPIO_PORTK_BASE,
  74:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTL_BASE, GPIO_PORTL_BASE,
  75:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTM_BASE, GPIO_PORTM_BASE,
  76:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTN_BASE, GPIO_PORTN_BASE,
  77:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTP_BASE, GPIO_PORTP_BASE,
  78:C:/StellarisWare/driverlib\gpio.c ****     GPIO_PORTQ_BASE, GPIO_PORTQ_BASE,
  79:C:/StellarisWare/driverlib\gpio.c **** };
  80:C:/StellarisWare/driverlib\gpio.c **** 
  81:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
  82:C:/StellarisWare/driverlib\gpio.c **** //
  83:C:/StellarisWare/driverlib\gpio.c **** //! \internal
  84:C:/StellarisWare/driverlib\gpio.c **** //! Checks a GPIO base address.
  85:C:/StellarisWare/driverlib\gpio.c **** //!
  86:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
  87:C:/StellarisWare/driverlib\gpio.c **** //!
  88:C:/StellarisWare/driverlib\gpio.c **** //! This function determines if a GPIO port base address is valid.
  89:C:/StellarisWare/driverlib\gpio.c **** //!
  90:C:/StellarisWare/driverlib\gpio.c **** //! \return Returns \b true if the base address is valid and \b false
  91:C:/StellarisWare/driverlib\gpio.c **** //! otherwise.
  92:C:/StellarisWare/driverlib\gpio.c **** //
  93:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
  94:C:/StellarisWare/driverlib\gpio.c **** #ifdef DEBUG
  95:C:/StellarisWare/driverlib\gpio.c **** static tBoolean
  96:C:/StellarisWare/driverlib\gpio.c **** GPIOBaseValid(unsigned long ulPort)
  97:C:/StellarisWare/driverlib\gpio.c **** {
  98:C:/StellarisWare/driverlib\gpio.c ****     return((ulPort == GPIO_PORTA_BASE) || (ulPort == GPIO_PORTA_AHB_BASE) ||
  99:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTB_BASE) || (ulPort == GPIO_PORTB_AHB_BASE) ||
 100:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTC_BASE) || (ulPort == GPIO_PORTC_AHB_BASE) ||
 101:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTD_BASE) || (ulPort == GPIO_PORTD_AHB_BASE) ||
 102:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTE_BASE) || (ulPort == GPIO_PORTE_AHB_BASE) ||
 103:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTF_BASE) || (ulPort == GPIO_PORTF_AHB_BASE) ||
 104:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTG_BASE) || (ulPort == GPIO_PORTG_AHB_BASE) ||
 105:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTH_BASE) || (ulPort == GPIO_PORTH_AHB_BASE) ||
 106:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTJ_BASE) || (ulPort == GPIO_PORTJ_AHB_BASE) ||
 107:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTK_BASE) || (ulPort == GPIO_PORTL_BASE) ||
 108:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTM_BASE) || (ulPort == GPIO_PORTN_BASE) ||
 109:C:/StellarisWare/driverlib\gpio.c ****            (ulPort == GPIO_PORTP_BASE) || (ulPort == GPIO_PORTQ_BASE));
 110:C:/StellarisWare/driverlib\gpio.c **** }
 111:C:/StellarisWare/driverlib\gpio.c **** #endif
 112:C:/StellarisWare/driverlib\gpio.c **** 
 113:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 114:C:/StellarisWare/driverlib\gpio.c **** //
 115:C:/StellarisWare/driverlib\gpio.c **** //! \internal
 116:C:/StellarisWare/driverlib\gpio.c **** //! Gets the GPIO interrupt number.
 117:C:/StellarisWare/driverlib\gpio.c **** //!
 118:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 119:C:/StellarisWare/driverlib\gpio.c **** //!
 120:C:/StellarisWare/driverlib\gpio.c **** //! Given a GPIO base address, this function returns the corresponding
 121:C:/StellarisWare/driverlib\gpio.c **** //! interrupt number.
 122:C:/StellarisWare/driverlib\gpio.c **** //!
 123:C:/StellarisWare/driverlib\gpio.c **** //! \return Returns a GPIO interrupt number, or -1 if \e ulPort is invalid.
 124:C:/StellarisWare/driverlib\gpio.c **** //
 125:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 126:C:/StellarisWare/driverlib\gpio.c **** static long
 127:C:/StellarisWare/driverlib\gpio.c **** GPIOGetIntNumber(unsigned long ulPort)
 128:C:/StellarisWare/driverlib\gpio.c **** {
  61              		.loc 1 128 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 16
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66 0000 80B4     		push	{r7}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 85B0     		sub	sp, sp, #20
  71              	.LCFI1:
  72              		.cfi_def_cfa_offset 24
  73 0004 00AF     		add	r7, sp, #0
  74              	.LCFI2:
  75              		.cfi_def_cfa_register 7
  76 0006 7860     		str	r0, [r7, #4]
 129:C:/StellarisWare/driverlib\gpio.c ****     long lInt;
 130:C:/StellarisWare/driverlib\gpio.c **** 
 131:C:/StellarisWare/driverlib\gpio.c ****     //
 132:C:/StellarisWare/driverlib\gpio.c ****     // Determine the GPIO interrupt number for the given module.
 133:C:/StellarisWare/driverlib\gpio.c ****     //
 134:C:/StellarisWare/driverlib\gpio.c ****     switch(ulPort)
  77              		.loc 1 134 0
  78 0008 7B68     		ldr	r3, [r7, #4]
  79 000a 4FF42042 		mov	r2, #40960
  80 000e C4F20502 		movt	r2, 16389
  81 0012 9342     		cmp	r3, r2
  82 0014 00F0CA80 		beq	.L5
  83 0018 4FF42042 		mov	r2, #40960
  84 001c C4F20502 		movt	r2, 16389
  85 0020 9342     		cmp	r3, r2
  86 0022 5DD8     		bhi	.L18
  87 0024 4FF4A042 		mov	r2, #20480
  88 0028 C4F20202 		movt	r2, 16386
  89 002c 9342     		cmp	r3, r2
  90 002e 00F0C980 		beq	.L8
  91 0032 4FF4A042 		mov	r2, #20480
  92 0036 C4F20202 		movt	r2, 16386
  93 003a 9342     		cmp	r3, r2
  94 003c 27D8     		bhi	.L19
  95 003e 4FF4C042 		mov	r2, #24576
  96 0042 C4F20002 		movt	r2, 16384
  97 0046 9342     		cmp	r3, r2
  98 0048 00F0B080 		beq	.L5
  99 004c 4FF4C042 		mov	r2, #24576
 100 0050 C4F20002 		movt	r2, 16384
 101 0054 9342     		cmp	r3, r2
 102 0056 0BD8     		bhi	.L20
 103 0058 B3F1402F 		cmp	r3, #1073758208
 104 005c 00F09E80 		beq	.L3
 105 0060 4FF4A042 		mov	r2, #20480
 106 0064 C4F20002 		movt	r2, 16384
 107 0068 9342     		cmp	r3, r2
 108 006a 00F09B80 		beq	.L4
 109 006e D1E0     		b	.L2
 110              	.L20:
 111 0070 4FF4E042 		mov	r2, #28672
 112 0074 C4F20002 		movt	r2, 16384
 113 0078 9342     		cmp	r3, r2
 114 007a 00F09B80 		beq	.L6
 115 007e 4FF48042 		mov	r2, #16384
 116 0082 C4F20202 		movt	r2, 16386
 117 0086 9342     		cmp	r3, r2
 118 0088 00F09880 		beq	.L7
 119 008c C2E0     		b	.L2
 120              	.L19:
 121 008e 4FF45042 		mov	r2, #53248
 122 0092 C4F20302 		movt	r2, 16387
 123 0096 9342     		cmp	r3, r2
 124 0098 00F0A080 		beq	.L11
 125 009c 4FF45042 		mov	r2, #53248
 126 00a0 C4F20302 		movt	r2, 16387
 127 00a4 9342     		cmp	r3, r2
 128 00a6 0ED8     		bhi	.L21
 129 00a8 4FF4C042 		mov	r2, #24576
 130 00ac C4F20202 		movt	r2, 16386
 131 00b0 9342     		cmp	r3, r2
 132 00b2 00F08B80 		beq	.L9
 133 00b6 4FF4E042 		mov	r2, #28672
 134 00ba C4F20202 		movt	r2, 16386
 135 00be 9342     		cmp	r3, r2
 136 00c0 00F08880 		beq	.L10
 137 00c4 A6E0     		b	.L2
 138              	.L21:
 139 00c6 4FF40042 		mov	r2, #32768
 140 00ca C4F20502 		movt	r2, 16389
 141 00ce 9342     		cmp	r3, r2
 142 00d0 64D0     		beq	.L3
 143 00d2 4FF41042 		mov	r2, #36864
 144 00d6 C4F20502 		movt	r2, 16389
 145 00da 9342     		cmp	r3, r2
 146 00dc 62D0     		beq	.L4
 147 00de 99E0     		b	.L2
 148              	.L18:
 149 00e0 4FF00002 		mov	r2, #0
 150 00e4 C4F20602 		movt	r2, 16390
 151 00e8 9342     		cmp	r3, r2
 152 00ea 77D0     		beq	.L11
 153 00ec 4FF00002 		mov	r2, #0
 154 00f0 C4F20602 		movt	r2, 16390
 155 00f4 9342     		cmp	r3, r2
 156 00f6 25D8     		bhi	.L22
 157 00f8 4FF45042 		mov	r2, #53248
 158 00fc C4F20502 		movt	r2, 16389
 159 0100 9342     		cmp	r3, r2
 160 0102 5FD0     		beq	.L8
 161 0104 4FF45042 		mov	r2, #53248
 162 0108 C4F20502 		movt	r2, 16389
 163 010c 9342     		cmp	r3, r2
 164 010e 0CD8     		bhi	.L23
 165 0110 4FF43042 		mov	r2, #45056
 166 0114 C4F20502 		movt	r2, 16389
 167 0118 9342     		cmp	r3, r2
 168 011a 4BD0     		beq	.L6
 169 011c 4FF44042 		mov	r2, #49152
 170 0120 C4F20502 		movt	r2, 16389
 171 0124 9342     		cmp	r3, r2
 172 0126 49D0     		beq	.L7
 173 0128 74E0     		b	.L2
 174              	.L23:
 175 012a 4FF46042 		mov	r2, #57344
 176 012e C4F20502 		movt	r2, 16389
 177 0132 9342     		cmp	r3, r2
 178 0134 4AD0     		beq	.L9
 179 0136 4FF47042 		mov	r2, #61440
 180 013a C4F20502 		movt	r2, 16389
 181 013e 9342     		cmp	r3, r2
 182 0140 48D0     		beq	.L10
 183 0142 67E0     		b	.L2
 184              	.L22:
 185 0144 4FF44052 		mov	r2, #12288
 186 0148 C4F20602 		movt	r2, 16390
 187 014c 9342     		cmp	r3, r2
 188 014e 51D0     		beq	.L14
 189 0150 4FF44052 		mov	r2, #12288
 190 0154 C4F20602 		movt	r2, 16390
 191 0158 9342     		cmp	r3, r2
 192 015a 0CD8     		bhi	.L24
 193 015c 4FF48052 		mov	r2, #4096
 194 0160 C4F20602 		movt	r2, 16390
 195 0164 9342     		cmp	r3, r2
 196 0166 3DD0     		beq	.L12
 197 0168 4FF40052 		mov	r2, #8192
 198 016c C4F20602 		movt	r2, 16390
 199 0170 9342     		cmp	r3, r2
 200 0172 3BD0     		beq	.L13
 201 0174 4EE0     		b	.L2
 202              	.L24:
 203 0176 4FF4A042 		mov	r2, #20480
 204 017a C4F20602 		movt	r2, 16390
 205 017e 9342     		cmp	r3, r2
 206 0180 40D0     		beq	.L16
 207 0182 4FF4C042 		mov	r2, #24576
 208 0186 C4F20602 		movt	r2, 16390
 209 018a 9342     		cmp	r3, r2
 210 018c 3ED0     		beq	.L17
 211 018e 4FF48042 		mov	r2, #16384
 212 0192 C4F20602 		movt	r2, 16390
 213 0196 9342     		cmp	r3, r2
 214 0198 30D0     		beq	.L15
 215 019a 3BE0     		b	.L2
 216              	.L3:
 135:C:/StellarisWare/driverlib\gpio.c ****     {
 136:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTA_BASE:
 137:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTA_AHB_BASE:
 138:C:/StellarisWare/driverlib\gpio.c ****         {
 139:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOA;
 217              		.loc 1 139 0
 218 019c 4FF01003 		mov	r3, #16
 219 01a0 FB60     		str	r3, [r7, #12]
 140:C:/StellarisWare/driverlib\gpio.c ****             break;
 220              		.loc 1 140 0
 221 01a2 3AE0     		b	.L25
 222              	.L4:
 141:C:/StellarisWare/driverlib\gpio.c ****         }
 142:C:/StellarisWare/driverlib\gpio.c **** 
 143:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTB_BASE:
 144:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTB_AHB_BASE:
 145:C:/StellarisWare/driverlib\gpio.c ****         {
 146:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOB;
 223              		.loc 1 146 0
 224 01a4 4FF01103 		mov	r3, #17
 225 01a8 FB60     		str	r3, [r7, #12]
 147:C:/StellarisWare/driverlib\gpio.c ****             break;
 226              		.loc 1 147 0
 227 01aa 36E0     		b	.L25
 228              	.L5:
 148:C:/StellarisWare/driverlib\gpio.c ****         }
 149:C:/StellarisWare/driverlib\gpio.c **** 
 150:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTC_BASE:
 151:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTC_AHB_BASE:
 152:C:/StellarisWare/driverlib\gpio.c ****         {
 153:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOC;
 229              		.loc 1 153 0
 230 01ac 4FF01203 		mov	r3, #18
 231 01b0 FB60     		str	r3, [r7, #12]
 154:C:/StellarisWare/driverlib\gpio.c ****             break;
 232              		.loc 1 154 0
 233 01b2 32E0     		b	.L25
 234              	.L6:
 155:C:/StellarisWare/driverlib\gpio.c ****         }
 156:C:/StellarisWare/driverlib\gpio.c **** 
 157:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTD_BASE:
 158:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTD_AHB_BASE:
 159:C:/StellarisWare/driverlib\gpio.c ****         {
 160:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOD;
 235              		.loc 1 160 0
 236 01b4 4FF01303 		mov	r3, #19
 237 01b8 FB60     		str	r3, [r7, #12]
 161:C:/StellarisWare/driverlib\gpio.c ****             break;
 238              		.loc 1 161 0
 239 01ba 2EE0     		b	.L25
 240              	.L7:
 162:C:/StellarisWare/driverlib\gpio.c ****         }
 163:C:/StellarisWare/driverlib\gpio.c **** 
 164:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTE_BASE:
 165:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTE_AHB_BASE:
 166:C:/StellarisWare/driverlib\gpio.c ****         {
 167:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOE;
 241              		.loc 1 167 0
 242 01bc 4FF01403 		mov	r3, #20
 243 01c0 FB60     		str	r3, [r7, #12]
 168:C:/StellarisWare/driverlib\gpio.c ****             break;
 244              		.loc 1 168 0
 245 01c2 2AE0     		b	.L25
 246              	.L8:
 169:C:/StellarisWare/driverlib\gpio.c ****         }
 170:C:/StellarisWare/driverlib\gpio.c **** 
 171:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTF_BASE:
 172:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTF_AHB_BASE:
 173:C:/StellarisWare/driverlib\gpio.c ****         {
 174:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOF;
 247              		.loc 1 174 0
 248 01c4 4FF02E03 		mov	r3, #46
 249 01c8 FB60     		str	r3, [r7, #12]
 175:C:/StellarisWare/driverlib\gpio.c ****             break;
 250              		.loc 1 175 0
 251 01ca 26E0     		b	.L25
 252              	.L9:
 176:C:/StellarisWare/driverlib\gpio.c ****         }
 177:C:/StellarisWare/driverlib\gpio.c **** 
 178:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTG_BASE:
 179:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTG_AHB_BASE:
 180:C:/StellarisWare/driverlib\gpio.c ****         {
 181:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOG;
 253              		.loc 1 181 0
 254 01cc 4FF02F03 		mov	r3, #47
 255 01d0 FB60     		str	r3, [r7, #12]
 182:C:/StellarisWare/driverlib\gpio.c ****             break;
 256              		.loc 1 182 0
 257 01d2 22E0     		b	.L25
 258              	.L10:
 183:C:/StellarisWare/driverlib\gpio.c ****         }
 184:C:/StellarisWare/driverlib\gpio.c **** 
 185:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTH_BASE:
 186:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTH_AHB_BASE:
 187:C:/StellarisWare/driverlib\gpio.c ****         {
 188:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOH;
 259              		.loc 1 188 0
 260 01d4 4FF03003 		mov	r3, #48
 261 01d8 FB60     		str	r3, [r7, #12]
 189:C:/StellarisWare/driverlib\gpio.c ****             break;
 262              		.loc 1 189 0
 263 01da 1EE0     		b	.L25
 264              	.L11:
 190:C:/StellarisWare/driverlib\gpio.c ****         }
 191:C:/StellarisWare/driverlib\gpio.c **** 
 192:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTJ_BASE:
 193:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTJ_AHB_BASE:
 194:C:/StellarisWare/driverlib\gpio.c ****         {
 195:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOJ;
 265              		.loc 1 195 0
 266 01dc 4FF04603 		mov	r3, #70
 267 01e0 FB60     		str	r3, [r7, #12]
 196:C:/StellarisWare/driverlib\gpio.c ****             break;
 268              		.loc 1 196 0
 269 01e2 1AE0     		b	.L25
 270              	.L12:
 197:C:/StellarisWare/driverlib\gpio.c ****         }
 198:C:/StellarisWare/driverlib\gpio.c **** 
 199:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTK_BASE:
 200:C:/StellarisWare/driverlib\gpio.c ****         {
 201:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOK;
 271              		.loc 1 201 0
 272 01e4 4FF04703 		mov	r3, #71
 273 01e8 FB60     		str	r3, [r7, #12]
 202:C:/StellarisWare/driverlib\gpio.c ****             break;
 274              		.loc 1 202 0
 275 01ea 16E0     		b	.L25
 276              	.L13:
 203:C:/StellarisWare/driverlib\gpio.c ****         }
 204:C:/StellarisWare/driverlib\gpio.c **** 
 205:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTL_BASE:
 206:C:/StellarisWare/driverlib\gpio.c ****         {
 207:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOL;
 277              		.loc 1 207 0
 278 01ec 4FF04803 		mov	r3, #72
 279 01f0 FB60     		str	r3, [r7, #12]
 208:C:/StellarisWare/driverlib\gpio.c ****             break;
 280              		.loc 1 208 0
 281 01f2 12E0     		b	.L25
 282              	.L14:
 209:C:/StellarisWare/driverlib\gpio.c ****         }
 210:C:/StellarisWare/driverlib\gpio.c **** 
 211:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTM_BASE:
 212:C:/StellarisWare/driverlib\gpio.c ****         {
 213:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOM;
 283              		.loc 1 213 0
 284 01f4 4FF07F03 		mov	r3, #127
 285 01f8 FB60     		str	r3, [r7, #12]
 214:C:/StellarisWare/driverlib\gpio.c ****             break;
 286              		.loc 1 214 0
 287 01fa 0EE0     		b	.L25
 288              	.L15:
 215:C:/StellarisWare/driverlib\gpio.c ****         }
 216:C:/StellarisWare/driverlib\gpio.c **** 
 217:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTN_BASE:
 218:C:/StellarisWare/driverlib\gpio.c ****         {
 219:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPION;
 289              		.loc 1 219 0
 290 01fc 4FF08003 		mov	r3, #128
 291 0200 FB60     		str	r3, [r7, #12]
 220:C:/StellarisWare/driverlib\gpio.c ****             break;
 292              		.loc 1 220 0
 293 0202 0AE0     		b	.L25
 294              	.L16:
 221:C:/StellarisWare/driverlib\gpio.c ****         }
 222:C:/StellarisWare/driverlib\gpio.c **** 
 223:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTP_BASE:
 224:C:/StellarisWare/driverlib\gpio.c ****         {
 225:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOP0;
 295              		.loc 1 225 0
 296 0204 4FF08403 		mov	r3, #132
 297 0208 FB60     		str	r3, [r7, #12]
 226:C:/StellarisWare/driverlib\gpio.c ****             break;
 298              		.loc 1 226 0
 299 020a 06E0     		b	.L25
 300              	.L17:
 227:C:/StellarisWare/driverlib\gpio.c ****         }
 228:C:/StellarisWare/driverlib\gpio.c **** 
 229:C:/StellarisWare/driverlib\gpio.c ****         case GPIO_PORTQ_BASE:
 230:C:/StellarisWare/driverlib\gpio.c ****         {
 231:C:/StellarisWare/driverlib\gpio.c ****             lInt = INT_GPIOQ0;
 301              		.loc 1 231 0
 302 020c 4FF08C03 		mov	r3, #140
 303 0210 FB60     		str	r3, [r7, #12]
 232:C:/StellarisWare/driverlib\gpio.c ****             break;
 304              		.loc 1 232 0
 305 0212 02E0     		b	.L25
 306              	.L2:
 233:C:/StellarisWare/driverlib\gpio.c ****         }
 234:C:/StellarisWare/driverlib\gpio.c **** 
 235:C:/StellarisWare/driverlib\gpio.c ****         default:
 236:C:/StellarisWare/driverlib\gpio.c ****         {
 237:C:/StellarisWare/driverlib\gpio.c ****             return(-1);
 307              		.loc 1 237 0
 308 0214 4FF0FF33 		mov	r3, #-1
 309 0218 00E0     		b	.L26
 310              	.L25:
 238:C:/StellarisWare/driverlib\gpio.c ****         }
 239:C:/StellarisWare/driverlib\gpio.c ****     }
 240:C:/StellarisWare/driverlib\gpio.c **** 
 241:C:/StellarisWare/driverlib\gpio.c ****     //
 242:C:/StellarisWare/driverlib\gpio.c ****     // Return GPIO interrupt number.
 243:C:/StellarisWare/driverlib\gpio.c ****     //
 244:C:/StellarisWare/driverlib\gpio.c ****     return(lInt);
 311              		.loc 1 244 0
 312 021a FB68     		ldr	r3, [r7, #12]
 313              	.L26:
 245:C:/StellarisWare/driverlib\gpio.c **** }
 314              		.loc 1 245 0
 315 021c 1846     		mov	r0, r3
 316 021e 07F11407 		add	r7, r7, #20
 317 0222 BD46     		mov	sp, r7
 318 0224 80BC     		pop	{r7}
 319 0226 7047     		bx	lr
 320              		.cfi_endproc
 321              	.LFE0:
 323              		.section	.text.GPIODirModeSet,"ax",%progbits
 324              		.align	2
 325              		.global	GPIODirModeSet
 326              		.thumb
 327              		.thumb_func
 329              	GPIODirModeSet:
 330              	.LFB1:
 246:C:/StellarisWare/driverlib\gpio.c **** 
 247:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 248:C:/StellarisWare/driverlib\gpio.c **** //
 249:C:/StellarisWare/driverlib\gpio.c **** //! Sets the direction and mode of the specified pin(s).
 250:C:/StellarisWare/driverlib\gpio.c **** //!
 251:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port
 252:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 253:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPinIO is the pin direction and/or mode.
 254:C:/StellarisWare/driverlib\gpio.c **** //!
 255:C:/StellarisWare/driverlib\gpio.c **** //! This function configures the specified pin(s) on the selected GPIO port
 256:C:/StellarisWare/driverlib\gpio.c **** //! as either input or output under software control, or it configures the
 257:C:/StellarisWare/driverlib\gpio.c **** //! pin to be under hardware control.
 258:C:/StellarisWare/driverlib\gpio.c **** //!
 259:C:/StellarisWare/driverlib\gpio.c **** //! The parameter \e ulPinIO is an enumerated data type that can be one of
 260:C:/StellarisWare/driverlib\gpio.c **** //! the following values:
 261:C:/StellarisWare/driverlib\gpio.c **** //!
 262:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_DIR_MODE_IN
 263:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_DIR_MODE_OUT
 264:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_DIR_MODE_HW
 265:C:/StellarisWare/driverlib\gpio.c **** //!
 266:C:/StellarisWare/driverlib\gpio.c **** //! where \b GPIO_DIR_MODE_IN specifies that the pin is programmed as a
 267:C:/StellarisWare/driverlib\gpio.c **** //! software controlled input, \b GPIO_DIR_MODE_OUT specifies that the pin is
 268:C:/StellarisWare/driverlib\gpio.c **** //! programmed as a software controlled output, and \b GPIO_DIR_MODE_HW
 269:C:/StellarisWare/driverlib\gpio.c **** //! specifies that the pin is placed under hardware control.
 270:C:/StellarisWare/driverlib\gpio.c **** //!
 271:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 272:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 273:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 274:C:/StellarisWare/driverlib\gpio.c **** //!
 275:C:/StellarisWare/driverlib\gpio.c **** //! \note GPIOPadConfigSet() must also be used to configure the corresponding
 276:C:/StellarisWare/driverlib\gpio.c **** //! pad(s) in order for them to propagate the signal to/from the GPIO.
 277:C:/StellarisWare/driverlib\gpio.c **** //!
 278:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 279:C:/StellarisWare/driverlib\gpio.c **** //
 280:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 281:C:/StellarisWare/driverlib\gpio.c **** void
 282:C:/StellarisWare/driverlib\gpio.c **** GPIODirModeSet(unsigned long ulPort, unsigned char ucPins,
 283:C:/StellarisWare/driverlib\gpio.c ****                unsigned long ulPinIO)
 284:C:/StellarisWare/driverlib\gpio.c **** {
 331              		.loc 1 284 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 16
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 336 0000 80B4     		push	{r7}
 337              	.LCFI3:
 338              		.cfi_def_cfa_offset 4
 339              		.cfi_offset 7, -4
 340 0002 85B0     		sub	sp, sp, #20
 341              	.LCFI4:
 342              		.cfi_def_cfa_offset 24
 343 0004 00AF     		add	r7, sp, #0
 344              	.LCFI5:
 345              		.cfi_def_cfa_register 7
 346 0006 F860     		str	r0, [r7, #12]
 347 0008 0B46     		mov	r3, r1
 348 000a 7A60     		str	r2, [r7, #4]
 349 000c FB72     		strb	r3, [r7, #11]
 285:C:/StellarisWare/driverlib\gpio.c ****     //
 286:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 287:C:/StellarisWare/driverlib\gpio.c ****     //
 288:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 289:C:/StellarisWare/driverlib\gpio.c ****     ASSERT((ulPinIO == GPIO_DIR_MODE_IN) || (ulPinIO == GPIO_DIR_MODE_OUT) ||
 290:C:/StellarisWare/driverlib\gpio.c ****            (ulPinIO == GPIO_DIR_MODE_HW));
 291:C:/StellarisWare/driverlib\gpio.c **** 
 292:C:/StellarisWare/driverlib\gpio.c ****     //
 293:C:/StellarisWare/driverlib\gpio.c ****     // Set the pin direction and mode.
 294:C:/StellarisWare/driverlib\gpio.c ****     //
 295:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DIR) = ((ulPinIO & 1) ?
 350              		.loc 1 295 0
 351 000e FB68     		ldr	r3, [r7, #12]
 352 0010 03F58063 		add	r3, r3, #1024
 353 0014 1A46     		mov	r2, r3
 354 0016 7B68     		ldr	r3, [r7, #4]
 355 0018 03F00103 		and	r3, r3, #1
 356 001c DBB2     		uxtb	r3, r3
 296:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_DIR) | ucPins) :
 357              		.loc 1 296 0
 358 001e 002B     		cmp	r3, #0
 359 0020 06D0     		beq	.L28
 360              		.loc 1 296 0 is_stmt 0 discriminator 1
 361 0022 FB68     		ldr	r3, [r7, #12]
 362 0024 03F58063 		add	r3, r3, #1024
 363 0028 1968     		ldr	r1, [r3, #0]
 364 002a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 365 002c 0B43     		orrs	r3, r3, r1
 366 002e 07E0     		b	.L29
 367              	.L28:
 297:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_DIR) & ~(ucPins)));
 368              		.loc 1 297 0 is_stmt 1 discriminator 2
 369 0030 FB68     		ldr	r3, [r7, #12]
 370 0032 03F58063 		add	r3, r3, #1024
 371 0036 1968     		ldr	r1, [r3, #0]
 372 0038 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 373 003a 6FEA0303 		mvn	r3, r3
 296:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_DIR) | ucPins) :
 374              		.loc 1 296 0 discriminator 2
 375 003e 0B40     		ands	r3, r3, r1
 376              	.L29:
 295:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DIR) = ((ulPinIO & 1) ?
 377              		.loc 1 295 0
 378 0040 1360     		str	r3, [r2, #0]
 298:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_AFSEL) = ((ulPinIO & 2) ?
 379              		.loc 1 298 0
 380 0042 FB68     		ldr	r3, [r7, #12]
 381 0044 03F58463 		add	r3, r3, #1056
 382 0048 1A46     		mov	r2, r3
 383 004a 7B68     		ldr	r3, [r7, #4]
 384 004c 03F00203 		and	r3, r3, #2
 299:C:/StellarisWare/driverlib\gpio.c ****                                     (HWREG(ulPort + GPIO_O_AFSEL) | ucPins) :
 385              		.loc 1 299 0
 386 0050 002B     		cmp	r3, #0
 387 0052 06D0     		beq	.L30
 388              		.loc 1 299 0 is_stmt 0 discriminator 1
 389 0054 FB68     		ldr	r3, [r7, #12]
 390 0056 03F58463 		add	r3, r3, #1056
 391 005a 1968     		ldr	r1, [r3, #0]
 392 005c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 393 005e 0B43     		orrs	r3, r3, r1
 394 0060 07E0     		b	.L31
 395              	.L30:
 300:C:/StellarisWare/driverlib\gpio.c ****                                     (HWREG(ulPort + GPIO_O_AFSEL) &
 396              		.loc 1 300 0 is_stmt 1 discriminator 2
 397 0062 FB68     		ldr	r3, [r7, #12]
 398 0064 03F58463 		add	r3, r3, #1056
 399 0068 1968     		ldr	r1, [r3, #0]
 301:C:/StellarisWare/driverlib\gpio.c ****                                      ~(ucPins)));
 400              		.loc 1 301 0 discriminator 2
 401 006a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 402 006c 6FEA0303 		mvn	r3, r3
 299:C:/StellarisWare/driverlib\gpio.c ****                                     (HWREG(ulPort + GPIO_O_AFSEL) | ucPins) :
 403              		.loc 1 299 0 discriminator 2
 404 0070 0B40     		ands	r3, r3, r1
 405              	.L31:
 298:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_AFSEL) = ((ulPinIO & 2) ?
 406              		.loc 1 298 0
 407 0072 1360     		str	r3, [r2, #0]
 302:C:/StellarisWare/driverlib\gpio.c **** }
 408              		.loc 1 302 0
 409 0074 07F11407 		add	r7, r7, #20
 410 0078 BD46     		mov	sp, r7
 411 007a 80BC     		pop	{r7}
 412 007c 7047     		bx	lr
 413              		.cfi_endproc
 414              	.LFE1:
 416 007e 00BF     		.section	.text.GPIODirModeGet,"ax",%progbits
 417              		.align	2
 418              		.global	GPIODirModeGet
 419              		.thumb
 420              		.thumb_func
 422              	GPIODirModeGet:
 423              	.LFB2:
 303:C:/StellarisWare/driverlib\gpio.c **** 
 304:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 305:C:/StellarisWare/driverlib\gpio.c **** //
 306:C:/StellarisWare/driverlib\gpio.c **** //! Gets the direction and mode of a pin.
 307:C:/StellarisWare/driverlib\gpio.c **** //!
 308:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 309:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPin is the pin number.
 310:C:/StellarisWare/driverlib\gpio.c **** //!
 311:C:/StellarisWare/driverlib\gpio.c **** //! This function gets the direction and control mode for a specified pin on
 312:C:/StellarisWare/driverlib\gpio.c **** //! the selected GPIO port.  The pin can be configured as either an input or
 313:C:/StellarisWare/driverlib\gpio.c **** //! output under software control, or it can be under hardware control.  The
 314:C:/StellarisWare/driverlib\gpio.c **** //! type of control and direction are returned as an enumerated data type.
 315:C:/StellarisWare/driverlib\gpio.c **** //!
 316:C:/StellarisWare/driverlib\gpio.c **** //! \return Returns one of the enumerated data types described for
 317:C:/StellarisWare/driverlib\gpio.c **** //! GPIODirModeSet().
 318:C:/StellarisWare/driverlib\gpio.c **** //
 319:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 320:C:/StellarisWare/driverlib\gpio.c **** unsigned long
 321:C:/StellarisWare/driverlib\gpio.c **** GPIODirModeGet(unsigned long ulPort, unsigned char ucPin)
 322:C:/StellarisWare/driverlib\gpio.c **** {
 424              		.loc 1 322 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 16
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0000 80B4     		push	{r7}
 430              	.LCFI6:
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 85B0     		sub	sp, sp, #20
 434              	.LCFI7:
 435              		.cfi_def_cfa_offset 24
 436 0004 00AF     		add	r7, sp, #0
 437              	.LCFI8:
 438              		.cfi_def_cfa_register 7
 439 0006 7860     		str	r0, [r7, #4]
 440 0008 0B46     		mov	r3, r1
 441 000a FB70     		strb	r3, [r7, #3]
 323:C:/StellarisWare/driverlib\gpio.c ****     unsigned long ulDir, ulAFSEL;
 324:C:/StellarisWare/driverlib\gpio.c **** 
 325:C:/StellarisWare/driverlib\gpio.c ****     //
 326:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 327:C:/StellarisWare/driverlib\gpio.c ****     //
 328:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 329:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(ucPin < 8);
 330:C:/StellarisWare/driverlib\gpio.c **** 
 331:C:/StellarisWare/driverlib\gpio.c ****     //
 332:C:/StellarisWare/driverlib\gpio.c ****     // Convert from a pin number to a bit position.
 333:C:/StellarisWare/driverlib\gpio.c ****     //
 334:C:/StellarisWare/driverlib\gpio.c ****     ucPin = 1 << ucPin;
 442              		.loc 1 334 0
 443 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 444 000e 4FF00102 		mov	r2, #1
 445 0012 02FA03F3 		lsl	r3, r2, r3
 446 0016 FB70     		strb	r3, [r7, #3]
 335:C:/StellarisWare/driverlib\gpio.c **** 
 336:C:/StellarisWare/driverlib\gpio.c ****     //
 337:C:/StellarisWare/driverlib\gpio.c ****     // Return the pin direction and mode.
 338:C:/StellarisWare/driverlib\gpio.c ****     //
 339:C:/StellarisWare/driverlib\gpio.c ****     ulDir = HWREG(ulPort + GPIO_O_DIR);
 447              		.loc 1 339 0
 448 0018 7B68     		ldr	r3, [r7, #4]
 449 001a 03F58063 		add	r3, r3, #1024
 450 001e 1B68     		ldr	r3, [r3, #0]
 451 0020 FB60     		str	r3, [r7, #12]
 340:C:/StellarisWare/driverlib\gpio.c ****     ulAFSEL = HWREG(ulPort + GPIO_O_AFSEL);
 452              		.loc 1 340 0
 453 0022 7B68     		ldr	r3, [r7, #4]
 454 0024 03F58463 		add	r3, r3, #1056
 455 0028 1B68     		ldr	r3, [r3, #0]
 456 002a BB60     		str	r3, [r7, #8]
 341:C:/StellarisWare/driverlib\gpio.c ****     return(((ulDir & ucPin) ? 1 : 0) | ((ulAFSEL & ucPin) ? 2 : 0));
 457              		.loc 1 341 0
 458 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 459 002e FB68     		ldr	r3, [r7, #12]
 460 0030 1340     		ands	r3, r3, r2
 461 0032 002B     		cmp	r3, #0
 462 0034 0CBF     		ite	eq
 463 0036 0022     		moveq	r2, #0
 464 0038 0122     		movne	r2, #1
 465 003a F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 466 003c BB68     		ldr	r3, [r7, #8]
 467 003e 0B40     		ands	r3, r3, r1
 468 0040 002B     		cmp	r3, #0
 469 0042 02D0     		beq	.L33
 470              		.loc 1 341 0 is_stmt 0 discriminator 1
 471 0044 4FF00203 		mov	r3, #2
 472 0048 01E0     		b	.L34
 473              	.L33:
 474              		.loc 1 341 0 discriminator 2
 475 004a 4FF00003 		mov	r3, #0
 476              	.L34:
 477              		.loc 1 341 0 discriminator 3
 478 004e 1343     		orrs	r3, r3, r2
 342:C:/StellarisWare/driverlib\gpio.c **** }
 479              		.loc 1 342 0 is_stmt 1 discriminator 3
 480 0050 1846     		mov	r0, r3
 481 0052 07F11407 		add	r7, r7, #20
 482 0056 BD46     		mov	sp, r7
 483 0058 80BC     		pop	{r7}
 484 005a 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE2:
 488              		.section	.text.GPIOIntTypeSet,"ax",%progbits
 489              		.align	2
 490              		.global	GPIOIntTypeSet
 491              		.thumb
 492              		.thumb_func
 494              	GPIOIntTypeSet:
 495              	.LFB3:
 343:C:/StellarisWare/driverlib\gpio.c **** 
 344:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 345:C:/StellarisWare/driverlib\gpio.c **** //
 346:C:/StellarisWare/driverlib\gpio.c **** //! Sets the interrupt type for the specified pin(s).
 347:C:/StellarisWare/driverlib\gpio.c **** //!
 348:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 349:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 350:C:/StellarisWare/driverlib\gpio.c **** //! \param ulIntType specifies the type of interrupt trigger mechanism.
 351:C:/StellarisWare/driverlib\gpio.c **** //!
 352:C:/StellarisWare/driverlib\gpio.c **** //! This function sets up the various interrupt trigger mechanisms for the
 353:C:/StellarisWare/driverlib\gpio.c **** //! specified pin(s) on the selected GPIO port.
 354:C:/StellarisWare/driverlib\gpio.c **** //!
 355:C:/StellarisWare/driverlib\gpio.c **** //! The parameter \e ulIntType is an enumerated data type that can be one of
 356:C:/StellarisWare/driverlib\gpio.c **** //! the following values:
 357:C:/StellarisWare/driverlib\gpio.c **** //!
 358:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_FALLING_EDGE
 359:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_RISING_EDGE
 360:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_BOTH_EDGES
 361:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_LOW_LEVEL
 362:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_HIGH_LEVEL
 363:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_DISCRETE_INT
 364:C:/StellarisWare/driverlib\gpio.c **** //!
 365:C:/StellarisWare/driverlib\gpio.c **** //! where the different values describe the interrupt detection mechanism
 366:C:/StellarisWare/driverlib\gpio.c **** //! (edge or level) and the particular triggering event (falling, rising,
 367:C:/StellarisWare/driverlib\gpio.c **** //! or both edges for edge detect, low or high for level detect).
 368:C:/StellarisWare/driverlib\gpio.c **** //!
 369:C:/StellarisWare/driverlib\gpio.c **** //! Some devices also support discrete interrupts for each pin on a GPIO port,
 370:C:/StellarisWare/driverlib\gpio.c **** //! giving each pin a separate interrupt vector.  To use this feature, the
 371:C:/StellarisWare/driverlib\gpio.c **** //! \b GPIO_DISCRETE_INT can be included to enable an interrupt per pin.  The
 372:C:/StellarisWare/driverlib\gpio.c **** //! \b GPIO_DISCRETE_INT is not available on all devices or all GPIO ports,
 373:C:/StellarisWare/driverlib\gpio.c **** //! consult the data sheet to ensure that the device and the GPIO port supports
 374:C:/StellarisWare/driverlib\gpio.c **** //! discrete interrupts.
 375:C:/StellarisWare/driverlib\gpio.c **** //!
 376:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 377:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 378:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 379:C:/StellarisWare/driverlib\gpio.c **** //!
 380:C:/StellarisWare/driverlib\gpio.c **** //! \note In order to avoid any spurious interrupts, the user must
 381:C:/StellarisWare/driverlib\gpio.c **** //! ensure that the GPIO inputs remain stable for the duration of
 382:C:/StellarisWare/driverlib\gpio.c **** //! this function.
 383:C:/StellarisWare/driverlib\gpio.c **** //!
 384:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 385:C:/StellarisWare/driverlib\gpio.c **** //
 386:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 387:C:/StellarisWare/driverlib\gpio.c **** void
 388:C:/StellarisWare/driverlib\gpio.c **** GPIOIntTypeSet(unsigned long ulPort, unsigned char ucPins,
 389:C:/StellarisWare/driverlib\gpio.c ****                unsigned long ulIntType)
 390:C:/StellarisWare/driverlib\gpio.c **** {
 496              		.loc 1 390 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 16
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501 0000 80B4     		push	{r7}
 502              	.LCFI9:
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 7, -4
 505 0002 85B0     		sub	sp, sp, #20
 506              	.LCFI10:
 507              		.cfi_def_cfa_offset 24
 508 0004 00AF     		add	r7, sp, #0
 509              	.LCFI11:
 510              		.cfi_def_cfa_register 7
 511 0006 F860     		str	r0, [r7, #12]
 512 0008 0B46     		mov	r3, r1
 513 000a 7A60     		str	r2, [r7, #4]
 514 000c FB72     		strb	r3, [r7, #11]
 391:C:/StellarisWare/driverlib\gpio.c ****     //
 392:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 393:C:/StellarisWare/driverlib\gpio.c ****     //
 394:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 395:C:/StellarisWare/driverlib\gpio.c ****     ASSERT((ulIntType == GPIO_FALLING_EDGE) ||
 396:C:/StellarisWare/driverlib\gpio.c ****            (ulIntType == GPIO_RISING_EDGE) || (ulIntType == GPIO_BOTH_EDGES) ||
 397:C:/StellarisWare/driverlib\gpio.c ****            (ulIntType == GPIO_LOW_LEVEL) || (ulIntType == GPIO_HIGH_LEVEL));
 398:C:/StellarisWare/driverlib\gpio.c **** 
 399:C:/StellarisWare/driverlib\gpio.c ****     //
 400:C:/StellarisWare/driverlib\gpio.c ****     // Set the pin interrupt type.
 401:C:/StellarisWare/driverlib\gpio.c ****     //
 402:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_IBE) = ((ulIntType & 1) ?
 515              		.loc 1 402 0
 516 000e FB68     		ldr	r3, [r7, #12]
 517 0010 03F58163 		add	r3, r3, #1032
 518 0014 1A46     		mov	r2, r3
 519 0016 7B68     		ldr	r3, [r7, #4]
 520 0018 03F00103 		and	r3, r3, #1
 521 001c DBB2     		uxtb	r3, r3
 403:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_IBE) | ucPins) :
 522              		.loc 1 403 0
 523 001e 002B     		cmp	r3, #0
 524 0020 06D0     		beq	.L36
 525              		.loc 1 403 0 is_stmt 0 discriminator 1
 526 0022 FB68     		ldr	r3, [r7, #12]
 527 0024 03F58163 		add	r3, r3, #1032
 528 0028 1968     		ldr	r1, [r3, #0]
 529 002a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 530 002c 0B43     		orrs	r3, r3, r1
 531 002e 07E0     		b	.L37
 532              	.L36:
 404:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_IBE) & ~(ucPins)));
 533              		.loc 1 404 0 is_stmt 1 discriminator 2
 534 0030 FB68     		ldr	r3, [r7, #12]
 535 0032 03F58163 		add	r3, r3, #1032
 536 0036 1968     		ldr	r1, [r3, #0]
 537 0038 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 538 003a 6FEA0303 		mvn	r3, r3
 403:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_IBE) | ucPins) :
 539              		.loc 1 403 0 discriminator 2
 540 003e 0B40     		ands	r3, r3, r1
 541              	.L37:
 402:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_IBE) = ((ulIntType & 1) ?
 542              		.loc 1 402 0
 543 0040 1360     		str	r3, [r2, #0]
 405:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_IS) = ((ulIntType & 2) ?
 544              		.loc 1 405 0
 545 0042 FB68     		ldr	r3, [r7, #12]
 546 0044 03F58063 		add	r3, r3, #1024
 547 0048 03F10403 		add	r3, r3, #4
 548 004c 1A46     		mov	r2, r3
 549 004e 7B68     		ldr	r3, [r7, #4]
 550 0050 03F00203 		and	r3, r3, #2
 406:C:/StellarisWare/driverlib\gpio.c ****                                  (HWREG(ulPort + GPIO_O_IS) | ucPins) :
 551              		.loc 1 406 0
 552 0054 002B     		cmp	r3, #0
 553 0056 08D0     		beq	.L38
 554              		.loc 1 406 0 is_stmt 0 discriminator 1
 555 0058 FB68     		ldr	r3, [r7, #12]
 556 005a 03F58063 		add	r3, r3, #1024
 557 005e 03F10403 		add	r3, r3, #4
 558 0062 1968     		ldr	r1, [r3, #0]
 559 0064 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 560 0066 0B43     		orrs	r3, r3, r1
 561 0068 09E0     		b	.L39
 562              	.L38:
 407:C:/StellarisWare/driverlib\gpio.c ****                                  (HWREG(ulPort + GPIO_O_IS) & ~(ucPins)));
 563              		.loc 1 407 0 is_stmt 1 discriminator 2
 564 006a FB68     		ldr	r3, [r7, #12]
 565 006c 03F58063 		add	r3, r3, #1024
 566 0070 03F10403 		add	r3, r3, #4
 567 0074 1968     		ldr	r1, [r3, #0]
 568 0076 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 569 0078 6FEA0303 		mvn	r3, r3
 406:C:/StellarisWare/driverlib\gpio.c ****                                  (HWREG(ulPort + GPIO_O_IS) | ucPins) :
 570              		.loc 1 406 0 discriminator 2
 571 007c 0B40     		ands	r3, r3, r1
 572              	.L39:
 405:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_IS) = ((ulIntType & 2) ?
 573              		.loc 1 405 0
 574 007e 1360     		str	r3, [r2, #0]
 408:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_IEV) = ((ulIntType & 4) ?
 575              		.loc 1 408 0
 576 0080 FB68     		ldr	r3, [r7, #12]
 577 0082 03F58063 		add	r3, r3, #1024
 578 0086 03F10C03 		add	r3, r3, #12
 579 008a 1A46     		mov	r2, r3
 580 008c 7B68     		ldr	r3, [r7, #4]
 581 008e 03F00403 		and	r3, r3, #4
 409:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_IEV) | ucPins) :
 582              		.loc 1 409 0
 583 0092 002B     		cmp	r3, #0
 584 0094 08D0     		beq	.L40
 585              		.loc 1 409 0 is_stmt 0 discriminator 1
 586 0096 FB68     		ldr	r3, [r7, #12]
 587 0098 03F58063 		add	r3, r3, #1024
 588 009c 03F10C03 		add	r3, r3, #12
 589 00a0 1968     		ldr	r1, [r3, #0]
 590 00a2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 591 00a4 0B43     		orrs	r3, r3, r1
 592 00a6 09E0     		b	.L41
 593              	.L40:
 410:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_IEV) & ~(ucPins)));
 594              		.loc 1 410 0 is_stmt 1 discriminator 2
 595 00a8 FB68     		ldr	r3, [r7, #12]
 596 00aa 03F58063 		add	r3, r3, #1024
 597 00ae 03F10C03 		add	r3, r3, #12
 598 00b2 1968     		ldr	r1, [r3, #0]
 599 00b4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 600 00b6 6FEA0303 		mvn	r3, r3
 409:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_IEV) | ucPins) :
 601              		.loc 1 409 0 discriminator 2
 602 00ba 0B40     		ands	r3, r3, r1
 603              	.L41:
 408:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_IEV) = ((ulIntType & 4) ?
 604              		.loc 1 408 0
 605 00bc 1360     		str	r3, [r2, #0]
 411:C:/StellarisWare/driverlib\gpio.c **** }
 606              		.loc 1 411 0
 607 00be 07F11407 		add	r7, r7, #20
 608 00c2 BD46     		mov	sp, r7
 609 00c4 80BC     		pop	{r7}
 610 00c6 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE3:
 614              		.section	.text.GPIOIntTypeGet,"ax",%progbits
 615              		.align	2
 616              		.global	GPIOIntTypeGet
 617              		.thumb
 618              		.thumb_func
 620              	GPIOIntTypeGet:
 621              	.LFB4:
 412:C:/StellarisWare/driverlib\gpio.c **** 
 413:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 414:C:/StellarisWare/driverlib\gpio.c **** //
 415:C:/StellarisWare/driverlib\gpio.c **** //! Gets the interrupt type for a pin.
 416:C:/StellarisWare/driverlib\gpio.c **** //!
 417:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 418:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPin is the pin number.
 419:C:/StellarisWare/driverlib\gpio.c **** //!
 420:C:/StellarisWare/driverlib\gpio.c **** //! This function gets the interrupt type for a specified pin on the selected
 421:C:/StellarisWare/driverlib\gpio.c **** //! GPIO port.  The pin can be configured as a falling-edge, rising-edge, or
 422:C:/StellarisWare/driverlib\gpio.c **** //! both-edges detected interrupt, or it can be configured as a low-level or
 423:C:/StellarisWare/driverlib\gpio.c **** //! high-level detected interrupt.  The type of interrupt detection mechanism
 424:C:/StellarisWare/driverlib\gpio.c **** //! is returned as an enumerated data type.
 425:C:/StellarisWare/driverlib\gpio.c **** //!
 426:C:/StellarisWare/driverlib\gpio.c **** //! \return Returns one of the enumerated data types described for
 427:C:/StellarisWare/driverlib\gpio.c **** //! GPIOIntTypeSet().
 428:C:/StellarisWare/driverlib\gpio.c **** //
 429:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 430:C:/StellarisWare/driverlib\gpio.c **** unsigned long
 431:C:/StellarisWare/driverlib\gpio.c **** GPIOIntTypeGet(unsigned long ulPort, unsigned char ucPin)
 432:C:/StellarisWare/driverlib\gpio.c **** {
 622              		.loc 1 432 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 24
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627 0000 80B4     		push	{r7}
 628              	.LCFI12:
 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 7, -4
 631 0002 87B0     		sub	sp, sp, #28
 632              	.LCFI13:
 633              		.cfi_def_cfa_offset 32
 634 0004 00AF     		add	r7, sp, #0
 635              	.LCFI14:
 636              		.cfi_def_cfa_register 7
 637 0006 7860     		str	r0, [r7, #4]
 638 0008 0B46     		mov	r3, r1
 639 000a FB70     		strb	r3, [r7, #3]
 433:C:/StellarisWare/driverlib\gpio.c ****     unsigned long ulIBE, ulIS, ulIEV;
 434:C:/StellarisWare/driverlib\gpio.c **** 
 435:C:/StellarisWare/driverlib\gpio.c ****     //
 436:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 437:C:/StellarisWare/driverlib\gpio.c ****     //
 438:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 439:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(ucPin < 8);
 440:C:/StellarisWare/driverlib\gpio.c **** 
 441:C:/StellarisWare/driverlib\gpio.c ****     //
 442:C:/StellarisWare/driverlib\gpio.c ****     // Convert from a pin number to a bit position.
 443:C:/StellarisWare/driverlib\gpio.c ****     //
 444:C:/StellarisWare/driverlib\gpio.c ****     ucPin = 1 << ucPin;
 640              		.loc 1 444 0
 641 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 642 000e 4FF00102 		mov	r2, #1
 643 0012 02FA03F3 		lsl	r3, r2, r3
 644 0016 FB70     		strb	r3, [r7, #3]
 445:C:/StellarisWare/driverlib\gpio.c **** 
 446:C:/StellarisWare/driverlib\gpio.c ****     //
 447:C:/StellarisWare/driverlib\gpio.c ****     // Return the pin interrupt type.
 448:C:/StellarisWare/driverlib\gpio.c ****     //
 449:C:/StellarisWare/driverlib\gpio.c ****     ulIBE = HWREG(ulPort + GPIO_O_IBE);
 645              		.loc 1 449 0
 646 0018 7B68     		ldr	r3, [r7, #4]
 647 001a 03F58163 		add	r3, r3, #1032
 648 001e 1B68     		ldr	r3, [r3, #0]
 649 0020 7B61     		str	r3, [r7, #20]
 450:C:/StellarisWare/driverlib\gpio.c ****     ulIS = HWREG(ulPort + GPIO_O_IS);
 650              		.loc 1 450 0
 651 0022 7B68     		ldr	r3, [r7, #4]
 652 0024 03F58063 		add	r3, r3, #1024
 653 0028 03F10403 		add	r3, r3, #4
 654 002c 1B68     		ldr	r3, [r3, #0]
 655 002e 3B61     		str	r3, [r7, #16]
 451:C:/StellarisWare/driverlib\gpio.c ****     ulIEV = HWREG(ulPort + GPIO_O_IEV);
 656              		.loc 1 451 0
 657 0030 7B68     		ldr	r3, [r7, #4]
 658 0032 03F58063 		add	r3, r3, #1024
 659 0036 03F10C03 		add	r3, r3, #12
 660 003a 1B68     		ldr	r3, [r3, #0]
 661 003c FB60     		str	r3, [r7, #12]
 452:C:/StellarisWare/driverlib\gpio.c ****     return(((ulIBE & ucPin) ? 1 : 0) | ((ulIS & ucPin) ? 2 : 0) |
 662              		.loc 1 452 0
 663 003e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 664 0040 7B69     		ldr	r3, [r7, #20]
 665 0042 1340     		ands	r3, r3, r2
 666 0044 002B     		cmp	r3, #0
 667 0046 0CBF     		ite	eq
 668 0048 0022     		moveq	r2, #0
 669 004a 0122     		movne	r2, #1
 670 004c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 671 004e 3B69     		ldr	r3, [r7, #16]
 672 0050 0B40     		ands	r3, r3, r1
 673 0052 002B     		cmp	r3, #0
 674 0054 02D0     		beq	.L43
 675              		.loc 1 452 0 is_stmt 0 discriminator 1
 676 0056 4FF00203 		mov	r3, #2
 677 005a 01E0     		b	.L44
 678              	.L43:
 679              		.loc 1 452 0 discriminator 2
 680 005c 4FF00003 		mov	r3, #0
 681              	.L44:
 682              		.loc 1 452 0 discriminator 3
 683 0060 1A43     		orrs	r2, r2, r3
 453:C:/StellarisWare/driverlib\gpio.c ****            ((ulIEV & ucPin) ? 4 : 0));
 684              		.loc 1 453 0 is_stmt 1 discriminator 3
 685 0062 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 686 0064 FB68     		ldr	r3, [r7, #12]
 687 0066 0B40     		ands	r3, r3, r1
 688 0068 002B     		cmp	r3, #0
 689 006a 02D0     		beq	.L45
 690              		.loc 1 453 0 is_stmt 0 discriminator 1
 691 006c 4FF00403 		mov	r3, #4
 692 0070 01E0     		b	.L46
 693              	.L45:
 694              		.loc 1 453 0 discriminator 2
 695 0072 4FF00003 		mov	r3, #0
 696              	.L46:
 452:C:/StellarisWare/driverlib\gpio.c ****     return(((ulIBE & ucPin) ? 1 : 0) | ((ulIS & ucPin) ? 2 : 0) |
 697              		.loc 1 452 0 is_stmt 1
 698 0076 1343     		orrs	r3, r3, r2
 454:C:/StellarisWare/driverlib\gpio.c **** }
 699              		.loc 1 454 0
 700 0078 1846     		mov	r0, r3
 701 007a 07F11C07 		add	r7, r7, #28
 702 007e BD46     		mov	sp, r7
 703 0080 80BC     		pop	{r7}
 704 0082 7047     		bx	lr
 705              		.cfi_endproc
 706              	.LFE4:
 708              		.section	.text.GPIOPadConfigSet,"ax",%progbits
 709              		.align	2
 710              		.global	GPIOPadConfigSet
 711              		.thumb
 712              		.thumb_func
 714              	GPIOPadConfigSet:
 715              	.LFB5:
 455:C:/StellarisWare/driverlib\gpio.c **** 
 456:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 457:C:/StellarisWare/driverlib\gpio.c **** //
 458:C:/StellarisWare/driverlib\gpio.c **** //! Sets the pad configuration for the specified pin(s).
 459:C:/StellarisWare/driverlib\gpio.c **** //!
 460:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 461:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 462:C:/StellarisWare/driverlib\gpio.c **** //! \param ulStrength specifies the output drive strength.
 463:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPinType specifies the pin type.
 464:C:/StellarisWare/driverlib\gpio.c **** //!
 465:C:/StellarisWare/driverlib\gpio.c **** //! This function sets the drive strength and type for the specified pin(s)
 466:C:/StellarisWare/driverlib\gpio.c **** //! on the selected GPIO port.  For pin(s) configured as input ports, the
 467:C:/StellarisWare/driverlib\gpio.c **** //! pad is configured as requested, but the only real effect on the input
 468:C:/StellarisWare/driverlib\gpio.c **** //! is the configuration of the pull-up or pull-down termination.
 469:C:/StellarisWare/driverlib\gpio.c **** //!
 470:C:/StellarisWare/driverlib\gpio.c **** //! The parameter \e ulStrength can be one of the following values:
 471:C:/StellarisWare/driverlib\gpio.c **** //!
 472:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_STRENGTH_2MA
 473:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_STRENGTH_4MA
 474:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_STRENGTH_8MA
 475:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_STRENGTH_8MA_SC
 476:C:/StellarisWare/driverlib\gpio.c **** //!
 477:C:/StellarisWare/driverlib\gpio.c **** //! where \b GPIO_STRENGTH_xMA specifies either 2, 4, or 8 mA output drive
 478:C:/StellarisWare/driverlib\gpio.c **** //! strength, and \b GPIO_OUT_STRENGTH_8MA_SC specifies 8 mA output drive with
 479:C:/StellarisWare/driverlib\gpio.c **** //! slew control.
 480:C:/StellarisWare/driverlib\gpio.c **** //!
 481:C:/StellarisWare/driverlib\gpio.c **** //! Some Stellaris devices also support output drive strengths of 6, 10, and 12
 482:C:/StellarisWare/driverlib\gpio.c **** //! mA.
 483:C:/StellarisWare/driverlib\gpio.c **** //!
 484:C:/StellarisWare/driverlib\gpio.c **** //! The parameter \e ulPinType can be one of the following values:
 485:C:/StellarisWare/driverlib\gpio.c **** //!
 486:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_PIN_TYPE_STD
 487:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_PIN_TYPE_STD_WPU
 488:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_PIN_TYPE_STD_WPD
 489:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_PIN_TYPE_OD
 490:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_PIN_TYPE_OD_WPU
 491:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_PIN_TYPE_OD_WPD
 492:C:/StellarisWare/driverlib\gpio.c **** //! - \b GPIO_PIN_TYPE_ANALOG
 493:C:/StellarisWare/driverlib\gpio.c **** //!
 494:C:/StellarisWare/driverlib\gpio.c **** //! where \b GPIO_PIN_TYPE_STD* specifies a push-pull pin, \b GPIO_PIN_TYPE_OD*
 495:C:/StellarisWare/driverlib\gpio.c **** //! specifies an open-drain pin, \b *_WPU specifies a weak pull-up, \b *_WPD
 496:C:/StellarisWare/driverlib\gpio.c **** //! specifies a weak pull-down, and \b GPIO_PIN_TYPE_ANALOG specifies an analog
 497:C:/StellarisWare/driverlib\gpio.c **** //! input.
 498:C:/StellarisWare/driverlib\gpio.c **** //!
 499:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 500:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 501:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 502:C:/StellarisWare/driverlib\gpio.c **** //!
 503:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 504:C:/StellarisWare/driverlib\gpio.c **** //
 505:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 506:C:/StellarisWare/driverlib\gpio.c **** void
 507:C:/StellarisWare/driverlib\gpio.c **** GPIOPadConfigSet(unsigned long ulPort, unsigned char ucPins,
 508:C:/StellarisWare/driverlib\gpio.c ****                  unsigned long ulStrength, unsigned long ulPinType)
 509:C:/StellarisWare/driverlib\gpio.c **** {
 716              		.loc 1 509 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 16
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              	.LCFI15:
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 85B0     		sub	sp, sp, #20
 726              	.LCFI16:
 727              		.cfi_def_cfa_offset 24
 728 0004 00AF     		add	r7, sp, #0
 729              	.LCFI17:
 730              		.cfi_def_cfa_register 7
 731 0006 F860     		str	r0, [r7, #12]
 732 0008 7A60     		str	r2, [r7, #4]
 733 000a 3B60     		str	r3, [r7, #0]
 734 000c 0B46     		mov	r3, r1
 735 000e FB72     		strb	r3, [r7, #11]
 510:C:/StellarisWare/driverlib\gpio.c ****     //
 511:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 512:C:/StellarisWare/driverlib\gpio.c ****     //
 513:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 514:C:/StellarisWare/driverlib\gpio.c ****     ASSERT((ulStrength == GPIO_STRENGTH_2MA) ||
 515:C:/StellarisWare/driverlib\gpio.c ****            (ulStrength == GPIO_STRENGTH_4MA) ||
 516:C:/StellarisWare/driverlib\gpio.c ****            (ulStrength == GPIO_STRENGTH_8MA) ||
 517:C:/StellarisWare/driverlib\gpio.c ****            (ulStrength == GPIO_STRENGTH_8MA_SC));
 518:C:/StellarisWare/driverlib\gpio.c ****     ASSERT((ulPinType == GPIO_PIN_TYPE_STD) ||
 519:C:/StellarisWare/driverlib\gpio.c ****            (ulPinType == GPIO_PIN_TYPE_STD_WPU) ||
 520:C:/StellarisWare/driverlib\gpio.c ****            (ulPinType == GPIO_PIN_TYPE_STD_WPD) ||
 521:C:/StellarisWare/driverlib\gpio.c ****            (ulPinType == GPIO_PIN_TYPE_OD) ||
 522:C:/StellarisWare/driverlib\gpio.c ****            (ulPinType == GPIO_PIN_TYPE_OD_WPU) ||
 523:C:/StellarisWare/driverlib\gpio.c ****            (ulPinType == GPIO_PIN_TYPE_OD_WPD) ||
 524:C:/StellarisWare/driverlib\gpio.c ****            (ulPinType == GPIO_PIN_TYPE_ANALOG));
 525:C:/StellarisWare/driverlib\gpio.c **** 
 526:C:/StellarisWare/driverlib\gpio.c ****     //
 527:C:/StellarisWare/driverlib\gpio.c ****     // Set the output drive strength.
 528:C:/StellarisWare/driverlib\gpio.c ****     //
 529:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DR2R) = ((ulStrength & 1) ?
 736              		.loc 1 529 0
 737 0010 FB68     		ldr	r3, [r7, #12]
 738 0012 03F5A063 		add	r3, r3, #1280
 739 0016 1A46     		mov	r2, r3
 740 0018 7B68     		ldr	r3, [r7, #4]
 741 001a 03F00103 		and	r3, r3, #1
 742 001e DBB2     		uxtb	r3, r3
 530:C:/StellarisWare/driverlib\gpio.c ****                                    (HWREG(ulPort + GPIO_O_DR2R) | ucPins) :
 743              		.loc 1 530 0
 744 0020 002B     		cmp	r3, #0
 745 0022 06D0     		beq	.L48
 746              		.loc 1 530 0 is_stmt 0 discriminator 1
 747 0024 FB68     		ldr	r3, [r7, #12]
 748 0026 03F5A063 		add	r3, r3, #1280
 749 002a 1968     		ldr	r1, [r3, #0]
 750 002c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 751 002e 0B43     		orrs	r3, r3, r1
 752 0030 07E0     		b	.L49
 753              	.L48:
 531:C:/StellarisWare/driverlib\gpio.c ****                                    (HWREG(ulPort + GPIO_O_DR2R) & ~(ucPins)));
 754              		.loc 1 531 0 is_stmt 1 discriminator 2
 755 0032 FB68     		ldr	r3, [r7, #12]
 756 0034 03F5A063 		add	r3, r3, #1280
 757 0038 1968     		ldr	r1, [r3, #0]
 758 003a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 759 003c 6FEA0303 		mvn	r3, r3
 530:C:/StellarisWare/driverlib\gpio.c ****                                    (HWREG(ulPort + GPIO_O_DR2R) | ucPins) :
 760              		.loc 1 530 0 discriminator 2
 761 0040 0B40     		ands	r3, r3, r1
 762              	.L49:
 529:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DR2R) = ((ulStrength & 1) ?
 763              		.loc 1 529 0
 764 0042 1360     		str	r3, [r2, #0]
 532:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DR4R) = ((ulStrength & 2) ?
 765              		.loc 1 532 0
 766 0044 FB68     		ldr	r3, [r7, #12]
 767 0046 03F5A063 		add	r3, r3, #1280
 768 004a 03F10403 		add	r3, r3, #4
 769 004e 1A46     		mov	r2, r3
 770 0050 7B68     		ldr	r3, [r7, #4]
 771 0052 03F00203 		and	r3, r3, #2
 533:C:/StellarisWare/driverlib\gpio.c ****                                    (HWREG(ulPort + GPIO_O_DR4R) | ucPins) :
 772              		.loc 1 533 0
 773 0056 002B     		cmp	r3, #0
 774 0058 08D0     		beq	.L50
 775              		.loc 1 533 0 is_stmt 0 discriminator 1
 776 005a FB68     		ldr	r3, [r7, #12]
 777 005c 03F5A063 		add	r3, r3, #1280
 778 0060 03F10403 		add	r3, r3, #4
 779 0064 1968     		ldr	r1, [r3, #0]
 780 0066 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 781 0068 0B43     		orrs	r3, r3, r1
 782 006a 09E0     		b	.L51
 783              	.L50:
 534:C:/StellarisWare/driverlib\gpio.c ****                                    (HWREG(ulPort + GPIO_O_DR4R) & ~(ucPins)));
 784              		.loc 1 534 0 is_stmt 1 discriminator 2
 785 006c FB68     		ldr	r3, [r7, #12]
 786 006e 03F5A063 		add	r3, r3, #1280
 787 0072 03F10403 		add	r3, r3, #4
 788 0076 1968     		ldr	r1, [r3, #0]
 789 0078 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 790 007a 6FEA0303 		mvn	r3, r3
 533:C:/StellarisWare/driverlib\gpio.c ****                                    (HWREG(ulPort + GPIO_O_DR4R) | ucPins) :
 791              		.loc 1 533 0 discriminator 2
 792 007e 0B40     		ands	r3, r3, r1
 793              	.L51:
 532:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DR4R) = ((ulStrength & 2) ?
 794              		.loc 1 532 0
 795 0080 1360     		str	r3, [r2, #0]
 535:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DR8R) = ((ulStrength & 4) ?
 796              		.loc 1 535 0
 797 0082 FB68     		ldr	r3, [r7, #12]
 798 0084 03F5A163 		add	r3, r3, #1288
 799 0088 1A46     		mov	r2, r3
 800 008a 7B68     		ldr	r3, [r7, #4]
 801 008c 03F00403 		and	r3, r3, #4
 536:C:/StellarisWare/driverlib\gpio.c ****                                    (HWREG(ulPort + GPIO_O_DR8R) | ucPins) :
 802              		.loc 1 536 0
 803 0090 002B     		cmp	r3, #0
 804 0092 06D0     		beq	.L52
 805              		.loc 1 536 0 is_stmt 0 discriminator 1
 806 0094 FB68     		ldr	r3, [r7, #12]
 807 0096 03F5A163 		add	r3, r3, #1288
 808 009a 1968     		ldr	r1, [r3, #0]
 809 009c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 810 009e 0B43     		orrs	r3, r3, r1
 811 00a0 07E0     		b	.L53
 812              	.L52:
 537:C:/StellarisWare/driverlib\gpio.c ****                                    (HWREG(ulPort + GPIO_O_DR8R) & ~(ucPins)));
 813              		.loc 1 537 0 is_stmt 1 discriminator 2
 814 00a2 FB68     		ldr	r3, [r7, #12]
 815 00a4 03F5A163 		add	r3, r3, #1288
 816 00a8 1968     		ldr	r1, [r3, #0]
 817 00aa FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 818 00ac 6FEA0303 		mvn	r3, r3
 536:C:/StellarisWare/driverlib\gpio.c ****                                    (HWREG(ulPort + GPIO_O_DR8R) | ucPins) :
 819              		.loc 1 536 0 discriminator 2
 820 00b0 0B40     		ands	r3, r3, r1
 821              	.L53:
 535:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DR8R) = ((ulStrength & 4) ?
 822              		.loc 1 535 0
 823 00b2 1360     		str	r3, [r2, #0]
 538:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_SLR) = ((ulStrength & 8) ?
 824              		.loc 1 538 0
 825 00b4 FB68     		ldr	r3, [r7, #12]
 826 00b6 03F5A363 		add	r3, r3, #1304
 827 00ba 1A46     		mov	r2, r3
 828 00bc 7B68     		ldr	r3, [r7, #4]
 829 00be 03F00803 		and	r3, r3, #8
 539:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_SLR) | ucPins) :
 830              		.loc 1 539 0
 831 00c2 002B     		cmp	r3, #0
 832 00c4 06D0     		beq	.L54
 833              		.loc 1 539 0 is_stmt 0 discriminator 1
 834 00c6 FB68     		ldr	r3, [r7, #12]
 835 00c8 03F5A363 		add	r3, r3, #1304
 836 00cc 1968     		ldr	r1, [r3, #0]
 837 00ce FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 838 00d0 0B43     		orrs	r3, r3, r1
 839 00d2 07E0     		b	.L55
 840              	.L54:
 540:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_SLR) & ~(ucPins)));
 841              		.loc 1 540 0 is_stmt 1 discriminator 2
 842 00d4 FB68     		ldr	r3, [r7, #12]
 843 00d6 03F5A363 		add	r3, r3, #1304
 844 00da 1968     		ldr	r1, [r3, #0]
 845 00dc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 846 00de 6FEA0303 		mvn	r3, r3
 539:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_SLR) | ucPins) :
 847              		.loc 1 539 0 discriminator 2
 848 00e2 0B40     		ands	r3, r3, r1
 849              	.L55:
 538:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_SLR) = ((ulStrength & 8) ?
 850              		.loc 1 538 0
 851 00e4 1360     		str	r3, [r2, #0]
 541:C:/StellarisWare/driverlib\gpio.c **** 
 542:C:/StellarisWare/driverlib\gpio.c ****     //
 543:C:/StellarisWare/driverlib\gpio.c ****     // Set the pin type.
 544:C:/StellarisWare/driverlib\gpio.c ****     //
 545:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_ODR) = ((ulPinType & 1) ?
 852              		.loc 1 545 0
 853 00e6 FB68     		ldr	r3, [r7, #12]
 854 00e8 03F5A063 		add	r3, r3, #1280
 855 00ec 03F10C03 		add	r3, r3, #12
 856 00f0 1A46     		mov	r2, r3
 857 00f2 3B68     		ldr	r3, [r7, #0]
 858 00f4 03F00103 		and	r3, r3, #1
 859 00f8 DBB2     		uxtb	r3, r3
 546:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_ODR) | ucPins) :
 860              		.loc 1 546 0
 861 00fa 002B     		cmp	r3, #0
 862 00fc 08D0     		beq	.L56
 863              		.loc 1 546 0 is_stmt 0 discriminator 1
 864 00fe FB68     		ldr	r3, [r7, #12]
 865 0100 03F5A063 		add	r3, r3, #1280
 866 0104 03F10C03 		add	r3, r3, #12
 867 0108 1968     		ldr	r1, [r3, #0]
 868 010a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 869 010c 0B43     		orrs	r3, r3, r1
 870 010e 09E0     		b	.L57
 871              	.L56:
 547:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_ODR) & ~(ucPins)));
 872              		.loc 1 547 0 is_stmt 1 discriminator 2
 873 0110 FB68     		ldr	r3, [r7, #12]
 874 0112 03F5A063 		add	r3, r3, #1280
 875 0116 03F10C03 		add	r3, r3, #12
 876 011a 1968     		ldr	r1, [r3, #0]
 877 011c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 878 011e 6FEA0303 		mvn	r3, r3
 546:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_ODR) | ucPins) :
 879              		.loc 1 546 0 discriminator 2
 880 0122 0B40     		ands	r3, r3, r1
 881              	.L57:
 545:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_ODR) = ((ulPinType & 1) ?
 882              		.loc 1 545 0
 883 0124 1360     		str	r3, [r2, #0]
 548:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_PUR) = ((ulPinType & 2) ?
 884              		.loc 1 548 0
 885 0126 FB68     		ldr	r3, [r7, #12]
 886 0128 03F5A263 		add	r3, r3, #1296
 887 012c 1A46     		mov	r2, r3
 888 012e 3B68     		ldr	r3, [r7, #0]
 889 0130 03F00203 		and	r3, r3, #2
 549:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_PUR) | ucPins) :
 890              		.loc 1 549 0
 891 0134 002B     		cmp	r3, #0
 892 0136 06D0     		beq	.L58
 893              		.loc 1 549 0 is_stmt 0 discriminator 1
 894 0138 FB68     		ldr	r3, [r7, #12]
 895 013a 03F5A263 		add	r3, r3, #1296
 896 013e 1968     		ldr	r1, [r3, #0]
 897 0140 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 898 0142 0B43     		orrs	r3, r3, r1
 899 0144 07E0     		b	.L59
 900              	.L58:
 550:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_PUR) & ~(ucPins)));
 901              		.loc 1 550 0 is_stmt 1 discriminator 2
 902 0146 FB68     		ldr	r3, [r7, #12]
 903 0148 03F5A263 		add	r3, r3, #1296
 904 014c 1968     		ldr	r1, [r3, #0]
 905 014e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 906 0150 6FEA0303 		mvn	r3, r3
 549:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_PUR) | ucPins) :
 907              		.loc 1 549 0 discriminator 2
 908 0154 0B40     		ands	r3, r3, r1
 909              	.L59:
 548:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_PUR) = ((ulPinType & 2) ?
 910              		.loc 1 548 0
 911 0156 1360     		str	r3, [r2, #0]
 551:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_PDR) = ((ulPinType & 4) ?
 912              		.loc 1 551 0
 913 0158 FB68     		ldr	r3, [r7, #12]
 914 015a 03F5A263 		add	r3, r3, #1296
 915 015e 03F10403 		add	r3, r3, #4
 916 0162 1A46     		mov	r2, r3
 917 0164 3B68     		ldr	r3, [r7, #0]
 918 0166 03F00403 		and	r3, r3, #4
 552:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_PDR) | ucPins) :
 919              		.loc 1 552 0
 920 016a 002B     		cmp	r3, #0
 921 016c 08D0     		beq	.L60
 922              		.loc 1 552 0 is_stmt 0 discriminator 1
 923 016e FB68     		ldr	r3, [r7, #12]
 924 0170 03F5A263 		add	r3, r3, #1296
 925 0174 03F10403 		add	r3, r3, #4
 926 0178 1968     		ldr	r1, [r3, #0]
 927 017a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 928 017c 0B43     		orrs	r3, r3, r1
 929 017e 09E0     		b	.L61
 930              	.L60:
 553:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_PDR) & ~(ucPins)));
 931              		.loc 1 553 0 is_stmt 1 discriminator 2
 932 0180 FB68     		ldr	r3, [r7, #12]
 933 0182 03F5A263 		add	r3, r3, #1296
 934 0186 03F10403 		add	r3, r3, #4
 935 018a 1968     		ldr	r1, [r3, #0]
 936 018c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 937 018e 6FEA0303 		mvn	r3, r3
 552:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_PDR) | ucPins) :
 938              		.loc 1 552 0 discriminator 2
 939 0192 0B40     		ands	r3, r3, r1
 940              	.L61:
 551:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_PDR) = ((ulPinType & 4) ?
 941              		.loc 1 551 0
 942 0194 1360     		str	r3, [r2, #0]
 554:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DEN) = ((ulPinType & 8) ?
 943              		.loc 1 554 0
 944 0196 FB68     		ldr	r3, [r7, #12]
 945 0198 03F5A263 		add	r3, r3, #1296
 946 019c 03F10C03 		add	r3, r3, #12
 947 01a0 1A46     		mov	r2, r3
 948 01a2 3B68     		ldr	r3, [r7, #0]
 949 01a4 03F00803 		and	r3, r3, #8
 555:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_DEN) | ucPins) :
 950              		.loc 1 555 0
 951 01a8 002B     		cmp	r3, #0
 952 01aa 08D0     		beq	.L62
 953              		.loc 1 555 0 is_stmt 0 discriminator 1
 954 01ac FB68     		ldr	r3, [r7, #12]
 955 01ae 03F5A263 		add	r3, r3, #1296
 956 01b2 03F10C03 		add	r3, r3, #12
 957 01b6 1968     		ldr	r1, [r3, #0]
 958 01b8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 959 01ba 0B43     		orrs	r3, r3, r1
 960 01bc 09E0     		b	.L63
 961              	.L62:
 556:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_DEN) & ~(ucPins)));
 962              		.loc 1 556 0 is_stmt 1 discriminator 2
 963 01be FB68     		ldr	r3, [r7, #12]
 964 01c0 03F5A263 		add	r3, r3, #1296
 965 01c4 03F10C03 		add	r3, r3, #12
 966 01c8 1968     		ldr	r1, [r3, #0]
 967 01ca FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 968 01cc 6FEA0303 		mvn	r3, r3
 555:C:/StellarisWare/driverlib\gpio.c ****                                   (HWREG(ulPort + GPIO_O_DEN) | ucPins) :
 969              		.loc 1 555 0 discriminator 2
 970 01d0 0B40     		ands	r3, r3, r1
 971              	.L63:
 554:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DEN) = ((ulPinType & 8) ?
 972              		.loc 1 554 0
 973 01d2 1360     		str	r3, [r2, #0]
 557:C:/StellarisWare/driverlib\gpio.c **** 
 558:C:/StellarisWare/driverlib\gpio.c ****     //
 559:C:/StellarisWare/driverlib\gpio.c ****     // Set the analog mode select register.  This register only appears in
 560:C:/StellarisWare/driverlib\gpio.c ****     // DustDevil-class (and later) devices, but is a harmless write on
 561:C:/StellarisWare/driverlib\gpio.c ****     // Sandstorm- and Fury-class devices.
 562:C:/StellarisWare/driverlib\gpio.c ****     //
 563:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_AMSEL) =
 974              		.loc 1 563 0
 975 01d4 FB68     		ldr	r3, [r7, #12]
 976 01d6 03F5A563 		add	r3, r3, #1320
 977 01da 1A46     		mov	r2, r3
 564:C:/StellarisWare/driverlib\gpio.c ****         ((ulPinType == GPIO_PIN_TYPE_ANALOG) ?
 565:C:/StellarisWare/driverlib\gpio.c ****          (HWREG(ulPort + GPIO_O_AMSEL) | ucPins) :
 978              		.loc 1 565 0
 979 01dc 3B68     		ldr	r3, [r7, #0]
 980 01de 002B     		cmp	r3, #0
 981 01e0 06D1     		bne	.L64
 982              		.loc 1 565 0 is_stmt 0 discriminator 1
 983 01e2 FB68     		ldr	r3, [r7, #12]
 984 01e4 03F5A563 		add	r3, r3, #1320
 985 01e8 1968     		ldr	r1, [r3, #0]
 986 01ea FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 987 01ec 0B43     		orrs	r3, r3, r1
 988 01ee 07E0     		b	.L65
 989              	.L64:
 566:C:/StellarisWare/driverlib\gpio.c ****          (HWREG(ulPort + GPIO_O_AMSEL) & ~(ucPins)));
 990              		.loc 1 566 0 is_stmt 1 discriminator 2
 991 01f0 FB68     		ldr	r3, [r7, #12]
 992 01f2 03F5A563 		add	r3, r3, #1320
 993 01f6 1968     		ldr	r1, [r3, #0]
 994 01f8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 995 01fa 6FEA0303 		mvn	r3, r3
 565:C:/StellarisWare/driverlib\gpio.c ****          (HWREG(ulPort + GPIO_O_AMSEL) | ucPins) :
 996              		.loc 1 565 0 discriminator 2
 997 01fe 0B40     		ands	r3, r3, r1
 998              	.L65:
 563:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_AMSEL) =
 999              		.loc 1 563 0
 1000 0200 1360     		str	r3, [r2, #0]
 567:C:/StellarisWare/driverlib\gpio.c **** }
 1001              		.loc 1 567 0
 1002 0202 07F11407 		add	r7, r7, #20
 1003 0206 BD46     		mov	sp, r7
 1004 0208 80BC     		pop	{r7}
 1005 020a 7047     		bx	lr
 1006              		.cfi_endproc
 1007              	.LFE5:
 1009              		.section	.text.GPIOPadConfigGet,"ax",%progbits
 1010              		.align	2
 1011              		.global	GPIOPadConfigGet
 1012              		.thumb
 1013              		.thumb_func
 1015              	GPIOPadConfigGet:
 1016              	.LFB6:
 568:C:/StellarisWare/driverlib\gpio.c **** 
 569:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 570:C:/StellarisWare/driverlib\gpio.c **** //
 571:C:/StellarisWare/driverlib\gpio.c **** //! Gets the pad configuration for a pin.
 572:C:/StellarisWare/driverlib\gpio.c **** //!
 573:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 574:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPin is the pin number.
 575:C:/StellarisWare/driverlib\gpio.c **** //! \param pulStrength is a pointer to storage for the output drive strength.
 576:C:/StellarisWare/driverlib\gpio.c **** //! \param pulPinType is a pointer to storage for the output drive type.
 577:C:/StellarisWare/driverlib\gpio.c **** //!
 578:C:/StellarisWare/driverlib\gpio.c **** //! This function gets the pad configuration for a specified pin on the
 579:C:/StellarisWare/driverlib\gpio.c **** //! selected GPIO port.  The values returned in \e pulStrength and
 580:C:/StellarisWare/driverlib\gpio.c **** //! \e pulPinType correspond to the values used in GPIOPadConfigSet().  This
 581:C:/StellarisWare/driverlib\gpio.c **** //! function also works for pin(s) configured as input pin(s); however, the
 582:C:/StellarisWare/driverlib\gpio.c **** //! only meaningful data returned is whether the pin is terminated with a
 583:C:/StellarisWare/driverlib\gpio.c **** //! pull-up or down resistor.
 584:C:/StellarisWare/driverlib\gpio.c **** //!
 585:C:/StellarisWare/driverlib\gpio.c **** //! \return None
 586:C:/StellarisWare/driverlib\gpio.c **** //
 587:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 588:C:/StellarisWare/driverlib\gpio.c **** void
 589:C:/StellarisWare/driverlib\gpio.c **** GPIOPadConfigGet(unsigned long ulPort, unsigned char ucPin,
 590:C:/StellarisWare/driverlib\gpio.c ****                  unsigned long *pulStrength, unsigned long *pulPinType)
 591:C:/StellarisWare/driverlib\gpio.c **** {
 1017              		.loc 1 591 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 24
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 1022 0000 80B4     		push	{r7}
 1023              	.LCFI18:
 1024              		.cfi_def_cfa_offset 4
 1025              		.cfi_offset 7, -4
 1026 0002 87B0     		sub	sp, sp, #28
 1027              	.LCFI19:
 1028              		.cfi_def_cfa_offset 32
 1029 0004 00AF     		add	r7, sp, #0
 1030              	.LCFI20:
 1031              		.cfi_def_cfa_register 7
 1032 0006 F860     		str	r0, [r7, #12]
 1033 0008 7A60     		str	r2, [r7, #4]
 1034 000a 3B60     		str	r3, [r7, #0]
 1035 000c 0B46     		mov	r3, r1
 1036 000e FB72     		strb	r3, [r7, #11]
 592:C:/StellarisWare/driverlib\gpio.c ****     unsigned long ulPinType, ulStrength;
 593:C:/StellarisWare/driverlib\gpio.c **** 
 594:C:/StellarisWare/driverlib\gpio.c ****     //
 595:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 596:C:/StellarisWare/driverlib\gpio.c ****     //
 597:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 598:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(ucPin < 8);
 599:C:/StellarisWare/driverlib\gpio.c **** 
 600:C:/StellarisWare/driverlib\gpio.c ****     //
 601:C:/StellarisWare/driverlib\gpio.c ****     // Convert from a pin number to a bit position.
 602:C:/StellarisWare/driverlib\gpio.c ****     //
 603:C:/StellarisWare/driverlib\gpio.c ****     ucPin = (1 << ucPin);
 1037              		.loc 1 603 0
 1038 0010 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1039 0012 4FF00102 		mov	r2, #1
 1040 0016 02FA03F3 		lsl	r3, r2, r3
 1041 001a FB72     		strb	r3, [r7, #11]
 604:C:/StellarisWare/driverlib\gpio.c **** 
 605:C:/StellarisWare/driverlib\gpio.c ****     //
 606:C:/StellarisWare/driverlib\gpio.c ****     // Get the drive strength for this pin.
 607:C:/StellarisWare/driverlib\gpio.c ****     //
 608:C:/StellarisWare/driverlib\gpio.c ****     ulStrength = ((HWREG(ulPort + GPIO_O_DR2R) & ucPin) ? 1 : 0);
 1042              		.loc 1 608 0
 1043 001c FB68     		ldr	r3, [r7, #12]
 1044 001e 03F5A063 		add	r3, r3, #1280
 1045 0022 1A68     		ldr	r2, [r3, #0]
 1046 0024 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1047 0026 1340     		ands	r3, r3, r2
 1048 0028 002B     		cmp	r3, #0
 1049 002a 0CBF     		ite	eq
 1050 002c 0023     		moveq	r3, #0
 1051 002e 0123     		movne	r3, #1
 1052 0030 7B61     		str	r3, [r7, #20]
 609:C:/StellarisWare/driverlib\gpio.c ****     ulStrength |= ((HWREG(ulPort + GPIO_O_DR4R) & ucPin) ? 2 : 0);
 1053              		.loc 1 609 0
 1054 0032 FB68     		ldr	r3, [r7, #12]
 1055 0034 03F5A063 		add	r3, r3, #1280
 1056 0038 03F10403 		add	r3, r3, #4
 1057 003c 1A68     		ldr	r2, [r3, #0]
 1058 003e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1059 0040 1340     		ands	r3, r3, r2
 1060 0042 002B     		cmp	r3, #0
 1061 0044 02D0     		beq	.L67
 1062              		.loc 1 609 0 is_stmt 0 discriminator 1
 1063 0046 4FF00203 		mov	r3, #2
 1064 004a 01E0     		b	.L68
 1065              	.L67:
 1066              		.loc 1 609 0 discriminator 2
 1067 004c 4FF00003 		mov	r3, #0
 1068              	.L68:
 1069              		.loc 1 609 0 discriminator 3
 1070 0050 7A69     		ldr	r2, [r7, #20]
 1071 0052 1343     		orrs	r3, r3, r2
 1072 0054 7B61     		str	r3, [r7, #20]
 610:C:/StellarisWare/driverlib\gpio.c ****     ulStrength |= ((HWREG(ulPort + GPIO_O_DR8R) & ucPin) ? 4 : 0);
 1073              		.loc 1 610 0 is_stmt 1 discriminator 3
 1074 0056 FB68     		ldr	r3, [r7, #12]
 1075 0058 03F5A163 		add	r3, r3, #1288
 1076 005c 1A68     		ldr	r2, [r3, #0]
 1077 005e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1078 0060 1340     		ands	r3, r3, r2
 1079 0062 002B     		cmp	r3, #0
 1080 0064 02D0     		beq	.L69
 1081              		.loc 1 610 0 is_stmt 0 discriminator 1
 1082 0066 4FF00403 		mov	r3, #4
 1083 006a 01E0     		b	.L70
 1084              	.L69:
 1085              		.loc 1 610 0 discriminator 2
 1086 006c 4FF00003 		mov	r3, #0
 1087              	.L70:
 1088              		.loc 1 610 0 discriminator 3
 1089 0070 7A69     		ldr	r2, [r7, #20]
 1090 0072 1343     		orrs	r3, r3, r2
 1091 0074 7B61     		str	r3, [r7, #20]
 611:C:/StellarisWare/driverlib\gpio.c ****     ulStrength |= ((HWREG(ulPort + GPIO_O_SLR) & ucPin) ? 8 : 0);
 1092              		.loc 1 611 0 is_stmt 1 discriminator 3
 1093 0076 FB68     		ldr	r3, [r7, #12]
 1094 0078 03F5A363 		add	r3, r3, #1304
 1095 007c 1A68     		ldr	r2, [r3, #0]
 1096 007e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1097 0080 1340     		ands	r3, r3, r2
 1098 0082 002B     		cmp	r3, #0
 1099 0084 02D0     		beq	.L71
 1100              		.loc 1 611 0 is_stmt 0 discriminator 1
 1101 0086 4FF00803 		mov	r3, #8
 1102 008a 01E0     		b	.L72
 1103              	.L71:
 1104              		.loc 1 611 0 discriminator 2
 1105 008c 4FF00003 		mov	r3, #0
 1106              	.L72:
 1107              		.loc 1 611 0 discriminator 3
 1108 0090 7A69     		ldr	r2, [r7, #20]
 1109 0092 1343     		orrs	r3, r3, r2
 1110 0094 7B61     		str	r3, [r7, #20]
 612:C:/StellarisWare/driverlib\gpio.c ****     *pulStrength = ulStrength;
 1111              		.loc 1 612 0 is_stmt 1 discriminator 3
 1112 0096 7B68     		ldr	r3, [r7, #4]
 1113 0098 7A69     		ldr	r2, [r7, #20]
 1114 009a 1A60     		str	r2, [r3, #0]
 613:C:/StellarisWare/driverlib\gpio.c **** 
 614:C:/StellarisWare/driverlib\gpio.c ****     //
 615:C:/StellarisWare/driverlib\gpio.c ****     // Get the pin type.
 616:C:/StellarisWare/driverlib\gpio.c ****     //
 617:C:/StellarisWare/driverlib\gpio.c ****     ulPinType = ((HWREG(ulPort + GPIO_O_ODR) & ucPin) ? 1 : 0);
 1115              		.loc 1 617 0 discriminator 3
 1116 009c FB68     		ldr	r3, [r7, #12]
 1117 009e 03F5A063 		add	r3, r3, #1280
 1118 00a2 03F10C03 		add	r3, r3, #12
 1119 00a6 1A68     		ldr	r2, [r3, #0]
 1120 00a8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1121 00aa 1340     		ands	r3, r3, r2
 1122 00ac 002B     		cmp	r3, #0
 1123 00ae 0CBF     		ite	eq
 1124 00b0 0023     		moveq	r3, #0
 1125 00b2 0123     		movne	r3, #1
 1126 00b4 3B61     		str	r3, [r7, #16]
 618:C:/StellarisWare/driverlib\gpio.c ****     ulPinType |= ((HWREG(ulPort + GPIO_O_PUR) & ucPin) ? 2 : 0);
 1127              		.loc 1 618 0 discriminator 3
 1128 00b6 FB68     		ldr	r3, [r7, #12]
 1129 00b8 03F5A263 		add	r3, r3, #1296
 1130 00bc 1A68     		ldr	r2, [r3, #0]
 1131 00be FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1132 00c0 1340     		ands	r3, r3, r2
 1133 00c2 002B     		cmp	r3, #0
 1134 00c4 02D0     		beq	.L73
 1135              		.loc 1 618 0 is_stmt 0 discriminator 1
 1136 00c6 4FF00203 		mov	r3, #2
 1137 00ca 01E0     		b	.L74
 1138              	.L73:
 1139              		.loc 1 618 0 discriminator 2
 1140 00cc 4FF00003 		mov	r3, #0
 1141              	.L74:
 1142              		.loc 1 618 0 discriminator 3
 1143 00d0 3A69     		ldr	r2, [r7, #16]
 1144 00d2 1343     		orrs	r3, r3, r2
 1145 00d4 3B61     		str	r3, [r7, #16]
 619:C:/StellarisWare/driverlib\gpio.c ****     ulPinType |= ((HWREG(ulPort + GPIO_O_PDR) & ucPin) ? 4 : 0);
 1146              		.loc 1 619 0 is_stmt 1 discriminator 3
 1147 00d6 FB68     		ldr	r3, [r7, #12]
 1148 00d8 03F5A263 		add	r3, r3, #1296
 1149 00dc 03F10403 		add	r3, r3, #4
 1150 00e0 1A68     		ldr	r2, [r3, #0]
 1151 00e2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1152 00e4 1340     		ands	r3, r3, r2
 1153 00e6 002B     		cmp	r3, #0
 1154 00e8 02D0     		beq	.L75
 1155              		.loc 1 619 0 is_stmt 0 discriminator 1
 1156 00ea 4FF00403 		mov	r3, #4
 1157 00ee 01E0     		b	.L76
 1158              	.L75:
 1159              		.loc 1 619 0 discriminator 2
 1160 00f0 4FF00003 		mov	r3, #0
 1161              	.L76:
 1162              		.loc 1 619 0 discriminator 3
 1163 00f4 3A69     		ldr	r2, [r7, #16]
 1164 00f6 1343     		orrs	r3, r3, r2
 1165 00f8 3B61     		str	r3, [r7, #16]
 620:C:/StellarisWare/driverlib\gpio.c ****     ulPinType |= ((HWREG(ulPort + GPIO_O_DEN) & ucPin) ? 8 : 0);
 1166              		.loc 1 620 0 is_stmt 1 discriminator 3
 1167 00fa FB68     		ldr	r3, [r7, #12]
 1168 00fc 03F5A263 		add	r3, r3, #1296
 1169 0100 03F10C03 		add	r3, r3, #12
 1170 0104 1A68     		ldr	r2, [r3, #0]
 1171 0106 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1172 0108 1340     		ands	r3, r3, r2
 1173 010a 002B     		cmp	r3, #0
 1174 010c 02D0     		beq	.L77
 1175              		.loc 1 620 0 is_stmt 0 discriminator 1
 1176 010e 4FF00803 		mov	r3, #8
 1177 0112 01E0     		b	.L78
 1178              	.L77:
 1179              		.loc 1 620 0 discriminator 2
 1180 0114 4FF00003 		mov	r3, #0
 1181              	.L78:
 1182              		.loc 1 620 0 discriminator 3
 1183 0118 3A69     		ldr	r2, [r7, #16]
 1184 011a 1343     		orrs	r3, r3, r2
 1185 011c 3B61     		str	r3, [r7, #16]
 621:C:/StellarisWare/driverlib\gpio.c ****     *pulPinType = ulPinType;
 1186              		.loc 1 621 0 is_stmt 1 discriminator 3
 1187 011e 3B68     		ldr	r3, [r7, #0]
 1188 0120 3A69     		ldr	r2, [r7, #16]
 1189 0122 1A60     		str	r2, [r3, #0]
 622:C:/StellarisWare/driverlib\gpio.c **** }
 1190              		.loc 1 622 0 discriminator 3
 1191 0124 07F11C07 		add	r7, r7, #28
 1192 0128 BD46     		mov	sp, r7
 1193 012a 80BC     		pop	{r7}
 1194 012c 7047     		bx	lr
 1195              		.cfi_endproc
 1196              	.LFE6:
 1198 012e 00BF     		.section	.text.GPIOPinIntEnable,"ax",%progbits
 1199              		.align	2
 1200              		.global	GPIOPinIntEnable
 1201              		.thumb
 1202              		.thumb_func
 1204              	GPIOPinIntEnable:
 1205              	.LFB7:
 623:C:/StellarisWare/driverlib\gpio.c **** 
 624:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 625:C:/StellarisWare/driverlib\gpio.c **** //
 626:C:/StellarisWare/driverlib\gpio.c **** //! Enables interrupts for the specified pin(s).
 627:C:/StellarisWare/driverlib\gpio.c **** //!
 628:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 629:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 630:C:/StellarisWare/driverlib\gpio.c **** //!
 631:C:/StellarisWare/driverlib\gpio.c **** //! Unmasks the interrupt for the specified pin(s).
 632:C:/StellarisWare/driverlib\gpio.c **** //!
 633:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 634:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 635:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 636:C:/StellarisWare/driverlib\gpio.c **** //!
 637:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 638:C:/StellarisWare/driverlib\gpio.c **** //
 639:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 640:C:/StellarisWare/driverlib\gpio.c **** void
 641:C:/StellarisWare/driverlib\gpio.c **** GPIOPinIntEnable(unsigned long ulPort, unsigned char ucPins)
 642:C:/StellarisWare/driverlib\gpio.c **** {
 1206              		.loc 1 642 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 8
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211 0000 80B4     		push	{r7}
 1212              	.LCFI21:
 1213              		.cfi_def_cfa_offset 4
 1214              		.cfi_offset 7, -4
 1215 0002 83B0     		sub	sp, sp, #12
 1216              	.LCFI22:
 1217              		.cfi_def_cfa_offset 16
 1218 0004 00AF     		add	r7, sp, #0
 1219              	.LCFI23:
 1220              		.cfi_def_cfa_register 7
 1221 0006 7860     		str	r0, [r7, #4]
 1222 0008 0B46     		mov	r3, r1
 1223 000a FB70     		strb	r3, [r7, #3]
 643:C:/StellarisWare/driverlib\gpio.c ****     //
 644:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 645:C:/StellarisWare/driverlib\gpio.c ****     //
 646:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 647:C:/StellarisWare/driverlib\gpio.c **** 
 648:C:/StellarisWare/driverlib\gpio.c ****     //
 649:C:/StellarisWare/driverlib\gpio.c ****     // Enable the interrupts.
 650:C:/StellarisWare/driverlib\gpio.c ****     //
 651:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_IM) |= ucPins;
 1224              		.loc 1 651 0
 1225 000c 7B68     		ldr	r3, [r7, #4]
 1226 000e 03F58263 		add	r3, r3, #1040
 1227 0012 7A68     		ldr	r2, [r7, #4]
 1228 0014 02F58262 		add	r2, r2, #1040
 1229 0018 1168     		ldr	r1, [r2, #0]
 1230 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1231 001c 0A43     		orrs	r2, r2, r1
 1232 001e 1A60     		str	r2, [r3, #0]
 652:C:/StellarisWare/driverlib\gpio.c **** }
 1233              		.loc 1 652 0
 1234 0020 07F10C07 		add	r7, r7, #12
 1235 0024 BD46     		mov	sp, r7
 1236 0026 80BC     		pop	{r7}
 1237 0028 7047     		bx	lr
 1238              		.cfi_endproc
 1239              	.LFE7:
 1241 002a 00BF     		.section	.text.GPIOPinIntDisable,"ax",%progbits
 1242              		.align	2
 1243              		.global	GPIOPinIntDisable
 1244              		.thumb
 1245              		.thumb_func
 1247              	GPIOPinIntDisable:
 1248              	.LFB8:
 653:C:/StellarisWare/driverlib\gpio.c **** 
 654:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 655:C:/StellarisWare/driverlib\gpio.c **** //
 656:C:/StellarisWare/driverlib\gpio.c **** //! Disables interrupts for the specified pin(s).
 657:C:/StellarisWare/driverlib\gpio.c **** //!
 658:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 659:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 660:C:/StellarisWare/driverlib\gpio.c **** //!
 661:C:/StellarisWare/driverlib\gpio.c **** //! Masks the interrupt for the specified pin(s).
 662:C:/StellarisWare/driverlib\gpio.c **** //!
 663:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 664:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 665:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 666:C:/StellarisWare/driverlib\gpio.c **** //!
 667:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 668:C:/StellarisWare/driverlib\gpio.c **** //
 669:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 670:C:/StellarisWare/driverlib\gpio.c **** void
 671:C:/StellarisWare/driverlib\gpio.c **** GPIOPinIntDisable(unsigned long ulPort, unsigned char ucPins)
 672:C:/StellarisWare/driverlib\gpio.c **** {
 1249              		.loc 1 672 0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 8
 1252              		@ frame_needed = 1, uses_anonymous_args = 0
 1253              		@ link register save eliminated.
 1254 0000 80B4     		push	{r7}
 1255              	.LCFI24:
 1256              		.cfi_def_cfa_offset 4
 1257              		.cfi_offset 7, -4
 1258 0002 83B0     		sub	sp, sp, #12
 1259              	.LCFI25:
 1260              		.cfi_def_cfa_offset 16
 1261 0004 00AF     		add	r7, sp, #0
 1262              	.LCFI26:
 1263              		.cfi_def_cfa_register 7
 1264 0006 7860     		str	r0, [r7, #4]
 1265 0008 0B46     		mov	r3, r1
 1266 000a FB70     		strb	r3, [r7, #3]
 673:C:/StellarisWare/driverlib\gpio.c ****     //
 674:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 675:C:/StellarisWare/driverlib\gpio.c ****     //
 676:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 677:C:/StellarisWare/driverlib\gpio.c **** 
 678:C:/StellarisWare/driverlib\gpio.c ****     //
 679:C:/StellarisWare/driverlib\gpio.c ****     // Disable the interrupts.
 680:C:/StellarisWare/driverlib\gpio.c ****     //
 681:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_IM) &= ~(ucPins);
 1267              		.loc 1 681 0
 1268 000c 7B68     		ldr	r3, [r7, #4]
 1269 000e 03F58263 		add	r3, r3, #1040
 1270 0012 7A68     		ldr	r2, [r7, #4]
 1271 0014 02F58262 		add	r2, r2, #1040
 1272 0018 1168     		ldr	r1, [r2, #0]
 1273 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1274 001c 6FEA0202 		mvn	r2, r2
 1275 0020 0A40     		ands	r2, r2, r1
 1276 0022 1A60     		str	r2, [r3, #0]
 682:C:/StellarisWare/driverlib\gpio.c **** }
 1277              		.loc 1 682 0
 1278 0024 07F10C07 		add	r7, r7, #12
 1279 0028 BD46     		mov	sp, r7
 1280 002a 80BC     		pop	{r7}
 1281 002c 7047     		bx	lr
 1282              		.cfi_endproc
 1283              	.LFE8:
 1285 002e 00BF     		.section	.text.GPIOPinIntStatus,"ax",%progbits
 1286              		.align	2
 1287              		.global	GPIOPinIntStatus
 1288              		.thumb
 1289              		.thumb_func
 1291              	GPIOPinIntStatus:
 1292              	.LFB9:
 683:C:/StellarisWare/driverlib\gpio.c **** 
 684:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 685:C:/StellarisWare/driverlib\gpio.c **** //
 686:C:/StellarisWare/driverlib\gpio.c **** //! Gets interrupt status for the specified GPIO port.
 687:C:/StellarisWare/driverlib\gpio.c **** //!
 688:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 689:C:/StellarisWare/driverlib\gpio.c **** //! \param bMasked specifies whether masked or raw interrupt status is
 690:C:/StellarisWare/driverlib\gpio.c **** //! returned.
 691:C:/StellarisWare/driverlib\gpio.c **** //!
 692:C:/StellarisWare/driverlib\gpio.c **** //! If \e bMasked is set as \b true, then the masked interrupt status is
 693:C:/StellarisWare/driverlib\gpio.c **** //! returned; otherwise, the raw interrupt status is returned.
 694:C:/StellarisWare/driverlib\gpio.c **** //!
 695:C:/StellarisWare/driverlib\gpio.c **** //! \return Returns a bit-packed byte, where each bit that is set identifies
 696:C:/StellarisWare/driverlib\gpio.c **** //! an active masked or raw interrupt, and where bit 0 of the byte
 697:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 698:C:/StellarisWare/driverlib\gpio.c **** //! Bits 31:8 should be ignored.
 699:C:/StellarisWare/driverlib\gpio.c **** //
 700:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 701:C:/StellarisWare/driverlib\gpio.c **** long
 702:C:/StellarisWare/driverlib\gpio.c **** GPIOPinIntStatus(unsigned long ulPort, tBoolean bMasked)
 703:C:/StellarisWare/driverlib\gpio.c **** {
 1293              		.loc 1 703 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 8
 1296              		@ frame_needed = 1, uses_anonymous_args = 0
 1297              		@ link register save eliminated.
 1298 0000 80B4     		push	{r7}
 1299              	.LCFI27:
 1300              		.cfi_def_cfa_offset 4
 1301              		.cfi_offset 7, -4
 1302 0002 83B0     		sub	sp, sp, #12
 1303              	.LCFI28:
 1304              		.cfi_def_cfa_offset 16
 1305 0004 00AF     		add	r7, sp, #0
 1306              	.LCFI29:
 1307              		.cfi_def_cfa_register 7
 1308 0006 7860     		str	r0, [r7, #4]
 1309 0008 0B46     		mov	r3, r1
 1310 000a FB70     		strb	r3, [r7, #3]
 704:C:/StellarisWare/driverlib\gpio.c ****     //
 705:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 706:C:/StellarisWare/driverlib\gpio.c ****     //
 707:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 708:C:/StellarisWare/driverlib\gpio.c **** 
 709:C:/StellarisWare/driverlib\gpio.c ****     //
 710:C:/StellarisWare/driverlib\gpio.c ****     // Return the interrupt status.
 711:C:/StellarisWare/driverlib\gpio.c ****     //
 712:C:/StellarisWare/driverlib\gpio.c ****     if(bMasked)
 1311              		.loc 1 712 0
 1312 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1313 000e 002B     		cmp	r3, #0
 1314 0010 04D0     		beq	.L82
 713:C:/StellarisWare/driverlib\gpio.c ****     {
 714:C:/StellarisWare/driverlib\gpio.c ****         return(HWREG(ulPort + GPIO_O_MIS));
 1315              		.loc 1 714 0
 1316 0012 7B68     		ldr	r3, [r7, #4]
 1317 0014 03F58363 		add	r3, r3, #1048
 1318 0018 1B68     		ldr	r3, [r3, #0]
 1319 001a 05E0     		b	.L83
 1320              	.L82:
 715:C:/StellarisWare/driverlib\gpio.c ****     }
 716:C:/StellarisWare/driverlib\gpio.c ****     else
 717:C:/StellarisWare/driverlib\gpio.c ****     {
 718:C:/StellarisWare/driverlib\gpio.c ****         return(HWREG(ulPort + GPIO_O_RIS));
 1321              		.loc 1 718 0
 1322 001c 7B68     		ldr	r3, [r7, #4]
 1323 001e 03F58263 		add	r3, r3, #1040
 1324 0022 03F10403 		add	r3, r3, #4
 1325 0026 1B68     		ldr	r3, [r3, #0]
 1326              	.L83:
 719:C:/StellarisWare/driverlib\gpio.c ****     }
 720:C:/StellarisWare/driverlib\gpio.c **** }
 1327              		.loc 1 720 0
 1328 0028 1846     		mov	r0, r3
 1329 002a 07F10C07 		add	r7, r7, #12
 1330 002e BD46     		mov	sp, r7
 1331 0030 80BC     		pop	{r7}
 1332 0032 7047     		bx	lr
 1333              		.cfi_endproc
 1334              	.LFE9:
 1336              		.section	.text.GPIOPinIntClear,"ax",%progbits
 1337              		.align	2
 1338              		.global	GPIOPinIntClear
 1339              		.thumb
 1340              		.thumb_func
 1342              	GPIOPinIntClear:
 1343              	.LFB10:
 721:C:/StellarisWare/driverlib\gpio.c **** 
 722:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 723:C:/StellarisWare/driverlib\gpio.c **** //
 724:C:/StellarisWare/driverlib\gpio.c **** //! Clears the interrupt for the specified pin(s).
 725:C:/StellarisWare/driverlib\gpio.c **** //!
 726:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 727:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 728:C:/StellarisWare/driverlib\gpio.c **** //!
 729:C:/StellarisWare/driverlib\gpio.c **** //! Clears the interrupt for the specified pin(s).
 730:C:/StellarisWare/driverlib\gpio.c **** //!
 731:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 732:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 733:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 734:C:/StellarisWare/driverlib\gpio.c **** //!
 735:C:/StellarisWare/driverlib\gpio.c **** //! \note Because there is a write buffer in the Cortex-M3 processor, it may
 736:C:/StellarisWare/driverlib\gpio.c **** //! take several clock cycles before the interrupt source is actually cleared.
 737:C:/StellarisWare/driverlib\gpio.c **** //! Therefore, it is recommended that the interrupt source be cleared early in
 738:C:/StellarisWare/driverlib\gpio.c **** //! the interrupt handler (as opposed to the very last action) to avoid
 739:C:/StellarisWare/driverlib\gpio.c **** //! returning from the interrupt handler before the interrupt source is
 740:C:/StellarisWare/driverlib\gpio.c **** //! actually cleared.  Failure to do so may result in the interrupt handler
 741:C:/StellarisWare/driverlib\gpio.c **** //! being immediately reentered (because the interrupt controller still sees
 742:C:/StellarisWare/driverlib\gpio.c **** //! the interrupt source asserted).
 743:C:/StellarisWare/driverlib\gpio.c **** //!
 744:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 745:C:/StellarisWare/driverlib\gpio.c **** //
 746:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 747:C:/StellarisWare/driverlib\gpio.c **** void
 748:C:/StellarisWare/driverlib\gpio.c **** GPIOPinIntClear(unsigned long ulPort, unsigned char ucPins)
 749:C:/StellarisWare/driverlib\gpio.c **** {
 1344              		.loc 1 749 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 8
 1347              		@ frame_needed = 1, uses_anonymous_args = 0
 1348              		@ link register save eliminated.
 1349 0000 80B4     		push	{r7}
 1350              	.LCFI30:
 1351              		.cfi_def_cfa_offset 4
 1352              		.cfi_offset 7, -4
 1353 0002 83B0     		sub	sp, sp, #12
 1354              	.LCFI31:
 1355              		.cfi_def_cfa_offset 16
 1356 0004 00AF     		add	r7, sp, #0
 1357              	.LCFI32:
 1358              		.cfi_def_cfa_register 7
 1359 0006 7860     		str	r0, [r7, #4]
 1360 0008 0B46     		mov	r3, r1
 1361 000a FB70     		strb	r3, [r7, #3]
 750:C:/StellarisWare/driverlib\gpio.c ****     //
 751:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 752:C:/StellarisWare/driverlib\gpio.c ****     //
 753:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 754:C:/StellarisWare/driverlib\gpio.c **** 
 755:C:/StellarisWare/driverlib\gpio.c ****     //
 756:C:/StellarisWare/driverlib\gpio.c ****     // Clear the interrupts.
 757:C:/StellarisWare/driverlib\gpio.c ****     //
 758:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_ICR) = ucPins;
 1362              		.loc 1 758 0
 1363 000c 7B68     		ldr	r3, [r7, #4]
 1364 000e 03F58263 		add	r3, r3, #1040
 1365 0012 03F10C03 		add	r3, r3, #12
 1366 0016 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1367 0018 1A60     		str	r2, [r3, #0]
 759:C:/StellarisWare/driverlib\gpio.c **** }
 1368              		.loc 1 759 0
 1369 001a 07F10C07 		add	r7, r7, #12
 1370 001e BD46     		mov	sp, r7
 1371 0020 80BC     		pop	{r7}
 1372 0022 7047     		bx	lr
 1373              		.cfi_endproc
 1374              	.LFE10:
 1376              		.section	.text.GPIOPortIntRegister,"ax",%progbits
 1377              		.align	2
 1378              		.global	GPIOPortIntRegister
 1379              		.thumb
 1380              		.thumb_func
 1382              	GPIOPortIntRegister:
 1383              	.LFB11:
 760:C:/StellarisWare/driverlib\gpio.c **** 
 761:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 762:C:/StellarisWare/driverlib\gpio.c **** //
 763:C:/StellarisWare/driverlib\gpio.c **** //! Registers an interrupt handler for a GPIO port.
 764:C:/StellarisWare/driverlib\gpio.c **** //!
 765:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 766:C:/StellarisWare/driverlib\gpio.c **** //! \param pfnIntHandler is a pointer to the GPIO port interrupt handling
 767:C:/StellarisWare/driverlib\gpio.c **** //! function.
 768:C:/StellarisWare/driverlib\gpio.c **** //!
 769:C:/StellarisWare/driverlib\gpio.c **** //! This function ensures that the interrupt handler specified by
 770:C:/StellarisWare/driverlib\gpio.c **** //! \e pfnIntHandler is called when an interrupt is detected from the selected
 771:C:/StellarisWare/driverlib\gpio.c **** //! GPIO port.  This function also enables the corresponding GPIO interrupt
 772:C:/StellarisWare/driverlib\gpio.c **** //! in the interrupt controller; individual pin interrupts and interrupt
 773:C:/StellarisWare/driverlib\gpio.c **** //! sources must be enabled with GPIOPinIntEnable().
 774:C:/StellarisWare/driverlib\gpio.c **** //!
 775:C:/StellarisWare/driverlib\gpio.c **** //! \sa IntRegister() for important information about registering interrupt
 776:C:/StellarisWare/driverlib\gpio.c **** //! handlers.
 777:C:/StellarisWare/driverlib\gpio.c **** //!
 778:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 779:C:/StellarisWare/driverlib\gpio.c **** //
 780:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 781:C:/StellarisWare/driverlib\gpio.c **** void
 782:C:/StellarisWare/driverlib\gpio.c **** GPIOPortIntRegister(unsigned long ulPort, void (*pfnIntHandler)(void))
 783:C:/StellarisWare/driverlib\gpio.c **** {
 1384              		.loc 1 783 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 8
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388 0000 80B5     		push	{r7, lr}
 1389              	.LCFI33:
 1390              		.cfi_def_cfa_offset 8
 1391              		.cfi_offset 14, -4
 1392              		.cfi_offset 7, -8
 1393 0002 82B0     		sub	sp, sp, #8
 1394              	.LCFI34:
 1395              		.cfi_def_cfa_offset 16
 1396 0004 00AF     		add	r7, sp, #0
 1397              	.LCFI35:
 1398              		.cfi_def_cfa_register 7
 1399 0006 7860     		str	r0, [r7, #4]
 1400 0008 3960     		str	r1, [r7, #0]
 784:C:/StellarisWare/driverlib\gpio.c ****     //
 785:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 786:C:/StellarisWare/driverlib\gpio.c ****     //
 787:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 788:C:/StellarisWare/driverlib\gpio.c **** 
 789:C:/StellarisWare/driverlib\gpio.c ****     //
 790:C:/StellarisWare/driverlib\gpio.c ****     // Get the interrupt number associated with the specified GPIO.
 791:C:/StellarisWare/driverlib\gpio.c ****     //
 792:C:/StellarisWare/driverlib\gpio.c ****     ulPort = GPIOGetIntNumber(ulPort);
 1401              		.loc 1 792 0
 1402 000a 7868     		ldr	r0, [r7, #4]
 1403 000c FFF7FEFF 		bl	GPIOGetIntNumber
 1404 0010 0346     		mov	r3, r0
 1405 0012 7B60     		str	r3, [r7, #4]
 793:C:/StellarisWare/driverlib\gpio.c **** 
 794:C:/StellarisWare/driverlib\gpio.c ****     //
 795:C:/StellarisWare/driverlib\gpio.c ****     // Register the interrupt handler.
 796:C:/StellarisWare/driverlib\gpio.c ****     //
 797:C:/StellarisWare/driverlib\gpio.c ****     IntRegister(ulPort, pfnIntHandler);
 1406              		.loc 1 797 0
 1407 0014 7868     		ldr	r0, [r7, #4]
 1408 0016 3968     		ldr	r1, [r7, #0]
 1409 0018 FFF7FEFF 		bl	IntRegister
 798:C:/StellarisWare/driverlib\gpio.c **** 
 799:C:/StellarisWare/driverlib\gpio.c ****     //
 800:C:/StellarisWare/driverlib\gpio.c ****     // Enable the GPIO interrupt.
 801:C:/StellarisWare/driverlib\gpio.c ****     //
 802:C:/StellarisWare/driverlib\gpio.c ****     IntEnable(ulPort);
 1410              		.loc 1 802 0
 1411 001c 7868     		ldr	r0, [r7, #4]
 1412 001e FFF7FEFF 		bl	IntEnable
 803:C:/StellarisWare/driverlib\gpio.c **** }
 1413              		.loc 1 803 0
 1414 0022 07F10807 		add	r7, r7, #8
 1415 0026 BD46     		mov	sp, r7
 1416 0028 80BD     		pop	{r7, pc}
 1417              		.cfi_endproc
 1418              	.LFE11:
 1420 002a 00BF     		.section	.text.GPIOPortIntUnregister,"ax",%progbits
 1421              		.align	2
 1422              		.global	GPIOPortIntUnregister
 1423              		.thumb
 1424              		.thumb_func
 1426              	GPIOPortIntUnregister:
 1427              	.LFB12:
 804:C:/StellarisWare/driverlib\gpio.c **** 
 805:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 806:C:/StellarisWare/driverlib\gpio.c **** //
 807:C:/StellarisWare/driverlib\gpio.c **** //! Removes an interrupt handler for a GPIO port.
 808:C:/StellarisWare/driverlib\gpio.c **** //!
 809:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 810:C:/StellarisWare/driverlib\gpio.c **** //!
 811:C:/StellarisWare/driverlib\gpio.c **** //! This function unregisters the interrupt handler for the specified
 812:C:/StellarisWare/driverlib\gpio.c **** //! GPIO port.  This function also disables the corresponding
 813:C:/StellarisWare/driverlib\gpio.c **** //! GPIO port interrupt in the interrupt controller; individual GPIO interrupts
 814:C:/StellarisWare/driverlib\gpio.c **** //! and interrupt sources must be disabled with GPIOPinIntDisable().
 815:C:/StellarisWare/driverlib\gpio.c **** //!
 816:C:/StellarisWare/driverlib\gpio.c **** //! \sa IntRegister() for important information about registering interrupt
 817:C:/StellarisWare/driverlib\gpio.c **** //! handlers.
 818:C:/StellarisWare/driverlib\gpio.c **** //!
 819:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 820:C:/StellarisWare/driverlib\gpio.c **** //
 821:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 822:C:/StellarisWare/driverlib\gpio.c **** void
 823:C:/StellarisWare/driverlib\gpio.c **** GPIOPortIntUnregister(unsigned long ulPort)
 824:C:/StellarisWare/driverlib\gpio.c **** {
 1428              		.loc 1 824 0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 8
 1431              		@ frame_needed = 1, uses_anonymous_args = 0
 1432 0000 80B5     		push	{r7, lr}
 1433              	.LCFI36:
 1434              		.cfi_def_cfa_offset 8
 1435              		.cfi_offset 14, -4
 1436              		.cfi_offset 7, -8
 1437 0002 82B0     		sub	sp, sp, #8
 1438              	.LCFI37:
 1439              		.cfi_def_cfa_offset 16
 1440 0004 00AF     		add	r7, sp, #0
 1441              	.LCFI38:
 1442              		.cfi_def_cfa_register 7
 1443 0006 7860     		str	r0, [r7, #4]
 825:C:/StellarisWare/driverlib\gpio.c ****     //
 826:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 827:C:/StellarisWare/driverlib\gpio.c ****     //
 828:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 829:C:/StellarisWare/driverlib\gpio.c **** 
 830:C:/StellarisWare/driverlib\gpio.c ****     //
 831:C:/StellarisWare/driverlib\gpio.c ****     // Get the interrupt number associated with the specified GPIO.
 832:C:/StellarisWare/driverlib\gpio.c ****     //
 833:C:/StellarisWare/driverlib\gpio.c ****     ulPort = GPIOGetIntNumber(ulPort);
 1444              		.loc 1 833 0
 1445 0008 7868     		ldr	r0, [r7, #4]
 1446 000a FFF7FEFF 		bl	GPIOGetIntNumber
 1447 000e 0346     		mov	r3, r0
 1448 0010 7B60     		str	r3, [r7, #4]
 834:C:/StellarisWare/driverlib\gpio.c **** 
 835:C:/StellarisWare/driverlib\gpio.c ****     //
 836:C:/StellarisWare/driverlib\gpio.c ****     // Disable the GPIO interrupt.
 837:C:/StellarisWare/driverlib\gpio.c ****     //
 838:C:/StellarisWare/driverlib\gpio.c ****     IntDisable(ulPort);
 1449              		.loc 1 838 0
 1450 0012 7868     		ldr	r0, [r7, #4]
 1451 0014 FFF7FEFF 		bl	IntDisable
 839:C:/StellarisWare/driverlib\gpio.c **** 
 840:C:/StellarisWare/driverlib\gpio.c ****     //
 841:C:/StellarisWare/driverlib\gpio.c ****     // Unregister the interrupt handler.
 842:C:/StellarisWare/driverlib\gpio.c ****     //
 843:C:/StellarisWare/driverlib\gpio.c ****     IntUnregister(ulPort);
 1452              		.loc 1 843 0
 1453 0018 7868     		ldr	r0, [r7, #4]
 1454 001a FFF7FEFF 		bl	IntUnregister
 844:C:/StellarisWare/driverlib\gpio.c **** }
 1455              		.loc 1 844 0
 1456 001e 07F10807 		add	r7, r7, #8
 1457 0022 BD46     		mov	sp, r7
 1458 0024 80BD     		pop	{r7, pc}
 1459              		.cfi_endproc
 1460              	.LFE12:
 1462 0026 00BF     		.section	.text.GPIOPinRead,"ax",%progbits
 1463              		.align	2
 1464              		.global	GPIOPinRead
 1465              		.thumb
 1466              		.thumb_func
 1468              	GPIOPinRead:
 1469              	.LFB13:
 845:C:/StellarisWare/driverlib\gpio.c **** 
 846:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 847:C:/StellarisWare/driverlib\gpio.c **** //
 848:C:/StellarisWare/driverlib\gpio.c **** //! Reads the values present of the specified pin(s).
 849:C:/StellarisWare/driverlib\gpio.c **** //!
 850:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 851:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 852:C:/StellarisWare/driverlib\gpio.c **** //!
 853:C:/StellarisWare/driverlib\gpio.c **** //! The values at the specified pin(s) are read, as specified by \e ucPins.
 854:C:/StellarisWare/driverlib\gpio.c **** //! Values are returned for both input and output pin(s), and the value
 855:C:/StellarisWare/driverlib\gpio.c **** //! for pin(s) that are not specified by \e ucPins are set to 0.
 856:C:/StellarisWare/driverlib\gpio.c **** //!
 857:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 858:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 859:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 860:C:/StellarisWare/driverlib\gpio.c **** //!
 861:C:/StellarisWare/driverlib\gpio.c **** //! \return Returns a bit-packed byte providing the state of the specified
 862:C:/StellarisWare/driverlib\gpio.c **** //! pin, where bit 0 of the byte represents GPIO port pin 0, bit 1 represents
 863:C:/StellarisWare/driverlib\gpio.c **** //! GPIO port pin 1, and so on.  Any bit that is not specified by \e ucPins
 864:C:/StellarisWare/driverlib\gpio.c **** //! is returned as a 0.  Bits 31:8 should be ignored.
 865:C:/StellarisWare/driverlib\gpio.c **** //
 866:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 867:C:/StellarisWare/driverlib\gpio.c **** long
 868:C:/StellarisWare/driverlib\gpio.c **** GPIOPinRead(unsigned long ulPort, unsigned char ucPins)
 869:C:/StellarisWare/driverlib\gpio.c **** {
 1470              		.loc 1 869 0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 8
 1473              		@ frame_needed = 1, uses_anonymous_args = 0
 1474              		@ link register save eliminated.
 1475 0000 80B4     		push	{r7}
 1476              	.LCFI39:
 1477              		.cfi_def_cfa_offset 4
 1478              		.cfi_offset 7, -4
 1479 0002 83B0     		sub	sp, sp, #12
 1480              	.LCFI40:
 1481              		.cfi_def_cfa_offset 16
 1482 0004 00AF     		add	r7, sp, #0
 1483              	.LCFI41:
 1484              		.cfi_def_cfa_register 7
 1485 0006 7860     		str	r0, [r7, #4]
 1486 0008 0B46     		mov	r3, r1
 1487 000a FB70     		strb	r3, [r7, #3]
 870:C:/StellarisWare/driverlib\gpio.c ****     //
 871:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 872:C:/StellarisWare/driverlib\gpio.c ****     //
 873:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 874:C:/StellarisWare/driverlib\gpio.c **** 
 875:C:/StellarisWare/driverlib\gpio.c ****     //
 876:C:/StellarisWare/driverlib\gpio.c ****     // Return the pin value(s).
 877:C:/StellarisWare/driverlib\gpio.c ****     //
 878:C:/StellarisWare/driverlib\gpio.c ****     return(HWREG(ulPort + (GPIO_O_DATA + (ucPins << 2))));
 1488              		.loc 1 878 0
 1489 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1490 000e 4FEA8303 		lsl	r3, r3, #2
 1491 0012 1A46     		mov	r2, r3
 1492 0014 7B68     		ldr	r3, [r7, #4]
 1493 0016 D318     		adds	r3, r2, r3
 1494 0018 1B68     		ldr	r3, [r3, #0]
 879:C:/StellarisWare/driverlib\gpio.c **** }
 1495              		.loc 1 879 0
 1496 001a 1846     		mov	r0, r3
 1497 001c 07F10C07 		add	r7, r7, #12
 1498 0020 BD46     		mov	sp, r7
 1499 0022 80BC     		pop	{r7}
 1500 0024 7047     		bx	lr
 1501              		.cfi_endproc
 1502              	.LFE13:
 1504 0026 00BF     		.section	.text.GPIOPinWrite,"ax",%progbits
 1505              		.align	2
 1506              		.global	GPIOPinWrite
 1507              		.thumb
 1508              		.thumb_func
 1510              	GPIOPinWrite:
 1511              	.LFB14:
 880:C:/StellarisWare/driverlib\gpio.c **** 
 881:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 882:C:/StellarisWare/driverlib\gpio.c **** //
 883:C:/StellarisWare/driverlib\gpio.c **** //! Writes a value to the specified pin(s).
 884:C:/StellarisWare/driverlib\gpio.c **** //!
 885:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 886:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 887:C:/StellarisWare/driverlib\gpio.c **** //! \param ucVal is the value to write to the pin(s).
 888:C:/StellarisWare/driverlib\gpio.c **** //!
 889:C:/StellarisWare/driverlib\gpio.c **** //! Writes the corresponding bit values to the output pin(s) specified by
 890:C:/StellarisWare/driverlib\gpio.c **** //! \e ucPins.  Writing to a pin configured as an input pin has no effect.
 891:C:/StellarisWare/driverlib\gpio.c **** //!
 892:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 893:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 894:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 895:C:/StellarisWare/driverlib\gpio.c **** //!
 896:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 897:C:/StellarisWare/driverlib\gpio.c **** //
 898:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 899:C:/StellarisWare/driverlib\gpio.c **** void
 900:C:/StellarisWare/driverlib\gpio.c **** GPIOPinWrite(unsigned long ulPort, unsigned char ucPins, unsigned char ucVal)
 901:C:/StellarisWare/driverlib\gpio.c **** {
 1512              		.loc 1 901 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 8
 1515              		@ frame_needed = 1, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 1517 0000 80B4     		push	{r7}
 1518              	.LCFI42:
 1519              		.cfi_def_cfa_offset 4
 1520              		.cfi_offset 7, -4
 1521 0002 83B0     		sub	sp, sp, #12
 1522              	.LCFI43:
 1523              		.cfi_def_cfa_offset 16
 1524 0004 00AF     		add	r7, sp, #0
 1525              	.LCFI44:
 1526              		.cfi_def_cfa_register 7
 1527 0006 7860     		str	r0, [r7, #4]
 1528 0008 1346     		mov	r3, r2
 1529 000a 0A46     		mov	r2, r1
 1530 000c FA70     		strb	r2, [r7, #3]
 1531 000e BB70     		strb	r3, [r7, #2]
 902:C:/StellarisWare/driverlib\gpio.c ****     //
 903:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 904:C:/StellarisWare/driverlib\gpio.c ****     //
 905:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 906:C:/StellarisWare/driverlib\gpio.c **** 
 907:C:/StellarisWare/driverlib\gpio.c ****     //
 908:C:/StellarisWare/driverlib\gpio.c ****     // Write the pins.
 909:C:/StellarisWare/driverlib\gpio.c ****     //
 910:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + (GPIO_O_DATA + (ucPins << 2))) = ucVal;
 1532              		.loc 1 910 0
 1533 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1534 0012 4FEA8303 		lsl	r3, r3, #2
 1535 0016 1A46     		mov	r2, r3
 1536 0018 7B68     		ldr	r3, [r7, #4]
 1537 001a D318     		adds	r3, r2, r3
 1538 001c BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1539 001e 1A60     		str	r2, [r3, #0]
 911:C:/StellarisWare/driverlib\gpio.c **** }
 1540              		.loc 1 911 0
 1541 0020 07F10C07 		add	r7, r7, #12
 1542 0024 BD46     		mov	sp, r7
 1543 0026 80BC     		pop	{r7}
 1544 0028 7047     		bx	lr
 1545              		.cfi_endproc
 1546              	.LFE14:
 1548 002a 00BF     		.section	.text.GPIOPinTypeADC,"ax",%progbits
 1549              		.align	2
 1550              		.global	GPIOPinTypeADC
 1551              		.thumb
 1552              		.thumb_func
 1554              	GPIOPinTypeADC:
 1555              	.LFB15:
 912:C:/StellarisWare/driverlib\gpio.c **** 
 913:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 914:C:/StellarisWare/driverlib\gpio.c **** //
 915:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use as analog-to-digital converter inputs.
 916:C:/StellarisWare/driverlib\gpio.c **** //!
 917:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 918:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 919:C:/StellarisWare/driverlib\gpio.c **** //!
 920:C:/StellarisWare/driverlib\gpio.c **** //! The analog-to-digital converter input pins must be properly configured
 921:C:/StellarisWare/driverlib\gpio.c **** //! to function correctly on devices that are not Sandstorm- or Fury-class.
 922:C:/StellarisWare/driverlib\gpio.c **** //! This function provides the proper configuration for those pin(s).
 923:C:/StellarisWare/driverlib\gpio.c **** //!
 924:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 925:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 926:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 927:C:/StellarisWare/driverlib\gpio.c **** //!
 928:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into an ADC input; it
 929:C:/StellarisWare/driverlib\gpio.c **** //! only configures an ADC input pin for proper operation. Devices with
 930:C:/StellarisWare/driverlib\gpio.c **** //! flexible pin muxing also require a GPIOPinConfigure() function call.
 931:C:/StellarisWare/driverlib\gpio.c **** //!
 932:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 933:C:/StellarisWare/driverlib\gpio.c **** //
 934:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 935:C:/StellarisWare/driverlib\gpio.c **** void
 936:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeADC(unsigned long ulPort, unsigned char ucPins)
 937:C:/StellarisWare/driverlib\gpio.c **** {
 1556              		.loc 1 937 0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 8
 1559              		@ frame_needed = 1, uses_anonymous_args = 0
 1560 0000 80B5     		push	{r7, lr}
 1561              	.LCFI45:
 1562              		.cfi_def_cfa_offset 8
 1563              		.cfi_offset 14, -4
 1564              		.cfi_offset 7, -8
 1565 0002 82B0     		sub	sp, sp, #8
 1566              	.LCFI46:
 1567              		.cfi_def_cfa_offset 16
 1568 0004 00AF     		add	r7, sp, #0
 1569              	.LCFI47:
 1570              		.cfi_def_cfa_register 7
 1571 0006 7860     		str	r0, [r7, #4]
 1572 0008 0B46     		mov	r3, r1
 1573 000a FB70     		strb	r3, [r7, #3]
 938:C:/StellarisWare/driverlib\gpio.c ****     //
 939:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 940:C:/StellarisWare/driverlib\gpio.c ****     //
 941:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 942:C:/StellarisWare/driverlib\gpio.c **** 
 943:C:/StellarisWare/driverlib\gpio.c ****     //
 944:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be inputs.
 945:C:/StellarisWare/driverlib\gpio.c ****     //
 946:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_IN);
 1574              		.loc 1 946 0
 1575 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1576 000e 7868     		ldr	r0, [r7, #4]
 1577 0010 1946     		mov	r1, r3
 1578 0012 4FF00002 		mov	r2, #0
 1579 0016 FFF7FEFF 		bl	GPIODirModeSet
 947:C:/StellarisWare/driverlib\gpio.c **** 
 948:C:/StellarisWare/driverlib\gpio.c ****     //
 949:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for analog operation.
 950:C:/StellarisWare/driverlib\gpio.c ****     //
 951:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_ANALOG);
 1580              		.loc 1 951 0
 1581 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1582 001c 7868     		ldr	r0, [r7, #4]
 1583 001e 1946     		mov	r1, r3
 1584 0020 4FF00102 		mov	r2, #1
 1585 0024 4FF00003 		mov	r3, #0
 1586 0028 FFF7FEFF 		bl	GPIOPadConfigSet
 952:C:/StellarisWare/driverlib\gpio.c **** }
 1587              		.loc 1 952 0
 1588 002c 07F10807 		add	r7, r7, #8
 1589 0030 BD46     		mov	sp, r7
 1590 0032 80BD     		pop	{r7, pc}
 1591              		.cfi_endproc
 1592              	.LFE15:
 1594              		.section	.text.GPIOPinTypeCAN,"ax",%progbits
 1595              		.align	2
 1596              		.global	GPIOPinTypeCAN
 1597              		.thumb
 1598              		.thumb_func
 1600              	GPIOPinTypeCAN:
 1601              	.LFB16:
 953:C:/StellarisWare/driverlib\gpio.c **** 
 954:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 955:C:/StellarisWare/driverlib\gpio.c **** //
 956:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use as a CAN device.
 957:C:/StellarisWare/driverlib\gpio.c **** //!
 958:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
 959:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
 960:C:/StellarisWare/driverlib\gpio.c **** //!
 961:C:/StellarisWare/driverlib\gpio.c **** //! The CAN pins must be properly configured for the CAN peripherals to
 962:C:/StellarisWare/driverlib\gpio.c **** //! function correctly.  This function provides a typical configuration for
 963:C:/StellarisWare/driverlib\gpio.c **** //! those pin(s); other configurations may work as well depending upon the
 964:C:/StellarisWare/driverlib\gpio.c **** //! board setup (for example, using the on-chip pull-ups).
 965:C:/StellarisWare/driverlib\gpio.c **** //!
 966:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
 967:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
 968:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
 969:C:/StellarisWare/driverlib\gpio.c **** //!
 970:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a CAN pin; it only
 971:C:/StellarisWare/driverlib\gpio.c **** //! configures a CAN pin for proper operation. Devices with flexible pin
 972:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
 973:C:/StellarisWare/driverlib\gpio.c **** //!
 974:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
 975:C:/StellarisWare/driverlib\gpio.c **** //
 976:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 977:C:/StellarisWare/driverlib\gpio.c **** void
 978:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeCAN(unsigned long ulPort, unsigned char ucPins)
 979:C:/StellarisWare/driverlib\gpio.c **** {
 1602              		.loc 1 979 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 8
 1605              		@ frame_needed = 1, uses_anonymous_args = 0
 1606 0000 80B5     		push	{r7, lr}
 1607              	.LCFI48:
 1608              		.cfi_def_cfa_offset 8
 1609              		.cfi_offset 14, -4
 1610              		.cfi_offset 7, -8
 1611 0002 82B0     		sub	sp, sp, #8
 1612              	.LCFI49:
 1613              		.cfi_def_cfa_offset 16
 1614 0004 00AF     		add	r7, sp, #0
 1615              	.LCFI50:
 1616              		.cfi_def_cfa_register 7
 1617 0006 7860     		str	r0, [r7, #4]
 1618 0008 0B46     		mov	r3, r1
 1619 000a FB70     		strb	r3, [r7, #3]
 980:C:/StellarisWare/driverlib\gpio.c ****     //
 981:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
 982:C:/StellarisWare/driverlib\gpio.c ****     //
 983:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
 984:C:/StellarisWare/driverlib\gpio.c **** 
 985:C:/StellarisWare/driverlib\gpio.c ****     //
 986:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be inputs.
 987:C:/StellarisWare/driverlib\gpio.c ****     //
 988:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 1620              		.loc 1 988 0
 1621 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1622 000e 7868     		ldr	r0, [r7, #4]
 1623 0010 1946     		mov	r1, r3
 1624 0012 4FF00202 		mov	r2, #2
 1625 0016 FFF7FEFF 		bl	GPIODirModeSet
 989:C:/StellarisWare/driverlib\gpio.c **** 
 990:C:/StellarisWare/driverlib\gpio.c ****     //
 991:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
 992:C:/StellarisWare/driverlib\gpio.c ****     //
 993:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 1626              		.loc 1 993 0
 1627 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1628 001c 7868     		ldr	r0, [r7, #4]
 1629 001e 1946     		mov	r1, r3
 1630 0020 4FF00402 		mov	r2, #4
 1631 0024 4FF00803 		mov	r3, #8
 1632 0028 FFF7FEFF 		bl	GPIOPadConfigSet
 994:C:/StellarisWare/driverlib\gpio.c **** }
 1633              		.loc 1 994 0
 1634 002c 07F10807 		add	r7, r7, #8
 1635 0030 BD46     		mov	sp, r7
 1636 0032 80BD     		pop	{r7, pc}
 1637              		.cfi_endproc
 1638              	.LFE16:
 1640              		.section	.text.GPIOPinTypeComparator,"ax",%progbits
 1641              		.align	2
 1642              		.global	GPIOPinTypeComparator
 1643              		.thumb
 1644              		.thumb_func
 1646              	GPIOPinTypeComparator:
 1647              	.LFB17:
 995:C:/StellarisWare/driverlib\gpio.c **** 
 996:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
 997:C:/StellarisWare/driverlib\gpio.c **** //
 998:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use as an analog comparator input.
 999:C:/StellarisWare/driverlib\gpio.c **** //!
1000:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1001:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1002:C:/StellarisWare/driverlib\gpio.c **** //!
1003:C:/StellarisWare/driverlib\gpio.c **** //! The analog comparator input pins must be properly configured for the analog
1004:C:/StellarisWare/driverlib\gpio.c **** //! comparator to function correctly.  This function provides the proper
1005:C:/StellarisWare/driverlib\gpio.c **** //! configuration for those pin(s).
1006:C:/StellarisWare/driverlib\gpio.c **** //!
1007:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1008:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1009:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1010:C:/StellarisWare/driverlib\gpio.c **** //!
1011:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into an analog comparator
1012:C:/StellarisWare/driverlib\gpio.c **** //! input; it only configures an analog comparator pin for proper operation.
1013:C:/StellarisWare/driverlib\gpio.c **** //! Devices with flexible pin muxing also require a GPIOPinConfigure()
1014:C:/StellarisWare/driverlib\gpio.c **** //! function call.
1015:C:/StellarisWare/driverlib\gpio.c **** //!
1016:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1017:C:/StellarisWare/driverlib\gpio.c **** //
1018:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1019:C:/StellarisWare/driverlib\gpio.c **** void
1020:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeComparator(unsigned long ulPort, unsigned char ucPins)
1021:C:/StellarisWare/driverlib\gpio.c **** {
 1648              		.loc 1 1021 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 8
 1651              		@ frame_needed = 1, uses_anonymous_args = 0
 1652 0000 80B5     		push	{r7, lr}
 1653              	.LCFI51:
 1654              		.cfi_def_cfa_offset 8
 1655              		.cfi_offset 14, -4
 1656              		.cfi_offset 7, -8
 1657 0002 82B0     		sub	sp, sp, #8
 1658              	.LCFI52:
 1659              		.cfi_def_cfa_offset 16
 1660 0004 00AF     		add	r7, sp, #0
 1661              	.LCFI53:
 1662              		.cfi_def_cfa_register 7
 1663 0006 7860     		str	r0, [r7, #4]
 1664 0008 0B46     		mov	r3, r1
 1665 000a FB70     		strb	r3, [r7, #3]
1022:C:/StellarisWare/driverlib\gpio.c ****     //
1023:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1024:C:/StellarisWare/driverlib\gpio.c ****     //
1025:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1026:C:/StellarisWare/driverlib\gpio.c **** 
1027:C:/StellarisWare/driverlib\gpio.c ****     //
1028:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be inputs.
1029:C:/StellarisWare/driverlib\gpio.c ****     //
1030:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_IN);
 1666              		.loc 1 1030 0
 1667 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1668 000e 7868     		ldr	r0, [r7, #4]
 1669 0010 1946     		mov	r1, r3
 1670 0012 4FF00002 		mov	r2, #0
 1671 0016 FFF7FEFF 		bl	GPIODirModeSet
1031:C:/StellarisWare/driverlib\gpio.c **** 
1032:C:/StellarisWare/driverlib\gpio.c ****     //
1033:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for analog operation.
1034:C:/StellarisWare/driverlib\gpio.c ****     //
1035:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_ANALOG);
 1672              		.loc 1 1035 0
 1673 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1674 001c 7868     		ldr	r0, [r7, #4]
 1675 001e 1946     		mov	r1, r3
 1676 0020 4FF00102 		mov	r2, #1
 1677 0024 4FF00003 		mov	r3, #0
 1678 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1036:C:/StellarisWare/driverlib\gpio.c **** }
 1679              		.loc 1 1036 0
 1680 002c 07F10807 		add	r7, r7, #8
 1681 0030 BD46     		mov	sp, r7
 1682 0032 80BD     		pop	{r7, pc}
 1683              		.cfi_endproc
 1684              	.LFE17:
 1686              		.section	.text.GPIOPinTypeEPI,"ax",%progbits
 1687              		.align	2
 1688              		.global	GPIOPinTypeEPI
 1689              		.thumb
 1690              		.thumb_func
 1692              	GPIOPinTypeEPI:
 1693              	.LFB18:
1037:C:/StellarisWare/driverlib\gpio.c **** 
1038:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1039:C:/StellarisWare/driverlib\gpio.c **** //
1040:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the external peripheral interface.
1041:C:/StellarisWare/driverlib\gpio.c **** //!
1042:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1043:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1044:C:/StellarisWare/driverlib\gpio.c **** //!
1045:C:/StellarisWare/driverlib\gpio.c **** //! The external peripheral interface pins must be properly configured for the
1046:C:/StellarisWare/driverlib\gpio.c **** //! external peripheral interface to function correctly.  This function
1047:C:/StellarisWare/driverlib\gpio.c **** //! provides a typical configuration for those pin(s); other configurations may
1048:C:/StellarisWare/driverlib\gpio.c **** //! work as well depending upon the board setup (for example, using the on-chip
1049:C:/StellarisWare/driverlib\gpio.c **** //! pull-ups).
1050:C:/StellarisWare/driverlib\gpio.c **** //!
1051:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1052:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1053:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1054:C:/StellarisWare/driverlib\gpio.c **** //!
1055:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into an external
1056:C:/StellarisWare/driverlib\gpio.c **** //! peripheral interface pin; it only configures an external peripheral
1057:C:/StellarisWare/driverlib\gpio.c **** //! interface pin for proper operation. Devices with flexible pin muxing also
1058:C:/StellarisWare/driverlib\gpio.c **** //! require a GPIOPinConfigure() function call.
1059:C:/StellarisWare/driverlib\gpio.c **** //!
1060:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1061:C:/StellarisWare/driverlib\gpio.c **** //
1062:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1063:C:/StellarisWare/driverlib\gpio.c **** void
1064:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeEPI(unsigned long ulPort, unsigned char ucPins)
1065:C:/StellarisWare/driverlib\gpio.c **** {
 1694              		.loc 1 1065 0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 8
 1697              		@ frame_needed = 1, uses_anonymous_args = 0
 1698 0000 80B5     		push	{r7, lr}
 1699              	.LCFI54:
 1700              		.cfi_def_cfa_offset 8
 1701              		.cfi_offset 14, -4
 1702              		.cfi_offset 7, -8
 1703 0002 82B0     		sub	sp, sp, #8
 1704              	.LCFI55:
 1705              		.cfi_def_cfa_offset 16
 1706 0004 00AF     		add	r7, sp, #0
 1707              	.LCFI56:
 1708              		.cfi_def_cfa_register 7
 1709 0006 7860     		str	r0, [r7, #4]
 1710 0008 0B46     		mov	r3, r1
 1711 000a FB70     		strb	r3, [r7, #3]
1066:C:/StellarisWare/driverlib\gpio.c ****     //
1067:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1068:C:/StellarisWare/driverlib\gpio.c ****     //
1069:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1070:C:/StellarisWare/driverlib\gpio.c **** 
1071:C:/StellarisWare/driverlib\gpio.c ****     //
1072:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1073:C:/StellarisWare/driverlib\gpio.c ****     //
1074:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 1712              		.loc 1 1074 0
 1713 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1714 000e 7868     		ldr	r0, [r7, #4]
 1715 0010 1946     		mov	r1, r3
 1716 0012 4FF00202 		mov	r2, #2
 1717 0016 FFF7FEFF 		bl	GPIODirModeSet
1075:C:/StellarisWare/driverlib\gpio.c **** 
1076:C:/StellarisWare/driverlib\gpio.c ****     //
1077:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1078:C:/StellarisWare/driverlib\gpio.c ****     //
1079:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 1718              		.loc 1 1079 0
 1719 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1720 001c 7868     		ldr	r0, [r7, #4]
 1721 001e 1946     		mov	r1, r3
 1722 0020 4FF00402 		mov	r2, #4
 1723 0024 4FF00803 		mov	r3, #8
 1724 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1080:C:/StellarisWare/driverlib\gpio.c **** }
 1725              		.loc 1 1080 0
 1726 002c 07F10807 		add	r7, r7, #8
 1727 0030 BD46     		mov	sp, r7
 1728 0032 80BD     		pop	{r7, pc}
 1729              		.cfi_endproc
 1730              	.LFE18:
 1732              		.section	.text.GPIOPinTypeEthernetLED,"ax",%progbits
 1733              		.align	2
 1734              		.global	GPIOPinTypeEthernetLED
 1735              		.thumb
 1736              		.thumb_func
 1738              	GPIOPinTypeEthernetLED:
 1739              	.LFB19:
1081:C:/StellarisWare/driverlib\gpio.c **** 
1082:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1083:C:/StellarisWare/driverlib\gpio.c **** //
1084:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the Ethernet peripheral as LED signals.
1085:C:/StellarisWare/driverlib\gpio.c **** //!
1086:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1087:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1088:C:/StellarisWare/driverlib\gpio.c **** //!
1089:C:/StellarisWare/driverlib\gpio.c **** //! The Ethernet peripheral provides two signals that can be used to drive
1090:C:/StellarisWare/driverlib\gpio.c **** //! an LED (e.g. for link status/activity).  This function provides a typical
1091:C:/StellarisWare/driverlib\gpio.c **** //! configuration for the pins.
1092:C:/StellarisWare/driverlib\gpio.c **** //!
1093:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1094:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1095:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1096:C:/StellarisWare/driverlib\gpio.c **** //!
1097:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into an Ethernet LED pin;
1098:C:/StellarisWare/driverlib\gpio.c **** //! it only configures an Ethernet LED pin for proper operation. Devices with
1099:C:/StellarisWare/driverlib\gpio.c **** //! flexible pin muxing also require a GPIOPinConfigure() function call.
1100:C:/StellarisWare/driverlib\gpio.c **** //!
1101:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1102:C:/StellarisWare/driverlib\gpio.c **** //
1103:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1104:C:/StellarisWare/driverlib\gpio.c **** void
1105:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeEthernetLED(unsigned long ulPort, unsigned char ucPins)
1106:C:/StellarisWare/driverlib\gpio.c **** {
 1740              		.loc 1 1106 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 8
 1743              		@ frame_needed = 1, uses_anonymous_args = 0
 1744 0000 80B5     		push	{r7, lr}
 1745              	.LCFI57:
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 14, -4
 1748              		.cfi_offset 7, -8
 1749 0002 82B0     		sub	sp, sp, #8
 1750              	.LCFI58:
 1751              		.cfi_def_cfa_offset 16
 1752 0004 00AF     		add	r7, sp, #0
 1753              	.LCFI59:
 1754              		.cfi_def_cfa_register 7
 1755 0006 7860     		str	r0, [r7, #4]
 1756 0008 0B46     		mov	r3, r1
 1757 000a FB70     		strb	r3, [r7, #3]
1107:C:/StellarisWare/driverlib\gpio.c ****     //
1108:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1109:C:/StellarisWare/driverlib\gpio.c ****     //
1110:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1111:C:/StellarisWare/driverlib\gpio.c **** 
1112:C:/StellarisWare/driverlib\gpio.c ****     //
1113:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1114:C:/StellarisWare/driverlib\gpio.c ****     //
1115:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 1758              		.loc 1 1115 0
 1759 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1760 000e 7868     		ldr	r0, [r7, #4]
 1761 0010 1946     		mov	r1, r3
 1762 0012 4FF00202 		mov	r2, #2
 1763 0016 FFF7FEFF 		bl	GPIODirModeSet
1116:C:/StellarisWare/driverlib\gpio.c **** 
1117:C:/StellarisWare/driverlib\gpio.c ****     //
1118:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1119:C:/StellarisWare/driverlib\gpio.c ****     //
1120:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 1764              		.loc 1 1120 0
 1765 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1766 001c 7868     		ldr	r0, [r7, #4]
 1767 001e 1946     		mov	r1, r3
 1768 0020 4FF00402 		mov	r2, #4
 1769 0024 4FF00803 		mov	r3, #8
 1770 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1121:C:/StellarisWare/driverlib\gpio.c **** }
 1771              		.loc 1 1121 0
 1772 002c 07F10807 		add	r7, r7, #8
 1773 0030 BD46     		mov	sp, r7
 1774 0032 80BD     		pop	{r7, pc}
 1775              		.cfi_endproc
 1776              	.LFE19:
 1778              		.section	.text.GPIOPinTypeEthernetMII,"ax",%progbits
 1779              		.align	2
 1780              		.global	GPIOPinTypeEthernetMII
 1781              		.thumb
 1782              		.thumb_func
 1784              	GPIOPinTypeEthernetMII:
 1785              	.LFB20:
1122:C:/StellarisWare/driverlib\gpio.c **** 
1123:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1124:C:/StellarisWare/driverlib\gpio.c **** //
1125:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the Ethernet peripheral as MII signals.
1126:C:/StellarisWare/driverlib\gpio.c **** //!
1127:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1128:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1129:C:/StellarisWare/driverlib\gpio.c **** //!
1130:C:/StellarisWare/driverlib\gpio.c **** //! The Ethernet peripheral on some parts provides a set of MII signals that
1131:C:/StellarisWare/driverlib\gpio.c **** //! are used to connect to an external PHY.  This function provides a typical
1132:C:/StellarisWare/driverlib\gpio.c **** //! configuration for the pins.
1133:C:/StellarisWare/driverlib\gpio.c **** //!
1134:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1135:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1136:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1137:C:/StellarisWare/driverlib\gpio.c **** //!
1138:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into an Ethernet MII pin;
1139:C:/StellarisWare/driverlib\gpio.c **** //! it only configures an Ethernet MII pin for proper operation. Devices with
1140:C:/StellarisWare/driverlib\gpio.c **** //! flexible pin muxing also require a GPIOPinConfigure() function call.
1141:C:/StellarisWare/driverlib\gpio.c **** //!
1142:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1143:C:/StellarisWare/driverlib\gpio.c **** //
1144:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1145:C:/StellarisWare/driverlib\gpio.c **** void
1146:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeEthernetMII(unsigned long ulPort, unsigned char ucPins)
1147:C:/StellarisWare/driverlib\gpio.c **** {
 1786              		.loc 1 1147 0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 8
 1789              		@ frame_needed = 1, uses_anonymous_args = 0
 1790 0000 80B5     		push	{r7, lr}
 1791              	.LCFI60:
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 14, -4
 1794              		.cfi_offset 7, -8
 1795 0002 82B0     		sub	sp, sp, #8
 1796              	.LCFI61:
 1797              		.cfi_def_cfa_offset 16
 1798 0004 00AF     		add	r7, sp, #0
 1799              	.LCFI62:
 1800              		.cfi_def_cfa_register 7
 1801 0006 7860     		str	r0, [r7, #4]
 1802 0008 0B46     		mov	r3, r1
 1803 000a FB70     		strb	r3, [r7, #3]
1148:C:/StellarisWare/driverlib\gpio.c ****     //
1149:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1150:C:/StellarisWare/driverlib\gpio.c ****     //
1151:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1152:C:/StellarisWare/driverlib\gpio.c **** 
1153:C:/StellarisWare/driverlib\gpio.c ****     //
1154:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1155:C:/StellarisWare/driverlib\gpio.c ****     //
1156:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 1804              		.loc 1 1156 0
 1805 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1806 000e 7868     		ldr	r0, [r7, #4]
 1807 0010 1946     		mov	r1, r3
 1808 0012 4FF00202 		mov	r2, #2
 1809 0016 FFF7FEFF 		bl	GPIODirModeSet
1157:C:/StellarisWare/driverlib\gpio.c **** 
1158:C:/StellarisWare/driverlib\gpio.c ****     //
1159:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1160:C:/StellarisWare/driverlib\gpio.c ****     //
1161:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 1810              		.loc 1 1161 0
 1811 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1812 001c 7868     		ldr	r0, [r7, #4]
 1813 001e 1946     		mov	r1, r3
 1814 0020 4FF00402 		mov	r2, #4
 1815 0024 4FF00803 		mov	r3, #8
 1816 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1162:C:/StellarisWare/driverlib\gpio.c **** }
 1817              		.loc 1 1162 0
 1818 002c 07F10807 		add	r7, r7, #8
 1819 0030 BD46     		mov	sp, r7
 1820 0032 80BD     		pop	{r7, pc}
 1821              		.cfi_endproc
 1822              	.LFE20:
 1824              		.section	.text.GPIOPinTypeFan,"ax",%progbits
 1825              		.align	2
 1826              		.global	GPIOPinTypeFan
 1827              		.thumb
 1828              		.thumb_func
 1830              	GPIOPinTypeFan:
 1831              	.LFB21:
1163:C:/StellarisWare/driverlib\gpio.c **** 
1164:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1165:C:/StellarisWare/driverlib\gpio.c **** //
1166:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the fan module.
1167:C:/StellarisWare/driverlib\gpio.c **** //!
1168:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1169:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1170:C:/StellarisWare/driverlib\gpio.c **** //!
1171:C:/StellarisWare/driverlib\gpio.c **** //! The fan pins must be properly configured for the fan controller to function
1172:C:/StellarisWare/driverlib\gpio.c **** //! correctly.  This function provides a typical configuration for those
1173:C:/StellarisWare/driverlib\gpio.c **** //! pin(s); other configurations may work as well depending upon the board
1174:C:/StellarisWare/driverlib\gpio.c **** //! setup (for example, using the on-chip pull-ups).
1175:C:/StellarisWare/driverlib\gpio.c **** //!
1176:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1177:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1178:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1179:C:/StellarisWare/driverlib\gpio.c **** //!
1180:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a fan pin; it only
1181:C:/StellarisWare/driverlib\gpio.c **** //! configures a fan pin for proper operation. Devices with flexible pin
1182:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
1183:C:/StellarisWare/driverlib\gpio.c **** //!
1184:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1185:C:/StellarisWare/driverlib\gpio.c **** //
1186:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1187:C:/StellarisWare/driverlib\gpio.c **** void
1188:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeFan(unsigned long ulPort, unsigned char ucPins)
1189:C:/StellarisWare/driverlib\gpio.c **** {
 1832              		.loc 1 1189 0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 8
 1835              		@ frame_needed = 1, uses_anonymous_args = 0
 1836 0000 80B5     		push	{r7, lr}
 1837              	.LCFI63:
 1838              		.cfi_def_cfa_offset 8
 1839              		.cfi_offset 14, -4
 1840              		.cfi_offset 7, -8
 1841 0002 82B0     		sub	sp, sp, #8
 1842              	.LCFI64:
 1843              		.cfi_def_cfa_offset 16
 1844 0004 00AF     		add	r7, sp, #0
 1845              	.LCFI65:
 1846              		.cfi_def_cfa_register 7
 1847 0006 7860     		str	r0, [r7, #4]
 1848 0008 0B46     		mov	r3, r1
 1849 000a FB70     		strb	r3, [r7, #3]
1190:C:/StellarisWare/driverlib\gpio.c ****     //
1191:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1192:C:/StellarisWare/driverlib\gpio.c ****     //
1193:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1194:C:/StellarisWare/driverlib\gpio.c **** 
1195:C:/StellarisWare/driverlib\gpio.c ****     //
1196:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1197:C:/StellarisWare/driverlib\gpio.c ****     //
1198:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 1850              		.loc 1 1198 0
 1851 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1852 000e 7868     		ldr	r0, [r7, #4]
 1853 0010 1946     		mov	r1, r3
 1854 0012 4FF00202 		mov	r2, #2
 1855 0016 FFF7FEFF 		bl	GPIODirModeSet
1199:C:/StellarisWare/driverlib\gpio.c **** 
1200:C:/StellarisWare/driverlib\gpio.c ****     //
1201:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1202:C:/StellarisWare/driverlib\gpio.c ****     //
1203:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 1856              		.loc 1 1203 0
 1857 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1858 001c 7868     		ldr	r0, [r7, #4]
 1859 001e 1946     		mov	r1, r3
 1860 0020 4FF00102 		mov	r2, #1
 1861 0024 4FF00803 		mov	r3, #8
 1862 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1204:C:/StellarisWare/driverlib\gpio.c **** }
 1863              		.loc 1 1204 0
 1864 002c 07F10807 		add	r7, r7, #8
 1865 0030 BD46     		mov	sp, r7
 1866 0032 80BD     		pop	{r7, pc}
 1867              		.cfi_endproc
 1868              	.LFE21:
 1870              		.section	.text.GPIOPinTypeGPIOInput,"ax",%progbits
 1871              		.align	2
 1872              		.global	GPIOPinTypeGPIOInput
 1873              		.thumb
 1874              		.thumb_func
 1876              	GPIOPinTypeGPIOInput:
 1877              	.LFB22:
1205:C:/StellarisWare/driverlib\gpio.c **** 
1206:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1207:C:/StellarisWare/driverlib\gpio.c **** //
1208:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use as GPIO inputs.
1209:C:/StellarisWare/driverlib\gpio.c **** //!
1210:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1211:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1212:C:/StellarisWare/driverlib\gpio.c **** //!
1213:C:/StellarisWare/driverlib\gpio.c **** //! The GPIO pins must be properly configured in order to function correctly as
1214:C:/StellarisWare/driverlib\gpio.c **** //! GPIO inputs; this is especially true of Fury-class devices where the
1215:C:/StellarisWare/driverlib\gpio.c **** //! digital input enable is turned off by default.  This function provides the
1216:C:/StellarisWare/driverlib\gpio.c **** //! proper configuration for those pin(s).
1217:C:/StellarisWare/driverlib\gpio.c **** //!
1218:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1219:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1220:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1221:C:/StellarisWare/driverlib\gpio.c **** //!
1222:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1223:C:/StellarisWare/driverlib\gpio.c **** //
1224:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1225:C:/StellarisWare/driverlib\gpio.c **** void
1226:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeGPIOInput(unsigned long ulPort, unsigned char ucPins)
1227:C:/StellarisWare/driverlib\gpio.c **** {
 1878              		.loc 1 1227 0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 8
 1881              		@ frame_needed = 1, uses_anonymous_args = 0
 1882 0000 80B5     		push	{r7, lr}
 1883              	.LCFI66:
 1884              		.cfi_def_cfa_offset 8
 1885              		.cfi_offset 14, -4
 1886              		.cfi_offset 7, -8
 1887 0002 82B0     		sub	sp, sp, #8
 1888              	.LCFI67:
 1889              		.cfi_def_cfa_offset 16
 1890 0004 00AF     		add	r7, sp, #0
 1891              	.LCFI68:
 1892              		.cfi_def_cfa_register 7
 1893 0006 7860     		str	r0, [r7, #4]
 1894 0008 0B46     		mov	r3, r1
 1895 000a FB70     		strb	r3, [r7, #3]
1228:C:/StellarisWare/driverlib\gpio.c ****     //
1229:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1230:C:/StellarisWare/driverlib\gpio.c ****     //
1231:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1232:C:/StellarisWare/driverlib\gpio.c **** 
1233:C:/StellarisWare/driverlib\gpio.c ****     //
1234:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be inputs.
1235:C:/StellarisWare/driverlib\gpio.c ****     //
1236:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_IN);
 1896              		.loc 1 1236 0
 1897 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1898 000e 7868     		ldr	r0, [r7, #4]
 1899 0010 1946     		mov	r1, r3
 1900 0012 4FF00002 		mov	r2, #0
 1901 0016 FFF7FEFF 		bl	GPIODirModeSet
1237:C:/StellarisWare/driverlib\gpio.c **** 
1238:C:/StellarisWare/driverlib\gpio.c ****     //
1239:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1240:C:/StellarisWare/driverlib\gpio.c ****     //
1241:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 1902              		.loc 1 1241 0
 1903 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1904 001c 7868     		ldr	r0, [r7, #4]
 1905 001e 1946     		mov	r1, r3
 1906 0020 4FF00102 		mov	r2, #1
 1907 0024 4FF00803 		mov	r3, #8
 1908 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1242:C:/StellarisWare/driverlib\gpio.c **** }
 1909              		.loc 1 1242 0
 1910 002c 07F10807 		add	r7, r7, #8
 1911 0030 BD46     		mov	sp, r7
 1912 0032 80BD     		pop	{r7, pc}
 1913              		.cfi_endproc
 1914              	.LFE22:
 1916              		.section	.text.GPIOPinTypeGPIOOutput,"ax",%progbits
 1917              		.align	2
 1918              		.global	GPIOPinTypeGPIOOutput
 1919              		.thumb
 1920              		.thumb_func
 1922              	GPIOPinTypeGPIOOutput:
 1923              	.LFB23:
1243:C:/StellarisWare/driverlib\gpio.c **** 
1244:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1245:C:/StellarisWare/driverlib\gpio.c **** //
1246:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use as GPIO outputs.
1247:C:/StellarisWare/driverlib\gpio.c **** //!
1248:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1249:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1250:C:/StellarisWare/driverlib\gpio.c **** //!
1251:C:/StellarisWare/driverlib\gpio.c **** //! The GPIO pins must be properly configured in order to function correctly as
1252:C:/StellarisWare/driverlib\gpio.c **** //! GPIO outputs; this is especially true of Fury-class devices where the
1253:C:/StellarisWare/driverlib\gpio.c **** //! digital input enable is turned off by default.  This function provides the
1254:C:/StellarisWare/driverlib\gpio.c **** //! proper configuration for those pin(s).
1255:C:/StellarisWare/driverlib\gpio.c **** //!
1256:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1257:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1258:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1259:C:/StellarisWare/driverlib\gpio.c **** //!
1260:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1261:C:/StellarisWare/driverlib\gpio.c **** //
1262:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1263:C:/StellarisWare/driverlib\gpio.c **** void
1264:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeGPIOOutput(unsigned long ulPort, unsigned char ucPins)
1265:C:/StellarisWare/driverlib\gpio.c **** {
 1924              		.loc 1 1265 0
 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 8
 1927              		@ frame_needed = 1, uses_anonymous_args = 0
 1928 0000 80B5     		push	{r7, lr}
 1929              	.LCFI69:
 1930              		.cfi_def_cfa_offset 8
 1931              		.cfi_offset 14, -4
 1932              		.cfi_offset 7, -8
 1933 0002 82B0     		sub	sp, sp, #8
 1934              	.LCFI70:
 1935              		.cfi_def_cfa_offset 16
 1936 0004 00AF     		add	r7, sp, #0
 1937              	.LCFI71:
 1938              		.cfi_def_cfa_register 7
 1939 0006 7860     		str	r0, [r7, #4]
 1940 0008 0B46     		mov	r3, r1
 1941 000a FB70     		strb	r3, [r7, #3]
1266:C:/StellarisWare/driverlib\gpio.c ****     //
1267:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1268:C:/StellarisWare/driverlib\gpio.c ****     //
1269:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1270:C:/StellarisWare/driverlib\gpio.c **** 
1271:C:/StellarisWare/driverlib\gpio.c ****     //
1272:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1273:C:/StellarisWare/driverlib\gpio.c ****     //
1274:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 1942              		.loc 1 1274 0
 1943 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1944 000e 7868     		ldr	r0, [r7, #4]
 1945 0010 1946     		mov	r1, r3
 1946 0012 4FF00102 		mov	r2, #1
 1947 0016 4FF00803 		mov	r3, #8
 1948 001a FFF7FEFF 		bl	GPIOPadConfigSet
1275:C:/StellarisWare/driverlib\gpio.c **** 
1276:C:/StellarisWare/driverlib\gpio.c ****     //
1277:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be outputs.
1278:C:/StellarisWare/driverlib\gpio.c ****     //
1279:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_OUT);
 1949              		.loc 1 1279 0
 1950 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1951 0020 7868     		ldr	r0, [r7, #4]
 1952 0022 1946     		mov	r1, r3
 1953 0024 4FF00102 		mov	r2, #1
 1954 0028 FFF7FEFF 		bl	GPIODirModeSet
1280:C:/StellarisWare/driverlib\gpio.c **** }
 1955              		.loc 1 1280 0
 1956 002c 07F10807 		add	r7, r7, #8
 1957 0030 BD46     		mov	sp, r7
 1958 0032 80BD     		pop	{r7, pc}
 1959              		.cfi_endproc
 1960              	.LFE23:
 1962              		.section	.text.GPIOPinTypeGPIOOutputOD,"ax",%progbits
 1963              		.align	2
 1964              		.global	GPIOPinTypeGPIOOutputOD
 1965              		.thumb
 1966              		.thumb_func
 1968              	GPIOPinTypeGPIOOutputOD:
 1969              	.LFB24:
1281:C:/StellarisWare/driverlib\gpio.c **** 
1282:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1283:C:/StellarisWare/driverlib\gpio.c **** //
1284:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use as GPIO open drain outputs.
1285:C:/StellarisWare/driverlib\gpio.c **** //!
1286:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1287:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1288:C:/StellarisWare/driverlib\gpio.c **** //!
1289:C:/StellarisWare/driverlib\gpio.c **** //! The GPIO pins must be properly configured in order to function correctly as
1290:C:/StellarisWare/driverlib\gpio.c **** //! GPIO outputs; this is especially true of Fury-class devices where the
1291:C:/StellarisWare/driverlib\gpio.c **** //! digital input enable is turned off by default.  This function provides the
1292:C:/StellarisWare/driverlib\gpio.c **** //! proper configuration for those pin(s).
1293:C:/StellarisWare/driverlib\gpio.c **** //!
1294:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1295:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1296:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1297:C:/StellarisWare/driverlib\gpio.c **** //!
1298:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1299:C:/StellarisWare/driverlib\gpio.c **** //
1300:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1301:C:/StellarisWare/driverlib\gpio.c **** void
1302:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeGPIOOutputOD(unsigned long ulPort, unsigned char ucPins)
1303:C:/StellarisWare/driverlib\gpio.c **** {
 1970              		.loc 1 1303 0
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 8
 1973              		@ frame_needed = 1, uses_anonymous_args = 0
 1974 0000 80B5     		push	{r7, lr}
 1975              	.LCFI72:
 1976              		.cfi_def_cfa_offset 8
 1977              		.cfi_offset 14, -4
 1978              		.cfi_offset 7, -8
 1979 0002 82B0     		sub	sp, sp, #8
 1980              	.LCFI73:
 1981              		.cfi_def_cfa_offset 16
 1982 0004 00AF     		add	r7, sp, #0
 1983              	.LCFI74:
 1984              		.cfi_def_cfa_register 7
 1985 0006 7860     		str	r0, [r7, #4]
 1986 0008 0B46     		mov	r3, r1
 1987 000a FB70     		strb	r3, [r7, #3]
1304:C:/StellarisWare/driverlib\gpio.c ****     //
1305:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1306:C:/StellarisWare/driverlib\gpio.c ****     //
1307:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1308:C:/StellarisWare/driverlib\gpio.c **** 
1309:C:/StellarisWare/driverlib\gpio.c ****     //
1310:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1311:C:/StellarisWare/driverlib\gpio.c ****     //
1312:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_OD);
 1988              		.loc 1 1312 0
 1989 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1990 000e 7868     		ldr	r0, [r7, #4]
 1991 0010 1946     		mov	r1, r3
 1992 0012 4FF00102 		mov	r2, #1
 1993 0016 4FF00903 		mov	r3, #9
 1994 001a FFF7FEFF 		bl	GPIOPadConfigSet
1313:C:/StellarisWare/driverlib\gpio.c **** 
1314:C:/StellarisWare/driverlib\gpio.c ****     //
1315:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be outputs.
1316:C:/StellarisWare/driverlib\gpio.c ****     //
1317:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_OUT);
 1995              		.loc 1 1317 0
 1996 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1997 0020 7868     		ldr	r0, [r7, #4]
 1998 0022 1946     		mov	r1, r3
 1999 0024 4FF00102 		mov	r2, #1
 2000 0028 FFF7FEFF 		bl	GPIODirModeSet
1318:C:/StellarisWare/driverlib\gpio.c **** }
 2001              		.loc 1 1318 0
 2002 002c 07F10807 		add	r7, r7, #8
 2003 0030 BD46     		mov	sp, r7
 2004 0032 80BD     		pop	{r7, pc}
 2005              		.cfi_endproc
 2006              	.LFE24:
 2008              		.section	.text.GPIOPinTypeI2C,"ax",%progbits
 2009              		.align	2
 2010              		.global	GPIOPinTypeI2C
 2011              		.thumb
 2012              		.thumb_func
 2014              	GPIOPinTypeI2C:
 2015              	.LFB25:
1319:C:/StellarisWare/driverlib\gpio.c **** 
1320:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1321:C:/StellarisWare/driverlib\gpio.c **** //
1322:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the I2C peripheral.
1323:C:/StellarisWare/driverlib\gpio.c **** //!
1324:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1325:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1326:C:/StellarisWare/driverlib\gpio.c **** //!
1327:C:/StellarisWare/driverlib\gpio.c **** //! The I2C pins must be properly configured for the I2C peripheral to function
1328:C:/StellarisWare/driverlib\gpio.c **** //! correctly.  This function provides the proper configuration for those
1329:C:/StellarisWare/driverlib\gpio.c **** //! pin(s).
1330:C:/StellarisWare/driverlib\gpio.c **** //!
1331:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1332:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1333:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1334:C:/StellarisWare/driverlib\gpio.c **** //!
1335:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into an I2C pin; it
1336:C:/StellarisWare/driverlib\gpio.c **** //! only configures an I2C pin for proper operation. Devices with flexible pin
1337:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
1338:C:/StellarisWare/driverlib\gpio.c **** //!
1339:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1340:C:/StellarisWare/driverlib\gpio.c **** //
1341:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1342:C:/StellarisWare/driverlib\gpio.c **** void
1343:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeI2C(unsigned long ulPort, unsigned char ucPins)
1344:C:/StellarisWare/driverlib\gpio.c **** {
 2016              		.loc 1 1344 0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 8
 2019              		@ frame_needed = 1, uses_anonymous_args = 0
 2020 0000 80B5     		push	{r7, lr}
 2021              	.LCFI75:
 2022              		.cfi_def_cfa_offset 8
 2023              		.cfi_offset 14, -4
 2024              		.cfi_offset 7, -8
 2025 0002 82B0     		sub	sp, sp, #8
 2026              	.LCFI76:
 2027              		.cfi_def_cfa_offset 16
 2028 0004 00AF     		add	r7, sp, #0
 2029              	.LCFI77:
 2030              		.cfi_def_cfa_register 7
 2031 0006 7860     		str	r0, [r7, #4]
 2032 0008 0B46     		mov	r3, r1
 2033 000a FB70     		strb	r3, [r7, #3]
1345:C:/StellarisWare/driverlib\gpio.c ****     //
1346:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1347:C:/StellarisWare/driverlib\gpio.c ****     //
1348:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1349:C:/StellarisWare/driverlib\gpio.c **** 
1350:C:/StellarisWare/driverlib\gpio.c ****     //
1351:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1352:C:/StellarisWare/driverlib\gpio.c ****     //
1353:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2034              		.loc 1 1353 0
 2035 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2036 000e 7868     		ldr	r0, [r7, #4]
 2037 0010 1946     		mov	r1, r3
 2038 0012 4FF00202 		mov	r2, #2
 2039 0016 FFF7FEFF 		bl	GPIODirModeSet
1354:C:/StellarisWare/driverlib\gpio.c **** 
1355:C:/StellarisWare/driverlib\gpio.c ****     //
1356:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for open-drain operation with a weak pull-up.
1357:C:/StellarisWare/driverlib\gpio.c ****     //
1358:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_OD_WPU);
 2040              		.loc 1 1358 0
 2041 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2042 001c 7868     		ldr	r0, [r7, #4]
 2043 001e 1946     		mov	r1, r3
 2044 0020 4FF00102 		mov	r2, #1
 2045 0024 4FF00B03 		mov	r3, #11
 2046 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1359:C:/StellarisWare/driverlib\gpio.c **** }
 2047              		.loc 1 1359 0
 2048 002c 07F10807 		add	r7, r7, #8
 2049 0030 BD46     		mov	sp, r7
 2050 0032 80BD     		pop	{r7, pc}
 2051              		.cfi_endproc
 2052              	.LFE25:
 2054              		.section	.text.GPIOPinTypeI2CSCL,"ax",%progbits
 2055              		.align	2
 2056              		.global	GPIOPinTypeI2CSCL
 2057              		.thumb
 2058              		.thumb_func
 2060              	GPIOPinTypeI2CSCL:
 2061              	.LFB26:
1360:C:/StellarisWare/driverlib\gpio.c **** 
1361:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1362:C:/StellarisWare/driverlib\gpio.c **** //
1363:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use as SCL by the I2C peripheral.
1364:C:/StellarisWare/driverlib\gpio.c **** //!
1365:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1366:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1367:C:/StellarisWare/driverlib\gpio.c **** //!
1368:C:/StellarisWare/driverlib\gpio.c **** //! The I2C pins must be properly configured for the I2C peripheral to function
1369:C:/StellarisWare/driverlib\gpio.c **** //! correctly.  This function provides the proper configuration for the SCL
1370:C:/StellarisWare/driverlib\gpio.c **** //! pin(s).
1371:C:/StellarisWare/driverlib\gpio.c **** //!
1372:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1373:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1374:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1375:C:/StellarisWare/driverlib\gpio.c **** //!
1376:C:/StellarisWare/driverlib\gpio.c **** //! \note This function should only be used for Blizzard-class devices. It
1377:C:/StellarisWare/driverlib\gpio.c **** //! cannot be used to turn any pin into an I2C SCL pin; it only configures an
1378:C:/StellarisWare/driverlib\gpio.c **** //! I2C SCL pin for proper operation. Devices with flexible pin muxing also
1379:C:/StellarisWare/driverlib\gpio.c **** //! require a GPIOPinConfigure() function call.
1380:C:/StellarisWare/driverlib\gpio.c **** //!
1381:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1382:C:/StellarisWare/driverlib\gpio.c **** //
1383:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1384:C:/StellarisWare/driverlib\gpio.c **** void
1385:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeI2CSCL(unsigned long ulPort, unsigned char ucPins)
1386:C:/StellarisWare/driverlib\gpio.c **** {
 2062              		.loc 1 1386 0
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 8
 2065              		@ frame_needed = 1, uses_anonymous_args = 0
 2066 0000 80B5     		push	{r7, lr}
 2067              	.LCFI78:
 2068              		.cfi_def_cfa_offset 8
 2069              		.cfi_offset 14, -4
 2070              		.cfi_offset 7, -8
 2071 0002 82B0     		sub	sp, sp, #8
 2072              	.LCFI79:
 2073              		.cfi_def_cfa_offset 16
 2074 0004 00AF     		add	r7, sp, #0
 2075              	.LCFI80:
 2076              		.cfi_def_cfa_register 7
 2077 0006 7860     		str	r0, [r7, #4]
 2078 0008 0B46     		mov	r3, r1
 2079 000a FB70     		strb	r3, [r7, #3]
1387:C:/StellarisWare/driverlib\gpio.c ****     //
1388:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1389:C:/StellarisWare/driverlib\gpio.c ****     //
1390:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1391:C:/StellarisWare/driverlib\gpio.c **** 
1392:C:/StellarisWare/driverlib\gpio.c ****     //
1393:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1394:C:/StellarisWare/driverlib\gpio.c ****     //
1395:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2080              		.loc 1 1395 0
 2081 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2082 000e 7868     		ldr	r0, [r7, #4]
 2083 0010 1946     		mov	r1, r3
 2084 0012 4FF00202 		mov	r2, #2
 2085 0016 FFF7FEFF 		bl	GPIODirModeSet
1396:C:/StellarisWare/driverlib\gpio.c **** 
1397:C:/StellarisWare/driverlib\gpio.c ****     //
1398:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for open-drain operation with a weak pull-up.
1399:C:/StellarisWare/driverlib\gpio.c ****     //
1400:C:/StellarisWare/driverlib\gpio.c ****     if(CLASS_IS_BLIZZARD)
 2086              		.loc 1 1400 0
 2087 001a 4FF46043 		mov	r3, #57344
 2088 001e C4F20F03 		movt	r3, 16399
 2089 0022 1A68     		ldr	r2, [r3, #0]
 2090 0024 4FF00003 		mov	r3, #0
 2091 0028 C7F2FF03 		movt	r3, 28927
 2092 002c 1340     		ands	r3, r3, r2
 2093 002e 4FF00002 		mov	r2, #0
 2094 0032 C1F20502 		movt	r2, 4101
 2095 0036 9342     		cmp	r3, r2
 2096 0038 09D1     		bne	.L101
1401:C:/StellarisWare/driverlib\gpio.c ****     {
1402:C:/StellarisWare/driverlib\gpio.c ****         GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 2097              		.loc 1 1402 0
 2098 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2099 003c 7868     		ldr	r0, [r7, #4]
 2100 003e 1946     		mov	r1, r3
 2101 0040 4FF00102 		mov	r2, #1
 2102 0044 4FF00803 		mov	r3, #8
 2103 0048 FFF7FEFF 		bl	GPIOPadConfigSet
 2104 004c 08E0     		b	.L100
 2105              	.L101:
1403:C:/StellarisWare/driverlib\gpio.c ****     }
1404:C:/StellarisWare/driverlib\gpio.c ****     else
1405:C:/StellarisWare/driverlib\gpio.c ****     {
1406:C:/StellarisWare/driverlib\gpio.c ****         GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_OD);
 2106              		.loc 1 1406 0
 2107 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2108 0050 7868     		ldr	r0, [r7, #4]
 2109 0052 1946     		mov	r1, r3
 2110 0054 4FF00102 		mov	r2, #1
 2111 0058 4FF00903 		mov	r3, #9
 2112 005c FFF7FEFF 		bl	GPIOPadConfigSet
 2113              	.L100:
1407:C:/StellarisWare/driverlib\gpio.c ****     }
1408:C:/StellarisWare/driverlib\gpio.c **** }
 2114              		.loc 1 1408 0
 2115 0060 07F10807 		add	r7, r7, #8
 2116 0064 BD46     		mov	sp, r7
 2117 0066 80BD     		pop	{r7, pc}
 2118              		.cfi_endproc
 2119              	.LFE26:
 2121              		.section	.text.GPIOPinTypeI2S,"ax",%progbits
 2122              		.align	2
 2123              		.global	GPIOPinTypeI2S
 2124              		.thumb
 2125              		.thumb_func
 2127              	GPIOPinTypeI2S:
 2128              	.LFB27:
1409:C:/StellarisWare/driverlib\gpio.c **** 
1410:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1411:C:/StellarisWare/driverlib\gpio.c **** //
1412:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the I2S peripheral.
1413:C:/StellarisWare/driverlib\gpio.c **** //!
1414:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1415:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1416:C:/StellarisWare/driverlib\gpio.c **** //!
1417:C:/StellarisWare/driverlib\gpio.c **** //! Some I2S pins must be properly configured for the I2S peripheral to
1418:C:/StellarisWare/driverlib\gpio.c **** //! function correctly.  This function provides a typical configuration for
1419:C:/StellarisWare/driverlib\gpio.c **** //! the digital I2S pin(s); other configurations may work as well depending
1420:C:/StellarisWare/driverlib\gpio.c **** //! upon the board setup (for example, using the on-chip pull-ups).
1421:C:/StellarisWare/driverlib\gpio.c **** //!
1422:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1423:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1424:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1425:C:/StellarisWare/driverlib\gpio.c **** //!
1426:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a I2S pin; it only
1427:C:/StellarisWare/driverlib\gpio.c **** //! configures a I2S pin for proper operation. Devices with flexible pin
1428:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
1429:C:/StellarisWare/driverlib\gpio.c **** //!
1430:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1431:C:/StellarisWare/driverlib\gpio.c **** //
1432:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1433:C:/StellarisWare/driverlib\gpio.c **** void
1434:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeI2S(unsigned long ulPort, unsigned char ucPins)
1435:C:/StellarisWare/driverlib\gpio.c **** {
 2129              		.loc 1 1435 0
 2130              		.cfi_startproc
 2131              		@ args = 0, pretend = 0, frame = 8
 2132              		@ frame_needed = 1, uses_anonymous_args = 0
 2133 0000 80B5     		push	{r7, lr}
 2134              	.LCFI81:
 2135              		.cfi_def_cfa_offset 8
 2136              		.cfi_offset 14, -4
 2137              		.cfi_offset 7, -8
 2138 0002 82B0     		sub	sp, sp, #8
 2139              	.LCFI82:
 2140              		.cfi_def_cfa_offset 16
 2141 0004 00AF     		add	r7, sp, #0
 2142              	.LCFI83:
 2143              		.cfi_def_cfa_register 7
 2144 0006 7860     		str	r0, [r7, #4]
 2145 0008 0B46     		mov	r3, r1
 2146 000a FB70     		strb	r3, [r7, #3]
1436:C:/StellarisWare/driverlib\gpio.c ****     //
1437:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1438:C:/StellarisWare/driverlib\gpio.c ****     //
1439:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1440:C:/StellarisWare/driverlib\gpio.c **** 
1441:C:/StellarisWare/driverlib\gpio.c ****     //
1442:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1443:C:/StellarisWare/driverlib\gpio.c ****     //
1444:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2147              		.loc 1 1444 0
 2148 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2149 000e 7868     		ldr	r0, [r7, #4]
 2150 0010 1946     		mov	r1, r3
 2151 0012 4FF00202 		mov	r2, #2
 2152 0016 FFF7FEFF 		bl	GPIODirModeSet
1445:C:/StellarisWare/driverlib\gpio.c **** 
1446:C:/StellarisWare/driverlib\gpio.c ****     //
1447:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1448:C:/StellarisWare/driverlib\gpio.c ****     //
1449:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 2153              		.loc 1 1449 0
 2154 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2155 001c 7868     		ldr	r0, [r7, #4]
 2156 001e 1946     		mov	r1, r3
 2157 0020 4FF00102 		mov	r2, #1
 2158 0024 4FF00803 		mov	r3, #8
 2159 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1450:C:/StellarisWare/driverlib\gpio.c **** }
 2160              		.loc 1 1450 0
 2161 002c 07F10807 		add	r7, r7, #8
 2162 0030 BD46     		mov	sp, r7
 2163 0032 80BD     		pop	{r7, pc}
 2164              		.cfi_endproc
 2165              	.LFE27:
 2167              		.section	.text.GPIOPinTypeLPC,"ax",%progbits
 2168              		.align	2
 2169              		.global	GPIOPinTypeLPC
 2170              		.thumb
 2171              		.thumb_func
 2173              	GPIOPinTypeLPC:
 2174              	.LFB28:
1451:C:/StellarisWare/driverlib\gpio.c **** 
1452:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1453:C:/StellarisWare/driverlib\gpio.c **** //
1454:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the LPC module.
1455:C:/StellarisWare/driverlib\gpio.c **** //!
1456:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1457:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1458:C:/StellarisWare/driverlib\gpio.c **** //!
1459:C:/StellarisWare/driverlib\gpio.c **** //! The LPC pins must be properly configured for the LPC module to function
1460:C:/StellarisWare/driverlib\gpio.c **** //! correctly.  This function provides a typical configuration for those
1461:C:/StellarisWare/driverlib\gpio.c **** //! pin(s); other configurations may work as well depending upon the board
1462:C:/StellarisWare/driverlib\gpio.c **** //! setup (for example, using the on-chip pull-ups).
1463:C:/StellarisWare/driverlib\gpio.c **** //!
1464:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1465:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1466:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1467:C:/StellarisWare/driverlib\gpio.c **** //!
1468:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a LPC pin; it only
1469:C:/StellarisWare/driverlib\gpio.c **** //! configures a LPC pin for proper operation. Devices with flexible pin
1470:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
1471:C:/StellarisWare/driverlib\gpio.c **** //!
1472:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1473:C:/StellarisWare/driverlib\gpio.c **** //
1474:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1475:C:/StellarisWare/driverlib\gpio.c **** void
1476:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeLPC(unsigned long ulPort, unsigned char ucPins)
1477:C:/StellarisWare/driverlib\gpio.c **** {
 2175              		.loc 1 1477 0
 2176              		.cfi_startproc
 2177              		@ args = 0, pretend = 0, frame = 8
 2178              		@ frame_needed = 1, uses_anonymous_args = 0
 2179 0000 80B5     		push	{r7, lr}
 2180              	.LCFI84:
 2181              		.cfi_def_cfa_offset 8
 2182              		.cfi_offset 14, -4
 2183              		.cfi_offset 7, -8
 2184 0002 82B0     		sub	sp, sp, #8
 2185              	.LCFI85:
 2186              		.cfi_def_cfa_offset 16
 2187 0004 00AF     		add	r7, sp, #0
 2188              	.LCFI86:
 2189              		.cfi_def_cfa_register 7
 2190 0006 7860     		str	r0, [r7, #4]
 2191 0008 0B46     		mov	r3, r1
 2192 000a FB70     		strb	r3, [r7, #3]
1478:C:/StellarisWare/driverlib\gpio.c ****     //
1479:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1480:C:/StellarisWare/driverlib\gpio.c ****     //
1481:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1482:C:/StellarisWare/driverlib\gpio.c **** 
1483:C:/StellarisWare/driverlib\gpio.c ****     //
1484:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1485:C:/StellarisWare/driverlib\gpio.c ****     //
1486:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2193              		.loc 1 1486 0
 2194 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2195 000e 7868     		ldr	r0, [r7, #4]
 2196 0010 1946     		mov	r1, r3
 2197 0012 4FF00202 		mov	r2, #2
 2198 0016 FFF7FEFF 		bl	GPIODirModeSet
1487:C:/StellarisWare/driverlib\gpio.c **** 
1488:C:/StellarisWare/driverlib\gpio.c ****     //
1489:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1490:C:/StellarisWare/driverlib\gpio.c ****     //
1491:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 2199              		.loc 1 1491 0
 2200 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2201 001c 7868     		ldr	r0, [r7, #4]
 2202 001e 1946     		mov	r1, r3
 2203 0020 4FF00402 		mov	r2, #4
 2204 0024 4FF00803 		mov	r3, #8
 2205 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1492:C:/StellarisWare/driverlib\gpio.c **** }
 2206              		.loc 1 1492 0
 2207 002c 07F10807 		add	r7, r7, #8
 2208 0030 BD46     		mov	sp, r7
 2209 0032 80BD     		pop	{r7, pc}
 2210              		.cfi_endproc
 2211              	.LFE28:
 2213              		.section	.text.GPIOPinTypePECIRx,"ax",%progbits
 2214              		.align	2
 2215              		.global	GPIOPinTypePECIRx
 2216              		.thumb
 2217              		.thumb_func
 2219              	GPIOPinTypePECIRx:
 2220              	.LFB29:
1493:C:/StellarisWare/driverlib\gpio.c **** 
1494:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1495:C:/StellarisWare/driverlib\gpio.c **** //
1496:C:/StellarisWare/driverlib\gpio.c **** //! Configures a pin for receive use by the PECI module.
1497:C:/StellarisWare/driverlib\gpio.c **** //!
1498:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1499:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1500:C:/StellarisWare/driverlib\gpio.c **** //!
1501:C:/StellarisWare/driverlib\gpio.c **** //! The PECI receive pin must be properly configured for the PECI module to
1502:C:/StellarisWare/driverlib\gpio.c **** //! function correctly.  This function provides a typical configuration for
1503:C:/StellarisWare/driverlib\gpio.c **** //! that pin.
1504:C:/StellarisWare/driverlib\gpio.c **** //!
1505:C:/StellarisWare/driverlib\gpio.c **** //! The pin is specified using a bit-packed byte, where each bit that is set
1506:C:/StellarisWare/driverlib\gpio.c **** //! identifies the pin to be accessed, and where bit 0 of the byte represents
1507:C:/StellarisWare/driverlib\gpio.c **** //! GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1508:C:/StellarisWare/driverlib\gpio.c **** //!
1509:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a PECI receive pin;
1510:C:/StellarisWare/driverlib\gpio.c **** //! it only configures a PECI receive pin for proper operation. Devices with
1511:C:/StellarisWare/driverlib\gpio.c **** //! flexible pin muxing also require a GPIOPinConfigure() function call.
1512:C:/StellarisWare/driverlib\gpio.c **** //!
1513:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1514:C:/StellarisWare/driverlib\gpio.c **** //
1515:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1516:C:/StellarisWare/driverlib\gpio.c **** void
1517:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypePECIRx(unsigned long ulPort, unsigned char ucPins)
1518:C:/StellarisWare/driverlib\gpio.c **** {
 2221              		.loc 1 1518 0
 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 8
 2224              		@ frame_needed = 1, uses_anonymous_args = 0
 2225 0000 80B5     		push	{r7, lr}
 2226              	.LCFI87:
 2227              		.cfi_def_cfa_offset 8
 2228              		.cfi_offset 14, -4
 2229              		.cfi_offset 7, -8
 2230 0002 82B0     		sub	sp, sp, #8
 2231              	.LCFI88:
 2232              		.cfi_def_cfa_offset 16
 2233 0004 00AF     		add	r7, sp, #0
 2234              	.LCFI89:
 2235              		.cfi_def_cfa_register 7
 2236 0006 7860     		str	r0, [r7, #4]
 2237 0008 0B46     		mov	r3, r1
 2238 000a FB70     		strb	r3, [r7, #3]
1519:C:/StellarisWare/driverlib\gpio.c ****     //
1520:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1521:C:/StellarisWare/driverlib\gpio.c ****     //
1522:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1523:C:/StellarisWare/driverlib\gpio.c **** 
1524:C:/StellarisWare/driverlib\gpio.c ****     //
1525:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be inputs.
1526:C:/StellarisWare/driverlib\gpio.c ****     //
1527:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_IN);
 2239              		.loc 1 1527 0
 2240 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2241 000e 7868     		ldr	r0, [r7, #4]
 2242 0010 1946     		mov	r1, r3
 2243 0012 4FF00002 		mov	r2, #0
 2244 0016 FFF7FEFF 		bl	GPIODirModeSet
1528:C:/StellarisWare/driverlib\gpio.c **** 
1529:C:/StellarisWare/driverlib\gpio.c ****     //
1530:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for analog operation.
1531:C:/StellarisWare/driverlib\gpio.c ****     //
1532:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_ANALOG);
 2245              		.loc 1 1532 0
 2246 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2247 001c 7868     		ldr	r0, [r7, #4]
 2248 001e 1946     		mov	r1, r3
 2249 0020 4FF00102 		mov	r2, #1
 2250 0024 4FF00003 		mov	r3, #0
 2251 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1533:C:/StellarisWare/driverlib\gpio.c **** }
 2252              		.loc 1 1533 0
 2253 002c 07F10807 		add	r7, r7, #8
 2254 0030 BD46     		mov	sp, r7
 2255 0032 80BD     		pop	{r7, pc}
 2256              		.cfi_endproc
 2257              	.LFE29:
 2259              		.section	.text.GPIOPinTypePECITx,"ax",%progbits
 2260              		.align	2
 2261              		.global	GPIOPinTypePECITx
 2262              		.thumb
 2263              		.thumb_func
 2265              	GPIOPinTypePECITx:
 2266              	.LFB30:
1534:C:/StellarisWare/driverlib\gpio.c **** 
1535:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1536:C:/StellarisWare/driverlib\gpio.c **** //
1537:C:/StellarisWare/driverlib\gpio.c **** //! Configures a pin for transmit use by the PECI module.
1538:C:/StellarisWare/driverlib\gpio.c **** //!
1539:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1540:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1541:C:/StellarisWare/driverlib\gpio.c **** //!
1542:C:/StellarisWare/driverlib\gpio.c **** //! The PECI transmit pin must be properly configured for the PECI module to
1543:C:/StellarisWare/driverlib\gpio.c **** //! function correctly.  This function provides a typical configuration for
1544:C:/StellarisWare/driverlib\gpio.c **** //! that pin.
1545:C:/StellarisWare/driverlib\gpio.c **** //!
1546:C:/StellarisWare/driverlib\gpio.c **** //! The pin is specified using a bit-packed byte, where each bit that is set
1547:C:/StellarisWare/driverlib\gpio.c **** //! identifies the pin to be accessed, and where bit 0 of the byte represents
1548:C:/StellarisWare/driverlib\gpio.c **** //! GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1549:C:/StellarisWare/driverlib\gpio.c **** //!
1550:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a PECI transmit pin;
1551:C:/StellarisWare/driverlib\gpio.c **** //! it only configures a PECI transmit pin for proper operation. Devices with
1552:C:/StellarisWare/driverlib\gpio.c **** //! flexible pin muxing also require a GPIOPinConfigure() function call.
1553:C:/StellarisWare/driverlib\gpio.c **** //!
1554:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1555:C:/StellarisWare/driverlib\gpio.c **** //
1556:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1557:C:/StellarisWare/driverlib\gpio.c **** void
1558:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypePECITx(unsigned long ulPort, unsigned char ucPins)
1559:C:/StellarisWare/driverlib\gpio.c **** {
 2267              		.loc 1 1559 0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 8
 2270              		@ frame_needed = 1, uses_anonymous_args = 0
 2271 0000 80B5     		push	{r7, lr}
 2272              	.LCFI90:
 2273              		.cfi_def_cfa_offset 8
 2274              		.cfi_offset 14, -4
 2275              		.cfi_offset 7, -8
 2276 0002 82B0     		sub	sp, sp, #8
 2277              	.LCFI91:
 2278              		.cfi_def_cfa_offset 16
 2279 0004 00AF     		add	r7, sp, #0
 2280              	.LCFI92:
 2281              		.cfi_def_cfa_register 7
 2282 0006 7860     		str	r0, [r7, #4]
 2283 0008 0B46     		mov	r3, r1
 2284 000a FB70     		strb	r3, [r7, #3]
1560:C:/StellarisWare/driverlib\gpio.c ****     //
1561:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1562:C:/StellarisWare/driverlib\gpio.c ****     //
1563:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1564:C:/StellarisWare/driverlib\gpio.c **** 
1565:C:/StellarisWare/driverlib\gpio.c ****     //
1566:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be inputs.
1567:C:/StellarisWare/driverlib\gpio.c ****     //
1568:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2285              		.loc 1 1568 0
 2286 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2287 000e 7868     		ldr	r0, [r7, #4]
 2288 0010 1946     		mov	r1, r3
 2289 0012 4FF00202 		mov	r2, #2
 2290 0016 FFF7FEFF 		bl	GPIODirModeSet
1569:C:/StellarisWare/driverlib\gpio.c **** 
1570:C:/StellarisWare/driverlib\gpio.c ****     //
1571:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for analog operation.
1572:C:/StellarisWare/driverlib\gpio.c ****     //
1573:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 2291              		.loc 1 1573 0
 2292 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2293 001c 7868     		ldr	r0, [r7, #4]
 2294 001e 1946     		mov	r1, r3
 2295 0020 4FF00102 		mov	r2, #1
 2296 0024 4FF00803 		mov	r3, #8
 2297 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1574:C:/StellarisWare/driverlib\gpio.c **** }
 2298              		.loc 1 1574 0
 2299 002c 07F10807 		add	r7, r7, #8
 2300 0030 BD46     		mov	sp, r7
 2301 0032 80BD     		pop	{r7, pc}
 2302              		.cfi_endproc
 2303              	.LFE30:
 2305              		.section	.text.GPIOPinTypePWM,"ax",%progbits
 2306              		.align	2
 2307              		.global	GPIOPinTypePWM
 2308              		.thumb
 2309              		.thumb_func
 2311              	GPIOPinTypePWM:
 2312              	.LFB31:
1575:C:/StellarisWare/driverlib\gpio.c **** 
1576:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1577:C:/StellarisWare/driverlib\gpio.c **** //
1578:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the PWM peripheral.
1579:C:/StellarisWare/driverlib\gpio.c **** //!
1580:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1581:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1582:C:/StellarisWare/driverlib\gpio.c **** //!
1583:C:/StellarisWare/driverlib\gpio.c **** //! The PWM pins must be properly configured for the PWM peripheral to function
1584:C:/StellarisWare/driverlib\gpio.c **** //! correctly.  This function provides a typical configuration for those
1585:C:/StellarisWare/driverlib\gpio.c **** //! pin(s); other configurations may work as well depending upon the board
1586:C:/StellarisWare/driverlib\gpio.c **** //! setup (for example, using the on-chip pull-ups).
1587:C:/StellarisWare/driverlib\gpio.c **** //!
1588:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1589:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1590:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1591:C:/StellarisWare/driverlib\gpio.c **** //!
1592:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a PWM pin; it only
1593:C:/StellarisWare/driverlib\gpio.c **** //! configures a PWM pin for proper operation. Devices wtih flexible pin
1594:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
1595:C:/StellarisWare/driverlib\gpio.c **** //!
1596:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1597:C:/StellarisWare/driverlib\gpio.c **** //
1598:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1599:C:/StellarisWare/driverlib\gpio.c **** void
1600:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypePWM(unsigned long ulPort, unsigned char ucPins)
1601:C:/StellarisWare/driverlib\gpio.c **** {
 2313              		.loc 1 1601 0
 2314              		.cfi_startproc
 2315              		@ args = 0, pretend = 0, frame = 8
 2316              		@ frame_needed = 1, uses_anonymous_args = 0
 2317 0000 80B5     		push	{r7, lr}
 2318              	.LCFI93:
 2319              		.cfi_def_cfa_offset 8
 2320              		.cfi_offset 14, -4
 2321              		.cfi_offset 7, -8
 2322 0002 82B0     		sub	sp, sp, #8
 2323              	.LCFI94:
 2324              		.cfi_def_cfa_offset 16
 2325 0004 00AF     		add	r7, sp, #0
 2326              	.LCFI95:
 2327              		.cfi_def_cfa_register 7
 2328 0006 7860     		str	r0, [r7, #4]
 2329 0008 0B46     		mov	r3, r1
 2330 000a FB70     		strb	r3, [r7, #3]
1602:C:/StellarisWare/driverlib\gpio.c ****     //
1603:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1604:C:/StellarisWare/driverlib\gpio.c ****     //
1605:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1606:C:/StellarisWare/driverlib\gpio.c **** 
1607:C:/StellarisWare/driverlib\gpio.c ****     //
1608:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1609:C:/StellarisWare/driverlib\gpio.c ****     //
1610:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2331              		.loc 1 1610 0
 2332 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2333 000e 7868     		ldr	r0, [r7, #4]
 2334 0010 1946     		mov	r1, r3
 2335 0012 4FF00202 		mov	r2, #2
 2336 0016 FFF7FEFF 		bl	GPIODirModeSet
1611:C:/StellarisWare/driverlib\gpio.c **** 
1612:C:/StellarisWare/driverlib\gpio.c ****     //
1613:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1614:C:/StellarisWare/driverlib\gpio.c ****     //
1615:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 2337              		.loc 1 1615 0
 2338 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2339 001c 7868     		ldr	r0, [r7, #4]
 2340 001e 1946     		mov	r1, r3
 2341 0020 4FF00102 		mov	r2, #1
 2342 0024 4FF00803 		mov	r3, #8
 2343 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1616:C:/StellarisWare/driverlib\gpio.c **** }
 2344              		.loc 1 1616 0
 2345 002c 07F10807 		add	r7, r7, #8
 2346 0030 BD46     		mov	sp, r7
 2347 0032 80BD     		pop	{r7, pc}
 2348              		.cfi_endproc
 2349              	.LFE31:
 2351              		.section	.text.GPIOPinTypeQEI,"ax",%progbits
 2352              		.align	2
 2353              		.global	GPIOPinTypeQEI
 2354              		.thumb
 2355              		.thumb_func
 2357              	GPIOPinTypeQEI:
 2358              	.LFB32:
1617:C:/StellarisWare/driverlib\gpio.c **** 
1618:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1619:C:/StellarisWare/driverlib\gpio.c **** //
1620:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the QEI peripheral.
1621:C:/StellarisWare/driverlib\gpio.c **** //!
1622:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1623:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1624:C:/StellarisWare/driverlib\gpio.c **** //!
1625:C:/StellarisWare/driverlib\gpio.c **** //! The QEI pins must be properly configured for the QEI peripheral to function
1626:C:/StellarisWare/driverlib\gpio.c **** //! correctly.  This function provides a typical configuration for those
1627:C:/StellarisWare/driverlib\gpio.c **** //! pin(s); other configurations may work as well depending upon the board
1628:C:/StellarisWare/driverlib\gpio.c **** //! setup (for example, not using the on-chip pull-ups).
1629:C:/StellarisWare/driverlib\gpio.c **** //!
1630:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1631:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1632:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1633:C:/StellarisWare/driverlib\gpio.c **** //!
1634:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a QEI pin; it only
1635:C:/StellarisWare/driverlib\gpio.c **** //! configures a QEI pin for proper operation. Devices with flexible pin
1636:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
1637:C:/StellarisWare/driverlib\gpio.c **** //!
1638:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1639:C:/StellarisWare/driverlib\gpio.c **** //
1640:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1641:C:/StellarisWare/driverlib\gpio.c **** void
1642:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeQEI(unsigned long ulPort, unsigned char ucPins)
1643:C:/StellarisWare/driverlib\gpio.c **** {
 2359              		.loc 1 1643 0
 2360              		.cfi_startproc
 2361              		@ args = 0, pretend = 0, frame = 8
 2362              		@ frame_needed = 1, uses_anonymous_args = 0
 2363 0000 80B5     		push	{r7, lr}
 2364              	.LCFI96:
 2365              		.cfi_def_cfa_offset 8
 2366              		.cfi_offset 14, -4
 2367              		.cfi_offset 7, -8
 2368 0002 82B0     		sub	sp, sp, #8
 2369              	.LCFI97:
 2370              		.cfi_def_cfa_offset 16
 2371 0004 00AF     		add	r7, sp, #0
 2372              	.LCFI98:
 2373              		.cfi_def_cfa_register 7
 2374 0006 7860     		str	r0, [r7, #4]
 2375 0008 0B46     		mov	r3, r1
 2376 000a FB70     		strb	r3, [r7, #3]
1644:C:/StellarisWare/driverlib\gpio.c ****     //
1645:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1646:C:/StellarisWare/driverlib\gpio.c ****     //
1647:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1648:C:/StellarisWare/driverlib\gpio.c **** 
1649:C:/StellarisWare/driverlib\gpio.c ****     //
1650:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1651:C:/StellarisWare/driverlib\gpio.c ****     //
1652:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2377              		.loc 1 1652 0
 2378 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2379 000e 7868     		ldr	r0, [r7, #4]
 2380 0010 1946     		mov	r1, r3
 2381 0012 4FF00202 		mov	r2, #2
 2382 0016 FFF7FEFF 		bl	GPIODirModeSet
1653:C:/StellarisWare/driverlib\gpio.c **** 
1654:C:/StellarisWare/driverlib\gpio.c ****     //
1655:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation with a weak pull-up.
1656:C:/StellarisWare/driverlib\gpio.c ****     //
1657:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD_WPU);
 2383              		.loc 1 1657 0
 2384 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2385 001c 7868     		ldr	r0, [r7, #4]
 2386 001e 1946     		mov	r1, r3
 2387 0020 4FF00102 		mov	r2, #1
 2388 0024 4FF00A03 		mov	r3, #10
 2389 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1658:C:/StellarisWare/driverlib\gpio.c **** }
 2390              		.loc 1 1658 0
 2391 002c 07F10807 		add	r7, r7, #8
 2392 0030 BD46     		mov	sp, r7
 2393 0032 80BD     		pop	{r7, pc}
 2394              		.cfi_endproc
 2395              	.LFE32:
 2397              		.section	.text.GPIOPinTypeSSI,"ax",%progbits
 2398              		.align	2
 2399              		.global	GPIOPinTypeSSI
 2400              		.thumb
 2401              		.thumb_func
 2403              	GPIOPinTypeSSI:
 2404              	.LFB33:
1659:C:/StellarisWare/driverlib\gpio.c **** 
1660:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1661:C:/StellarisWare/driverlib\gpio.c **** //
1662:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the SSI peripheral.
1663:C:/StellarisWare/driverlib\gpio.c **** //!
1664:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1665:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1666:C:/StellarisWare/driverlib\gpio.c **** //!
1667:C:/StellarisWare/driverlib\gpio.c **** //! The SSI pins must be properly configured for the SSI peripheral to function
1668:C:/StellarisWare/driverlib\gpio.c **** //! correctly.  This function provides a typical configuration for those
1669:C:/StellarisWare/driverlib\gpio.c **** //! pin(s); other configurations may work as well depending upon the board
1670:C:/StellarisWare/driverlib\gpio.c **** //! setup (for example, using the on-chip pull-ups).
1671:C:/StellarisWare/driverlib\gpio.c **** //!
1672:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1673:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1674:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1675:C:/StellarisWare/driverlib\gpio.c **** //!
1676:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a SSI pin; it only
1677:C:/StellarisWare/driverlib\gpio.c **** //! configures a SSI pin for proper operation. Devices with flexible pin
1678:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
1679:C:/StellarisWare/driverlib\gpio.c **** //!
1680:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1681:C:/StellarisWare/driverlib\gpio.c **** //
1682:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1683:C:/StellarisWare/driverlib\gpio.c **** void
1684:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeSSI(unsigned long ulPort, unsigned char ucPins)
1685:C:/StellarisWare/driverlib\gpio.c **** {
 2405              		.loc 1 1685 0
 2406              		.cfi_startproc
 2407              		@ args = 0, pretend = 0, frame = 8
 2408              		@ frame_needed = 1, uses_anonymous_args = 0
 2409 0000 80B5     		push	{r7, lr}
 2410              	.LCFI99:
 2411              		.cfi_def_cfa_offset 8
 2412              		.cfi_offset 14, -4
 2413              		.cfi_offset 7, -8
 2414 0002 82B0     		sub	sp, sp, #8
 2415              	.LCFI100:
 2416              		.cfi_def_cfa_offset 16
 2417 0004 00AF     		add	r7, sp, #0
 2418              	.LCFI101:
 2419              		.cfi_def_cfa_register 7
 2420 0006 7860     		str	r0, [r7, #4]
 2421 0008 0B46     		mov	r3, r1
 2422 000a FB70     		strb	r3, [r7, #3]
1686:C:/StellarisWare/driverlib\gpio.c ****     //
1687:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1688:C:/StellarisWare/driverlib\gpio.c ****     //
1689:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1690:C:/StellarisWare/driverlib\gpio.c **** 
1691:C:/StellarisWare/driverlib\gpio.c ****     //
1692:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1693:C:/StellarisWare/driverlib\gpio.c ****     //
1694:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2423              		.loc 1 1694 0
 2424 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2425 000e 7868     		ldr	r0, [r7, #4]
 2426 0010 1946     		mov	r1, r3
 2427 0012 4FF00202 		mov	r2, #2
 2428 0016 FFF7FEFF 		bl	GPIODirModeSet
1695:C:/StellarisWare/driverlib\gpio.c **** 
1696:C:/StellarisWare/driverlib\gpio.c ****     //
1697:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1698:C:/StellarisWare/driverlib\gpio.c ****     //
1699:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 2429              		.loc 1 1699 0
 2430 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2431 001c 7868     		ldr	r0, [r7, #4]
 2432 001e 1946     		mov	r1, r3
 2433 0020 4FF00102 		mov	r2, #1
 2434 0024 4FF00803 		mov	r3, #8
 2435 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1700:C:/StellarisWare/driverlib\gpio.c **** }
 2436              		.loc 1 1700 0
 2437 002c 07F10807 		add	r7, r7, #8
 2438 0030 BD46     		mov	sp, r7
 2439 0032 80BD     		pop	{r7, pc}
 2440              		.cfi_endproc
 2441              	.LFE33:
 2443              		.section	.text.GPIOPinTypeTimer,"ax",%progbits
 2444              		.align	2
 2445              		.global	GPIOPinTypeTimer
 2446              		.thumb
 2447              		.thumb_func
 2449              	GPIOPinTypeTimer:
 2450              	.LFB34:
1701:C:/StellarisWare/driverlib\gpio.c **** 
1702:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1703:C:/StellarisWare/driverlib\gpio.c **** //
1704:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the Timer peripheral.
1705:C:/StellarisWare/driverlib\gpio.c **** //!
1706:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1707:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1708:C:/StellarisWare/driverlib\gpio.c **** //!
1709:C:/StellarisWare/driverlib\gpio.c **** //! The CCP pins must be properly configured for the timer peripheral to
1710:C:/StellarisWare/driverlib\gpio.c **** //! function correctly.  This function provides a typical configuration for
1711:C:/StellarisWare/driverlib\gpio.c **** //! those pin(s); other configurations may work as well depending upon the
1712:C:/StellarisWare/driverlib\gpio.c **** //! board setup (for example, using the on-chip pull-ups).
1713:C:/StellarisWare/driverlib\gpio.c **** //!
1714:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1715:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1716:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1717:C:/StellarisWare/driverlib\gpio.c **** //!
1718:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a timer pin; it
1719:C:/StellarisWare/driverlib\gpio.c **** //! only configures a timer pin for proper operation. Devices with flexible
1720:C:/StellarisWare/driverlib\gpio.c **** //! pin muxing also require a GPIOPinConfigure() function call.
1721:C:/StellarisWare/driverlib\gpio.c **** //!
1722:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1723:C:/StellarisWare/driverlib\gpio.c **** //
1724:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1725:C:/StellarisWare/driverlib\gpio.c **** void
1726:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeTimer(unsigned long ulPort, unsigned char ucPins)
1727:C:/StellarisWare/driverlib\gpio.c **** {
 2451              		.loc 1 1727 0
 2452              		.cfi_startproc
 2453              		@ args = 0, pretend = 0, frame = 8
 2454              		@ frame_needed = 1, uses_anonymous_args = 0
 2455 0000 80B5     		push	{r7, lr}
 2456              	.LCFI102:
 2457              		.cfi_def_cfa_offset 8
 2458              		.cfi_offset 14, -4
 2459              		.cfi_offset 7, -8
 2460 0002 82B0     		sub	sp, sp, #8
 2461              	.LCFI103:
 2462              		.cfi_def_cfa_offset 16
 2463 0004 00AF     		add	r7, sp, #0
 2464              	.LCFI104:
 2465              		.cfi_def_cfa_register 7
 2466 0006 7860     		str	r0, [r7, #4]
 2467 0008 0B46     		mov	r3, r1
 2468 000a FB70     		strb	r3, [r7, #3]
1728:C:/StellarisWare/driverlib\gpio.c ****     //
1729:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1730:C:/StellarisWare/driverlib\gpio.c ****     //
1731:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1732:C:/StellarisWare/driverlib\gpio.c **** 
1733:C:/StellarisWare/driverlib\gpio.c ****     //
1734:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1735:C:/StellarisWare/driverlib\gpio.c ****     //
1736:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2469              		.loc 1 1736 0
 2470 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2471 000e 7868     		ldr	r0, [r7, #4]
 2472 0010 1946     		mov	r1, r3
 2473 0012 4FF00202 		mov	r2, #2
 2474 0016 FFF7FEFF 		bl	GPIODirModeSet
1737:C:/StellarisWare/driverlib\gpio.c **** 
1738:C:/StellarisWare/driverlib\gpio.c ****     //
1739:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1740:C:/StellarisWare/driverlib\gpio.c ****     //
1741:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 2475              		.loc 1 1741 0
 2476 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2477 001c 7868     		ldr	r0, [r7, #4]
 2478 001e 1946     		mov	r1, r3
 2479 0020 4FF00102 		mov	r2, #1
 2480 0024 4FF00803 		mov	r3, #8
 2481 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1742:C:/StellarisWare/driverlib\gpio.c **** }
 2482              		.loc 1 1742 0
 2483 002c 07F10807 		add	r7, r7, #8
 2484 0030 BD46     		mov	sp, r7
 2485 0032 80BD     		pop	{r7, pc}
 2486              		.cfi_endproc
 2487              	.LFE34:
 2489              		.section	.text.GPIOPinTypeUART,"ax",%progbits
 2490              		.align	2
 2491              		.global	GPIOPinTypeUART
 2492              		.thumb
 2493              		.thumb_func
 2495              	GPIOPinTypeUART:
 2496              	.LFB35:
1743:C:/StellarisWare/driverlib\gpio.c **** 
1744:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1745:C:/StellarisWare/driverlib\gpio.c **** //
1746:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the UART peripheral.
1747:C:/StellarisWare/driverlib\gpio.c **** //!
1748:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1749:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1750:C:/StellarisWare/driverlib\gpio.c **** //!
1751:C:/StellarisWare/driverlib\gpio.c **** //! The UART pins must be properly configured for the UART peripheral to
1752:C:/StellarisWare/driverlib\gpio.c **** //! function correctly.  This function provides a typical configuration for
1753:C:/StellarisWare/driverlib\gpio.c **** //! those pin(s); other configurations may work as well depending upon the
1754:C:/StellarisWare/driverlib\gpio.c **** //! board setup (for example, using the on-chip pull-ups).
1755:C:/StellarisWare/driverlib\gpio.c **** //!
1756:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1757:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1758:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1759:C:/StellarisWare/driverlib\gpio.c **** //!
1760:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a UART pin; it
1761:C:/StellarisWare/driverlib\gpio.c **** //! only configures a UART pin for proper operation. Devices with flexible
1762:C:/StellarisWare/driverlib\gpio.c **** //! pin muxing also require a GPIOPinConfigure() function call.
1763:C:/StellarisWare/driverlib\gpio.c **** //!
1764:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1765:C:/StellarisWare/driverlib\gpio.c **** //
1766:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1767:C:/StellarisWare/driverlib\gpio.c **** void
1768:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeUART(unsigned long ulPort, unsigned char ucPins)
1769:C:/StellarisWare/driverlib\gpio.c **** {
 2497              		.loc 1 1769 0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 8
 2500              		@ frame_needed = 1, uses_anonymous_args = 0
 2501 0000 80B5     		push	{r7, lr}
 2502              	.LCFI105:
 2503              		.cfi_def_cfa_offset 8
 2504              		.cfi_offset 14, -4
 2505              		.cfi_offset 7, -8
 2506 0002 82B0     		sub	sp, sp, #8
 2507              	.LCFI106:
 2508              		.cfi_def_cfa_offset 16
 2509 0004 00AF     		add	r7, sp, #0
 2510              	.LCFI107:
 2511              		.cfi_def_cfa_register 7
 2512 0006 7860     		str	r0, [r7, #4]
 2513 0008 0B46     		mov	r3, r1
 2514 000a FB70     		strb	r3, [r7, #3]
1770:C:/StellarisWare/driverlib\gpio.c ****     //
1771:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1772:C:/StellarisWare/driverlib\gpio.c ****     //
1773:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1774:C:/StellarisWare/driverlib\gpio.c **** 
1775:C:/StellarisWare/driverlib\gpio.c ****     //
1776:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1777:C:/StellarisWare/driverlib\gpio.c ****     //
1778:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2515              		.loc 1 1778 0
 2516 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2517 000e 7868     		ldr	r0, [r7, #4]
 2518 0010 1946     		mov	r1, r3
 2519 0012 4FF00202 		mov	r2, #2
 2520 0016 FFF7FEFF 		bl	GPIODirModeSet
1779:C:/StellarisWare/driverlib\gpio.c **** 
1780:C:/StellarisWare/driverlib\gpio.c ****     //
1781:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1782:C:/StellarisWare/driverlib\gpio.c ****     //
1783:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 2521              		.loc 1 1783 0
 2522 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2523 001c 7868     		ldr	r0, [r7, #4]
 2524 001e 1946     		mov	r1, r3
 2525 0020 4FF00102 		mov	r2, #1
 2526 0024 4FF00803 		mov	r3, #8
 2527 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1784:C:/StellarisWare/driverlib\gpio.c **** }
 2528              		.loc 1 1784 0
 2529 002c 07F10807 		add	r7, r7, #8
 2530 0030 BD46     		mov	sp, r7
 2531 0032 80BD     		pop	{r7, pc}
 2532              		.cfi_endproc
 2533              	.LFE35:
 2535              		.section	.text.GPIOPinTypeUSBAnalog,"ax",%progbits
 2536              		.align	2
 2537              		.global	GPIOPinTypeUSBAnalog
 2538              		.thumb
 2539              		.thumb_func
 2541              	GPIOPinTypeUSBAnalog:
 2542              	.LFB36:
1785:C:/StellarisWare/driverlib\gpio.c **** 
1786:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1787:C:/StellarisWare/driverlib\gpio.c **** //
1788:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the USB peripheral.
1789:C:/StellarisWare/driverlib\gpio.c **** //!
1790:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1791:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1792:C:/StellarisWare/driverlib\gpio.c **** //!
1793:C:/StellarisWare/driverlib\gpio.c **** //! Some USB analog pins must be properly configured for the USB peripheral to
1794:C:/StellarisWare/driverlib\gpio.c **** //! function correctly.  This function provides the proper configuration for
1795:C:/StellarisWare/driverlib\gpio.c **** //! any USB pin(s).  This can also be used to configure the EPEN and PFAULT pins
1796:C:/StellarisWare/driverlib\gpio.c **** //! so that they are no longer used by the USB controller.
1797:C:/StellarisWare/driverlib\gpio.c **** //!
1798:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1799:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1800:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1801:C:/StellarisWare/driverlib\gpio.c **** //!
1802:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a USB pin; it only
1803:C:/StellarisWare/driverlib\gpio.c **** //! configures a USB pin for proper operation. Devices with flexible pin
1804:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
1805:C:/StellarisWare/driverlib\gpio.c **** //!
1806:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1807:C:/StellarisWare/driverlib\gpio.c **** //
1808:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1809:C:/StellarisWare/driverlib\gpio.c **** void
1810:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeUSBAnalog(unsigned long ulPort, unsigned char ucPins)
1811:C:/StellarisWare/driverlib\gpio.c **** {
 2543              		.loc 1 1811 0
 2544              		.cfi_startproc
 2545              		@ args = 0, pretend = 0, frame = 8
 2546              		@ frame_needed = 1, uses_anonymous_args = 0
 2547 0000 80B5     		push	{r7, lr}
 2548              	.LCFI108:
 2549              		.cfi_def_cfa_offset 8
 2550              		.cfi_offset 14, -4
 2551              		.cfi_offset 7, -8
 2552 0002 82B0     		sub	sp, sp, #8
 2553              	.LCFI109:
 2554              		.cfi_def_cfa_offset 16
 2555 0004 00AF     		add	r7, sp, #0
 2556              	.LCFI110:
 2557              		.cfi_def_cfa_register 7
 2558 0006 7860     		str	r0, [r7, #4]
 2559 0008 0B46     		mov	r3, r1
 2560 000a FB70     		strb	r3, [r7, #3]
1812:C:/StellarisWare/driverlib\gpio.c ****     //
1813:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1814:C:/StellarisWare/driverlib\gpio.c ****     //
1815:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1816:C:/StellarisWare/driverlib\gpio.c **** 
1817:C:/StellarisWare/driverlib\gpio.c ****     //
1818:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be inputs.
1819:C:/StellarisWare/driverlib\gpio.c ****     //
1820:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_IN);
 2561              		.loc 1 1820 0
 2562 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2563 000e 7868     		ldr	r0, [r7, #4]
 2564 0010 1946     		mov	r1, r3
 2565 0012 4FF00002 		mov	r2, #0
 2566 0016 FFF7FEFF 		bl	GPIODirModeSet
1821:C:/StellarisWare/driverlib\gpio.c **** 
1822:C:/StellarisWare/driverlib\gpio.c ****     //
1823:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for analog operation.
1824:C:/StellarisWare/driverlib\gpio.c ****     //
1825:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_ANALOG);
 2567              		.loc 1 1825 0
 2568 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2569 001c 7868     		ldr	r0, [r7, #4]
 2570 001e 1946     		mov	r1, r3
 2571 0020 4FF00102 		mov	r2, #1
 2572 0024 4FF00003 		mov	r3, #0
 2573 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1826:C:/StellarisWare/driverlib\gpio.c **** }
 2574              		.loc 1 1826 0
 2575 002c 07F10807 		add	r7, r7, #8
 2576 0030 BD46     		mov	sp, r7
 2577 0032 80BD     		pop	{r7, pc}
 2578              		.cfi_endproc
 2579              	.LFE36:
 2581              		.section	.text.GPIOPinTypeUSBDigital,"ax",%progbits
 2582              		.align	2
 2583              		.global	GPIOPinTypeUSBDigital
 2584              		.thumb
 2585              		.thumb_func
 2587              	GPIOPinTypeUSBDigital:
 2588              	.LFB37:
1827:C:/StellarisWare/driverlib\gpio.c **** 
1828:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1829:C:/StellarisWare/driverlib\gpio.c **** //
1830:C:/StellarisWare/driverlib\gpio.c **** //! Configures pin(s) for use by the USB peripheral.
1831:C:/StellarisWare/driverlib\gpio.c **** //!
1832:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1833:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1834:C:/StellarisWare/driverlib\gpio.c **** //!
1835:C:/StellarisWare/driverlib\gpio.c **** //! Some USB digital pins must be properly configured for the USB peripheral to
1836:C:/StellarisWare/driverlib\gpio.c **** //! function correctly.  This function provides a typical configuration for
1837:C:/StellarisWare/driverlib\gpio.c **** //! the digital USB pin(s); other configurations may work as well depending
1838:C:/StellarisWare/driverlib\gpio.c **** //! upon the board setup (for example, using the on-chip pull-ups).
1839:C:/StellarisWare/driverlib\gpio.c **** //!
1840:C:/StellarisWare/driverlib\gpio.c **** //! This function should only be used with EPEN and PFAULT pins as all other
1841:C:/StellarisWare/driverlib\gpio.c **** //! USB pins are analog in nature or are not used in devices without OTG
1842:C:/StellarisWare/driverlib\gpio.c **** //! functionality.
1843:C:/StellarisWare/driverlib\gpio.c **** //!
1844:C:/StellarisWare/driverlib\gpio.c **** //! The pin(s) are specified using a bit-packed byte, where each bit that is
1845:C:/StellarisWare/driverlib\gpio.c **** //! set identifies the pin to be accessed, and where bit 0 of the byte
1846:C:/StellarisWare/driverlib\gpio.c **** //! represents GPIO port pin 0, bit 1 represents GPIO port pin 1, and so on.
1847:C:/StellarisWare/driverlib\gpio.c **** //!
1848:C:/StellarisWare/driverlib\gpio.c **** //! \note This function cannot be used to turn any pin into a USB pin; it only
1849:C:/StellarisWare/driverlib\gpio.c **** //! configures a USB pin for proper operation. Devices with flexible pin
1850:C:/StellarisWare/driverlib\gpio.c **** //! muxing also require a GPIOPinConfigure() function call.
1851:C:/StellarisWare/driverlib\gpio.c **** //!
1852:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1853:C:/StellarisWare/driverlib\gpio.c **** //
1854:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1855:C:/StellarisWare/driverlib\gpio.c **** void
1856:C:/StellarisWare/driverlib\gpio.c **** GPIOPinTypeUSBDigital(unsigned long ulPort, unsigned char ucPins)
1857:C:/StellarisWare/driverlib\gpio.c **** {
 2589              		.loc 1 1857 0
 2590              		.cfi_startproc
 2591              		@ args = 0, pretend = 0, frame = 8
 2592              		@ frame_needed = 1, uses_anonymous_args = 0
 2593 0000 80B5     		push	{r7, lr}
 2594              	.LCFI111:
 2595              		.cfi_def_cfa_offset 8
 2596              		.cfi_offset 14, -4
 2597              		.cfi_offset 7, -8
 2598 0002 82B0     		sub	sp, sp, #8
 2599              	.LCFI112:
 2600              		.cfi_def_cfa_offset 16
 2601 0004 00AF     		add	r7, sp, #0
 2602              	.LCFI113:
 2603              		.cfi_def_cfa_register 7
 2604 0006 7860     		str	r0, [r7, #4]
 2605 0008 0B46     		mov	r3, r1
 2606 000a FB70     		strb	r3, [r7, #3]
1858:C:/StellarisWare/driverlib\gpio.c ****     //
1859:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1860:C:/StellarisWare/driverlib\gpio.c ****     //
1861:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1862:C:/StellarisWare/driverlib\gpio.c **** 
1863:C:/StellarisWare/driverlib\gpio.c ****     //
1864:C:/StellarisWare/driverlib\gpio.c ****     // Make the pin(s) be peripheral controlled.
1865:C:/StellarisWare/driverlib\gpio.c ****     //
1866:C:/StellarisWare/driverlib\gpio.c ****     GPIODirModeSet(ulPort, ucPins, GPIO_DIR_MODE_HW);
 2607              		.loc 1 1866 0
 2608 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2609 000e 7868     		ldr	r0, [r7, #4]
 2610 0010 1946     		mov	r1, r3
 2611 0012 4FF00202 		mov	r2, #2
 2612 0016 FFF7FEFF 		bl	GPIODirModeSet
1867:C:/StellarisWare/driverlib\gpio.c **** 
1868:C:/StellarisWare/driverlib\gpio.c ****     //
1869:C:/StellarisWare/driverlib\gpio.c ****     // Set the pad(s) for standard push-pull operation.
1870:C:/StellarisWare/driverlib\gpio.c ****     //
1871:C:/StellarisWare/driverlib\gpio.c ****     GPIOPadConfigSet(ulPort, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
 2613              		.loc 1 1871 0
 2614 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2615 001c 7868     		ldr	r0, [r7, #4]
 2616 001e 1946     		mov	r1, r3
 2617 0020 4FF00102 		mov	r2, #1
 2618 0024 4FF00803 		mov	r3, #8
 2619 0028 FFF7FEFF 		bl	GPIOPadConfigSet
1872:C:/StellarisWare/driverlib\gpio.c **** }
 2620              		.loc 1 1872 0
 2621 002c 07F10807 		add	r7, r7, #8
 2622 0030 BD46     		mov	sp, r7
 2623 0032 80BD     		pop	{r7, pc}
 2624              		.cfi_endproc
 2625              	.LFE37:
 2627              		.section	.text.GPIOPinConfigure,"ax",%progbits
 2628              		.align	2
 2629              		.global	GPIOPinConfigure
 2630              		.thumb
 2631              		.thumb_func
 2633              	GPIOPinConfigure:
 2634              	.LFB38:
1873:C:/StellarisWare/driverlib\gpio.c **** 
1874:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1875:C:/StellarisWare/driverlib\gpio.c **** //
1876:C:/StellarisWare/driverlib\gpio.c **** //! Configures the alternate function of a GPIO pin.
1877:C:/StellarisWare/driverlib\gpio.c **** //!
1878:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPinConfig is the pin configuration value, specified as only one of
1879:C:/StellarisWare/driverlib\gpio.c **** //! the \b GPIO_P??_??? values.
1880:C:/StellarisWare/driverlib\gpio.c **** //!
1881:C:/StellarisWare/driverlib\gpio.c **** //! This function configures the pin mux that selects the peripheral function
1882:C:/StellarisWare/driverlib\gpio.c **** //! associated with a particular GPIO pin.  Only one peripheral function at a
1883:C:/StellarisWare/driverlib\gpio.c **** //! time can be associated with a GPIO pin, and each peripheral function should
1884:C:/StellarisWare/driverlib\gpio.c **** //! only be associated with a single GPIO pin at a time (despite the fact that
1885:C:/StellarisWare/driverlib\gpio.c **** //! many of them can be associated with more than one GPIO pin). To fully
1886:C:/StellarisWare/driverlib\gpio.c **** //! configure a pin, a GPIOPinType*() function should also be called.
1887:C:/StellarisWare/driverlib\gpio.c **** //!
1888:C:/StellarisWare/driverlib\gpio.c **** //! The available mappings are supplied on a per-device basis in
1889:C:/StellarisWare/driverlib\gpio.c **** //! <tt>pin_map.h</tt>.  The \b PART_IS_<partno> define enables the
1890:C:/StellarisWare/driverlib\gpio.c **** //! appropriate set of defines for the device that is being used.
1891:C:/StellarisWare/driverlib\gpio.c **** //!
1892:C:/StellarisWare/driverlib\gpio.c **** //! \note This function is not valid on Sandstorm, Fury, and Dustdevil-class
1893:C:/StellarisWare/driverlib\gpio.c **** //! devices. Also, if the same signal is assigned to two different GPIO port
1894:C:/StellarisWare/driverlib\gpio.c **** //! pins, the signal is assigned to the port with the lowest letter and the
1895:C:/StellarisWare/driverlib\gpio.c **** //! assignment to the higher letter port is ignored.
1896:C:/StellarisWare/driverlib\gpio.c **** //!
1897:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1898:C:/StellarisWare/driverlib\gpio.c **** //
1899:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1900:C:/StellarisWare/driverlib\gpio.c **** void
1901:C:/StellarisWare/driverlib\gpio.c **** GPIOPinConfigure(unsigned long ulPinConfig)
1902:C:/StellarisWare/driverlib\gpio.c **** {
 2635              		.loc 1 1902 0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 16
 2638              		@ frame_needed = 1, uses_anonymous_args = 0
 2639              		@ link register save eliminated.
 2640 0000 80B4     		push	{r7}
 2641              	.LCFI114:
 2642              		.cfi_def_cfa_offset 4
 2643              		.cfi_offset 7, -4
 2644 0002 85B0     		sub	sp, sp, #20
 2645              	.LCFI115:
 2646              		.cfi_def_cfa_offset 24
 2647 0004 00AF     		add	r7, sp, #0
 2648              	.LCFI116:
 2649              		.cfi_def_cfa_register 7
 2650 0006 7860     		str	r0, [r7, #4]
1903:C:/StellarisWare/driverlib\gpio.c ****     unsigned long ulBase, ulShift;
1904:C:/StellarisWare/driverlib\gpio.c **** 
1905:C:/StellarisWare/driverlib\gpio.c ****     //
1906:C:/StellarisWare/driverlib\gpio.c ****     // Check the argument.
1907:C:/StellarisWare/driverlib\gpio.c ****     //
1908:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(((ulPinConfig >> 16) & 0xff) < 15);
1909:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(((ulPinConfig >> 8) & 0xe3) == 0);
1910:C:/StellarisWare/driverlib\gpio.c **** 
1911:C:/StellarisWare/driverlib\gpio.c ****     //
1912:C:/StellarisWare/driverlib\gpio.c ****     // Extract the base address index from the input value.
1913:C:/StellarisWare/driverlib\gpio.c ****     //
1914:C:/StellarisWare/driverlib\gpio.c ****     ulBase = (ulPinConfig >> 16) & 0xff;
 2651              		.loc 1 1914 0
 2652 0008 7B68     		ldr	r3, [r7, #4]
 2653 000a 4FEA1343 		lsr	r3, r3, #16
 2654 000e DBB2     		uxtb	r3, r3
 2655 0010 FB60     		str	r3, [r7, #12]
1915:C:/StellarisWare/driverlib\gpio.c **** 
1916:C:/StellarisWare/driverlib\gpio.c ****     //
1917:C:/StellarisWare/driverlib\gpio.c ****     // Get the base address of the GPIO module, selecting either the APB or the
1918:C:/StellarisWare/driverlib\gpio.c ****     // AHB aperture as appropriate.
1919:C:/StellarisWare/driverlib\gpio.c ****     //
1920:C:/StellarisWare/driverlib\gpio.c ****     if(HWREG(SYSCTL_GPIOHBCTL) & (1 << ulBase))
 2656              		.loc 1 1920 0
 2657 0012 4EF26C03 		movw	r3, #57452
 2658 0016 C4F20F03 		movt	r3, 16399
 2659 001a 1A68     		ldr	r2, [r3, #0]
 2660 001c FB68     		ldr	r3, [r7, #12]
 2661 001e 4FF00101 		mov	r1, #1
 2662 0022 01FA03F3 		lsl	r3, r1, r3
 2663 0026 1340     		ands	r3, r3, r2
 2664 0028 002B     		cmp	r3, #0
 2665 002a 0CD0     		beq	.L115
1921:C:/StellarisWare/driverlib\gpio.c ****     {
1922:C:/StellarisWare/driverlib\gpio.c ****         ulBase = g_pulGPIOBaseAddrs[(ulBase << 1) + 1];
 2666              		.loc 1 1922 0
 2667 002c FB68     		ldr	r3, [r7, #12]
 2668 002e 4FEA4303 		lsl	r3, r3, #1
 2669 0032 03F10102 		add	r2, r3, #1
 2670 0036 40F20003 		movw	r3, #:lower16:g_pulGPIOBaseAddrs
 2671 003a C0F20003 		movt	r3, #:upper16:g_pulGPIOBaseAddrs
 2672 003e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2673 0042 FB60     		str	r3, [r7, #12]
 2674 0044 09E0     		b	.L116
 2675              	.L115:
1923:C:/StellarisWare/driverlib\gpio.c ****     }
1924:C:/StellarisWare/driverlib\gpio.c ****     else
1925:C:/StellarisWare/driverlib\gpio.c ****     {
1926:C:/StellarisWare/driverlib\gpio.c ****         ulBase = g_pulGPIOBaseAddrs[ulBase << 1];
 2676              		.loc 1 1926 0
 2677 0046 FB68     		ldr	r3, [r7, #12]
 2678 0048 4FEA4302 		lsl	r2, r3, #1
 2679 004c 40F20003 		movw	r3, #:lower16:g_pulGPIOBaseAddrs
 2680 0050 C0F20003 		movt	r3, #:upper16:g_pulGPIOBaseAddrs
 2681 0054 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2682 0058 FB60     		str	r3, [r7, #12]
 2683              	.L116:
1927:C:/StellarisWare/driverlib\gpio.c ****     }
1928:C:/StellarisWare/driverlib\gpio.c **** 
1929:C:/StellarisWare/driverlib\gpio.c ****     //
1930:C:/StellarisWare/driverlib\gpio.c ****     // Extract the shift from the input value.
1931:C:/StellarisWare/driverlib\gpio.c ****     //
1932:C:/StellarisWare/driverlib\gpio.c ****     ulShift = (ulPinConfig >> 8) & 0xff;
 2684              		.loc 1 1932 0
 2685 005a 7B68     		ldr	r3, [r7, #4]
 2686 005c 4FEA1323 		lsr	r3, r3, #8
 2687 0060 DBB2     		uxtb	r3, r3
 2688 0062 BB60     		str	r3, [r7, #8]
1933:C:/StellarisWare/driverlib\gpio.c **** 
1934:C:/StellarisWare/driverlib\gpio.c ****     //
1935:C:/StellarisWare/driverlib\gpio.c ****     // Write the requested pin muxing value for this GPIO pin.
1936:C:/StellarisWare/driverlib\gpio.c ****     //
1937:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulBase + GPIO_O_PCTL) = ((HWREG(ulBase + GPIO_O_PCTL) &
 2689              		.loc 1 1937 0
 2690 0064 FB68     		ldr	r3, [r7, #12]
 2691 0066 03F5A463 		add	r3, r3, #1312
 2692 006a 03F10C03 		add	r3, r3, #12
 2693 006e 1A46     		mov	r2, r3
 2694 0070 FB68     		ldr	r3, [r7, #12]
 2695 0072 03F5A463 		add	r3, r3, #1312
 2696 0076 03F10C03 		add	r3, r3, #12
 2697 007a 1968     		ldr	r1, [r3, #0]
1938:C:/StellarisWare/driverlib\gpio.c ****                                     ~(0xf << ulShift)) |
 2698              		.loc 1 1938 0
 2699 007c BB68     		ldr	r3, [r7, #8]
 2700 007e 4FF00F00 		mov	r0, #15
 2701 0082 00FA03F3 		lsl	r3, r0, r3
 2702 0086 6FEA0303 		mvn	r3, r3
1937:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulBase + GPIO_O_PCTL) = ((HWREG(ulBase + GPIO_O_PCTL) &
 2703              		.loc 1 1937 0
 2704 008a 1940     		ands	r1, r1, r3
1939:C:/StellarisWare/driverlib\gpio.c ****                                    ((ulPinConfig & 0xf) << ulShift));
 2705              		.loc 1 1939 0
 2706 008c 7B68     		ldr	r3, [r7, #4]
 2707 008e 03F00F00 		and	r0, r3, #15
 2708 0092 BB68     		ldr	r3, [r7, #8]
 2709 0094 00FA03F3 		lsl	r3, r0, r3
1938:C:/StellarisWare/driverlib\gpio.c ****                                     ~(0xf << ulShift)) |
 2710              		.loc 1 1938 0
 2711 0098 0B43     		orrs	r3, r3, r1
1937:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulBase + GPIO_O_PCTL) = ((HWREG(ulBase + GPIO_O_PCTL) &
 2712              		.loc 1 1937 0
 2713 009a 1360     		str	r3, [r2, #0]
1940:C:/StellarisWare/driverlib\gpio.c **** }
 2714              		.loc 1 1940 0
 2715 009c 07F11407 		add	r7, r7, #20
 2716 00a0 BD46     		mov	sp, r7
 2717 00a2 80BC     		pop	{r7}
 2718 00a4 7047     		bx	lr
 2719              		.cfi_endproc
 2720              	.LFE38:
 2722 00a6 00BF     		.section	.text.GPIODMATriggerEnable,"ax",%progbits
 2723              		.align	2
 2724              		.global	GPIODMATriggerEnable
 2725              		.thumb
 2726              		.thumb_func
 2728              	GPIODMATriggerEnable:
 2729              	.LFB39:
1941:C:/StellarisWare/driverlib\gpio.c **** 
1942:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1943:C:/StellarisWare/driverlib\gpio.c **** //
1944:C:/StellarisWare/driverlib\gpio.c **** //! Enables a GPIO pin as a trigger to start a DMA transaction.
1945:C:/StellarisWare/driverlib\gpio.c **** //!
1946:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1947:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1948:C:/StellarisWare/driverlib\gpio.c **** //!
1949:C:/StellarisWare/driverlib\gpio.c **** //! This function enables a GPIO pin to be used as a trigger to start a uDMA
1950:C:/StellarisWare/driverlib\gpio.c **** //! transaction.  Any GPIO pin can be configured to be an external trigger for
1951:C:/StellarisWare/driverlib\gpio.c **** //! the uDMA.  The GPIO pin still generates interrupts if the interrupt is
1952:C:/StellarisWare/driverlib\gpio.c **** //! enabled for the selected pin.
1953:C:/StellarisWare/driverlib\gpio.c **** //!
1954:C:/StellarisWare/driverlib\gpio.c **** //! \note This function is not available on all devices, consult the data sheet
1955:C:/StellarisWare/driverlib\gpio.c **** //! to ensure that the device you are using supports GPIO DMA Control.
1956:C:/StellarisWare/driverlib\gpio.c **** //!
1957:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1958:C:/StellarisWare/driverlib\gpio.c **** //
1959:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1960:C:/StellarisWare/driverlib\gpio.c **** void
1961:C:/StellarisWare/driverlib\gpio.c **** GPIODMATriggerEnable(unsigned long ulPort, unsigned char ucPins)
1962:C:/StellarisWare/driverlib\gpio.c **** {
 2730              		.loc 1 1962 0
 2731              		.cfi_startproc
 2732              		@ args = 0, pretend = 0, frame = 8
 2733              		@ frame_needed = 1, uses_anonymous_args = 0
 2734              		@ link register save eliminated.
 2735 0000 80B4     		push	{r7}
 2736              	.LCFI117:
 2737              		.cfi_def_cfa_offset 4
 2738              		.cfi_offset 7, -4
 2739 0002 83B0     		sub	sp, sp, #12
 2740              	.LCFI118:
 2741              		.cfi_def_cfa_offset 16
 2742 0004 00AF     		add	r7, sp, #0
 2743              	.LCFI119:
 2744              		.cfi_def_cfa_register 7
 2745 0006 7860     		str	r0, [r7, #4]
 2746 0008 0B46     		mov	r3, r1
 2747 000a FB70     		strb	r3, [r7, #3]
1963:C:/StellarisWare/driverlib\gpio.c ****     //
1964:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1965:C:/StellarisWare/driverlib\gpio.c ****     //
1966:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1967:C:/StellarisWare/driverlib\gpio.c **** 
1968:C:/StellarisWare/driverlib\gpio.c ****     //
1969:C:/StellarisWare/driverlib\gpio.c ****     // Set the pin as a DMA trigger.
1970:C:/StellarisWare/driverlib\gpio.c ****     //
1971:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DMACTL) |= ucPins;
 2748              		.loc 1 1971 0
 2749 000c 7B68     		ldr	r3, [r7, #4]
 2750 000e 03F5A663 		add	r3, r3, #1328
 2751 0012 03F10403 		add	r3, r3, #4
 2752 0016 1A46     		mov	r2, r3
 2753 0018 7B68     		ldr	r3, [r7, #4]
 2754 001a 03F5A663 		add	r3, r3, #1328
 2755 001e 03F10403 		add	r3, r3, #4
 2756 0022 1968     		ldr	r1, [r3, #0]
 2757 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2758 0026 0B43     		orrs	r3, r3, r1
 2759 0028 1360     		str	r3, [r2, #0]
1972:C:/StellarisWare/driverlib\gpio.c **** }
 2760              		.loc 1 1972 0
 2761 002a 07F10C07 		add	r7, r7, #12
 2762 002e BD46     		mov	sp, r7
 2763 0030 80BC     		pop	{r7}
 2764 0032 7047     		bx	lr
 2765              		.cfi_endproc
 2766              	.LFE39:
 2768              		.section	.text.GPIODMATriggerDisable,"ax",%progbits
 2769              		.align	2
 2770              		.global	GPIODMATriggerDisable
 2771              		.thumb
 2772              		.thumb_func
 2774              	GPIODMATriggerDisable:
 2775              	.LFB40:
1973:C:/StellarisWare/driverlib\gpio.c **** 
1974:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1975:C:/StellarisWare/driverlib\gpio.c **** //
1976:C:/StellarisWare/driverlib\gpio.c **** //! Disables a GPIO pin as a trigger to start a DMA transaction.
1977:C:/StellarisWare/driverlib\gpio.c **** //!
1978:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
1979:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
1980:C:/StellarisWare/driverlib\gpio.c **** //!
1981:C:/StellarisWare/driverlib\gpio.c **** //! This function disables a GPIO pin from being used as a trigger to start a
1982:C:/StellarisWare/driverlib\gpio.c **** //! uDMA transaction.  This function can be used to disable this feature if it
1983:C:/StellarisWare/driverlib\gpio.c **** //! was enabled via a call to GPIODMATriggerEnable().
1984:C:/StellarisWare/driverlib\gpio.c **** //!
1985:C:/StellarisWare/driverlib\gpio.c **** //! \note This function is not available on all devices, consult the data sheet
1986:C:/StellarisWare/driverlib\gpio.c **** //! to ensure that the device you are using supports GPIO DMA Control.
1987:C:/StellarisWare/driverlib\gpio.c **** //!
1988:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
1989:C:/StellarisWare/driverlib\gpio.c **** //
1990:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
1991:C:/StellarisWare/driverlib\gpio.c **** void
1992:C:/StellarisWare/driverlib\gpio.c **** GPIODMATriggerDisable(unsigned long ulPort, unsigned char ucPins)
1993:C:/StellarisWare/driverlib\gpio.c **** {
 2776              		.loc 1 1993 0
 2777              		.cfi_startproc
 2778              		@ args = 0, pretend = 0, frame = 8
 2779              		@ frame_needed = 1, uses_anonymous_args = 0
 2780              		@ link register save eliminated.
 2781 0000 80B4     		push	{r7}
 2782              	.LCFI120:
 2783              		.cfi_def_cfa_offset 4
 2784              		.cfi_offset 7, -4
 2785 0002 83B0     		sub	sp, sp, #12
 2786              	.LCFI121:
 2787              		.cfi_def_cfa_offset 16
 2788 0004 00AF     		add	r7, sp, #0
 2789              	.LCFI122:
 2790              		.cfi_def_cfa_register 7
 2791 0006 7860     		str	r0, [r7, #4]
 2792 0008 0B46     		mov	r3, r1
 2793 000a FB70     		strb	r3, [r7, #3]
1994:C:/StellarisWare/driverlib\gpio.c ****     //
1995:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
1996:C:/StellarisWare/driverlib\gpio.c ****     //
1997:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
1998:C:/StellarisWare/driverlib\gpio.c **** 
1999:C:/StellarisWare/driverlib\gpio.c ****     //
2000:C:/StellarisWare/driverlib\gpio.c ****     // Set the pin as a DMA trigger.
2001:C:/StellarisWare/driverlib\gpio.c ****     //
2002:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_DMACTL) &= (~ucPins);
 2794              		.loc 1 2002 0
 2795 000c 7B68     		ldr	r3, [r7, #4]
 2796 000e 03F5A663 		add	r3, r3, #1328
 2797 0012 03F10403 		add	r3, r3, #4
 2798 0016 1A46     		mov	r2, r3
 2799 0018 7B68     		ldr	r3, [r7, #4]
 2800 001a 03F5A663 		add	r3, r3, #1328
 2801 001e 03F10403 		add	r3, r3, #4
 2802 0022 1968     		ldr	r1, [r3, #0]
 2803 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2804 0026 6FEA0303 		mvn	r3, r3
 2805 002a 0B40     		ands	r3, r3, r1
 2806 002c 1360     		str	r3, [r2, #0]
2003:C:/StellarisWare/driverlib\gpio.c **** }
 2807              		.loc 1 2003 0
 2808 002e 07F10C07 		add	r7, r7, #12
 2809 0032 BD46     		mov	sp, r7
 2810 0034 80BC     		pop	{r7}
 2811 0036 7047     		bx	lr
 2812              		.cfi_endproc
 2813              	.LFE40:
 2815              		.section	.text.GPIOADCTriggerEnable,"ax",%progbits
 2816              		.align	2
 2817              		.global	GPIOADCTriggerEnable
 2818              		.thumb
 2819              		.thumb_func
 2821              	GPIOADCTriggerEnable:
 2822              	.LFB41:
2004:C:/StellarisWare/driverlib\gpio.c **** 
2005:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
2006:C:/StellarisWare/driverlib\gpio.c **** //
2007:C:/StellarisWare/driverlib\gpio.c **** //! Enables a GPIO pin as a trigger to start an ADC capture.
2008:C:/StellarisWare/driverlib\gpio.c **** //!
2009:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
2010:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
2011:C:/StellarisWare/driverlib\gpio.c **** //!
2012:C:/StellarisWare/driverlib\gpio.c **** //! This function enables a GPIO pin to be used as a trigger to start an ADC
2013:C:/StellarisWare/driverlib\gpio.c **** //! sequence.  Any GPIO pin can be configured to be an external trigger for
2014:C:/StellarisWare/driverlib\gpio.c **** //! an ADC sequence.  The GPIO pin still generates interrupts if the
2015:C:/StellarisWare/driverlib\gpio.c **** //! interrupt is enabled for the selected pin. To enable the use of a GPIO pin
2016:C:/StellarisWare/driverlib\gpio.c **** //! to trigger the ADC module, the ADCSequenceConfigure() function must be called
2017:C:/StellarisWare/driverlib\gpio.c **** //! with the ADC_TRIGGER_EXTERNAL parameter.
2018:C:/StellarisWare/driverlib\gpio.c **** //!
2019:C:/StellarisWare/driverlib\gpio.c **** //! \note This function is not available on all devices, consult the data sheet
2020:C:/StellarisWare/driverlib\gpio.c **** //! to ensure that the device you are using supports GPIO ADC Control.
2021:C:/StellarisWare/driverlib\gpio.c **** //!
2022:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
2023:C:/StellarisWare/driverlib\gpio.c **** //
2024:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
2025:C:/StellarisWare/driverlib\gpio.c **** void
2026:C:/StellarisWare/driverlib\gpio.c **** GPIOADCTriggerEnable(unsigned long ulPort, unsigned char ucPins)
2027:C:/StellarisWare/driverlib\gpio.c **** {
 2823              		.loc 1 2027 0
 2824              		.cfi_startproc
 2825              		@ args = 0, pretend = 0, frame = 8
 2826              		@ frame_needed = 1, uses_anonymous_args = 0
 2827              		@ link register save eliminated.
 2828 0000 80B4     		push	{r7}
 2829              	.LCFI123:
 2830              		.cfi_def_cfa_offset 4
 2831              		.cfi_offset 7, -4
 2832 0002 83B0     		sub	sp, sp, #12
 2833              	.LCFI124:
 2834              		.cfi_def_cfa_offset 16
 2835 0004 00AF     		add	r7, sp, #0
 2836              	.LCFI125:
 2837              		.cfi_def_cfa_register 7
 2838 0006 7860     		str	r0, [r7, #4]
 2839 0008 0B46     		mov	r3, r1
 2840 000a FB70     		strb	r3, [r7, #3]
2028:C:/StellarisWare/driverlib\gpio.c ****     //
2029:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
2030:C:/StellarisWare/driverlib\gpio.c ****     //
2031:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
2032:C:/StellarisWare/driverlib\gpio.c **** 
2033:C:/StellarisWare/driverlib\gpio.c ****     //
2034:C:/StellarisWare/driverlib\gpio.c ****     // Set the pin as a DMA trigger.
2035:C:/StellarisWare/driverlib\gpio.c ****     //
2036:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_ADCCTL) |= ucPins;
 2841              		.loc 1 2036 0
 2842 000c 7B68     		ldr	r3, [r7, #4]
 2843 000e 03F5A663 		add	r3, r3, #1328
 2844 0012 7A68     		ldr	r2, [r7, #4]
 2845 0014 02F5A662 		add	r2, r2, #1328
 2846 0018 1168     		ldr	r1, [r2, #0]
 2847 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2848 001c 0A43     		orrs	r2, r2, r1
 2849 001e 1A60     		str	r2, [r3, #0]
2037:C:/StellarisWare/driverlib\gpio.c **** }
 2850              		.loc 1 2037 0
 2851 0020 07F10C07 		add	r7, r7, #12
 2852 0024 BD46     		mov	sp, r7
 2853 0026 80BC     		pop	{r7}
 2854 0028 7047     		bx	lr
 2855              		.cfi_endproc
 2856              	.LFE41:
 2858 002a 00BF     		.section	.text.GPIOADCTriggerDisable,"ax",%progbits
 2859              		.align	2
 2860              		.global	GPIOADCTriggerDisable
 2861              		.thumb
 2862              		.thumb_func
 2864              	GPIOADCTriggerDisable:
 2865              	.LFB42:
2038:C:/StellarisWare/driverlib\gpio.c **** 
2039:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
2040:C:/StellarisWare/driverlib\gpio.c **** //
2041:C:/StellarisWare/driverlib\gpio.c **** //! Disable a GPIO pin as a trigger to start an ADC capture.
2042:C:/StellarisWare/driverlib\gpio.c **** //!
2043:C:/StellarisWare/driverlib\gpio.c **** //! \param ulPort is the base address of the GPIO port.
2044:C:/StellarisWare/driverlib\gpio.c **** //! \param ucPins is the bit-packed representation of the pin(s).
2045:C:/StellarisWare/driverlib\gpio.c **** //!
2046:C:/StellarisWare/driverlib\gpio.c **** //! This function disables a GPIO pin to be used as a trigger to start an ADC
2047:C:/StellarisWare/driverlib\gpio.c **** //! sequence.  This function can be used to disable this feature if it was
2048:C:/StellarisWare/driverlib\gpio.c **** //! enabled via a call to GPIOADCTriggerEnable().
2049:C:/StellarisWare/driverlib\gpio.c **** //!
2050:C:/StellarisWare/driverlib\gpio.c **** //! \note This function is not available on all devices, consult the data sheet
2051:C:/StellarisWare/driverlib\gpio.c **** //! to ensure that the device you are using supports GPIO ADC Control.
2052:C:/StellarisWare/driverlib\gpio.c **** //!
2053:C:/StellarisWare/driverlib\gpio.c **** //! \return None.
2054:C:/StellarisWare/driverlib\gpio.c **** //
2055:C:/StellarisWare/driverlib\gpio.c **** //*****************************************************************************
2056:C:/StellarisWare/driverlib\gpio.c **** void
2057:C:/StellarisWare/driverlib\gpio.c **** GPIOADCTriggerDisable(unsigned long ulPort, unsigned char ucPins)
2058:C:/StellarisWare/driverlib\gpio.c **** {
 2866              		.loc 1 2058 0
 2867              		.cfi_startproc
 2868              		@ args = 0, pretend = 0, frame = 8
 2869              		@ frame_needed = 1, uses_anonymous_args = 0
 2870              		@ link register save eliminated.
 2871 0000 80B4     		push	{r7}
 2872              	.LCFI126:
 2873              		.cfi_def_cfa_offset 4
 2874              		.cfi_offset 7, -4
 2875 0002 83B0     		sub	sp, sp, #12
 2876              	.LCFI127:
 2877              		.cfi_def_cfa_offset 16
 2878 0004 00AF     		add	r7, sp, #0
 2879              	.LCFI128:
 2880              		.cfi_def_cfa_register 7
 2881 0006 7860     		str	r0, [r7, #4]
 2882 0008 0B46     		mov	r3, r1
 2883 000a FB70     		strb	r3, [r7, #3]
2059:C:/StellarisWare/driverlib\gpio.c ****     //
2060:C:/StellarisWare/driverlib\gpio.c ****     // Check the arguments.
2061:C:/StellarisWare/driverlib\gpio.c ****     //
2062:C:/StellarisWare/driverlib\gpio.c ****     ASSERT(GPIOBaseValid(ulPort));
2063:C:/StellarisWare/driverlib\gpio.c **** 
2064:C:/StellarisWare/driverlib\gpio.c ****     //
2065:C:/StellarisWare/driverlib\gpio.c ****     // Set the pin as a DMA trigger.
2066:C:/StellarisWare/driverlib\gpio.c ****     //
2067:C:/StellarisWare/driverlib\gpio.c ****     HWREG(ulPort + GPIO_O_ADCCTL) &= (~ucPins);
 2884              		.loc 1 2067 0
 2885 000c 7B68     		ldr	r3, [r7, #4]
 2886 000e 03F5A663 		add	r3, r3, #1328
 2887 0012 7A68     		ldr	r2, [r7, #4]
 2888 0014 02F5A662 		add	r2, r2, #1328
 2889 0018 1168     		ldr	r1, [r2, #0]
 2890 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2891 001c 6FEA0202 		mvn	r2, r2
 2892 0020 0A40     		ands	r2, r2, r1
 2893 0022 1A60     		str	r2, [r3, #0]
2068:C:/StellarisWare/driverlib\gpio.c **** }
 2894              		.loc 1 2068 0
 2895 0024 07F10C07 		add	r7, r7, #12
 2896 0028 BD46     		mov	sp, r7
 2897 002a 80BC     		pop	{r7}
 2898 002c 7047     		bx	lr
 2899              		.cfi_endproc
 2900              	.LFE42:
 2902 002e 00BF     		.text
 2903              	.Letext0:
 2904              		.file 2 "C:\\StellarisWare/inc/hw_types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:19     .rodata:00000000 $d
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:22     .rodata:00000000 g_pulGPIOBaseAddrs
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:54     .text.GPIOGetIntNumber:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:58     .text.GPIOGetIntNumber:00000000 GPIOGetIntNumber
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:324    .text.GPIODirModeSet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:329    .text.GPIODirModeSet:00000000 GPIODirModeSet
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:417    .text.GPIODirModeGet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:422    .text.GPIODirModeGet:00000000 GPIODirModeGet
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:489    .text.GPIOIntTypeSet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:494    .text.GPIOIntTypeSet:00000000 GPIOIntTypeSet
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:615    .text.GPIOIntTypeGet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:620    .text.GPIOIntTypeGet:00000000 GPIOIntTypeGet
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:709    .text.GPIOPadConfigSet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:714    .text.GPIOPadConfigSet:00000000 GPIOPadConfigSet
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1010   .text.GPIOPadConfigGet:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1015   .text.GPIOPadConfigGet:00000000 GPIOPadConfigGet
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1199   .text.GPIOPinIntEnable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1204   .text.GPIOPinIntEnable:00000000 GPIOPinIntEnable
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1242   .text.GPIOPinIntDisable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1247   .text.GPIOPinIntDisable:00000000 GPIOPinIntDisable
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1286   .text.GPIOPinIntStatus:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1291   .text.GPIOPinIntStatus:00000000 GPIOPinIntStatus
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1337   .text.GPIOPinIntClear:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1342   .text.GPIOPinIntClear:00000000 GPIOPinIntClear
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1377   .text.GPIOPortIntRegister:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1382   .text.GPIOPortIntRegister:00000000 GPIOPortIntRegister
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1421   .text.GPIOPortIntUnregister:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1426   .text.GPIOPortIntUnregister:00000000 GPIOPortIntUnregister
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1463   .text.GPIOPinRead:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1468   .text.GPIOPinRead:00000000 GPIOPinRead
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1505   .text.GPIOPinWrite:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1510   .text.GPIOPinWrite:00000000 GPIOPinWrite
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1549   .text.GPIOPinTypeADC:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1554   .text.GPIOPinTypeADC:00000000 GPIOPinTypeADC
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1595   .text.GPIOPinTypeCAN:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1600   .text.GPIOPinTypeCAN:00000000 GPIOPinTypeCAN
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1641   .text.GPIOPinTypeComparator:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1646   .text.GPIOPinTypeComparator:00000000 GPIOPinTypeComparator
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1687   .text.GPIOPinTypeEPI:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1692   .text.GPIOPinTypeEPI:00000000 GPIOPinTypeEPI
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1733   .text.GPIOPinTypeEthernetLED:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1738   .text.GPIOPinTypeEthernetLED:00000000 GPIOPinTypeEthernetLED
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1779   .text.GPIOPinTypeEthernetMII:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1784   .text.GPIOPinTypeEthernetMII:00000000 GPIOPinTypeEthernetMII
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1825   .text.GPIOPinTypeFan:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1830   .text.GPIOPinTypeFan:00000000 GPIOPinTypeFan
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1871   .text.GPIOPinTypeGPIOInput:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1876   .text.GPIOPinTypeGPIOInput:00000000 GPIOPinTypeGPIOInput
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1917   .text.GPIOPinTypeGPIOOutput:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1922   .text.GPIOPinTypeGPIOOutput:00000000 GPIOPinTypeGPIOOutput
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1963   .text.GPIOPinTypeGPIOOutputOD:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:1968   .text.GPIOPinTypeGPIOOutputOD:00000000 GPIOPinTypeGPIOOutputOD
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2009   .text.GPIOPinTypeI2C:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2014   .text.GPIOPinTypeI2C:00000000 GPIOPinTypeI2C
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2055   .text.GPIOPinTypeI2CSCL:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2060   .text.GPIOPinTypeI2CSCL:00000000 GPIOPinTypeI2CSCL
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2122   .text.GPIOPinTypeI2S:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2127   .text.GPIOPinTypeI2S:00000000 GPIOPinTypeI2S
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2168   .text.GPIOPinTypeLPC:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2173   .text.GPIOPinTypeLPC:00000000 GPIOPinTypeLPC
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2214   .text.GPIOPinTypePECIRx:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2219   .text.GPIOPinTypePECIRx:00000000 GPIOPinTypePECIRx
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2260   .text.GPIOPinTypePECITx:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2265   .text.GPIOPinTypePECITx:00000000 GPIOPinTypePECITx
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2306   .text.GPIOPinTypePWM:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2311   .text.GPIOPinTypePWM:00000000 GPIOPinTypePWM
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2352   .text.GPIOPinTypeQEI:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2357   .text.GPIOPinTypeQEI:00000000 GPIOPinTypeQEI
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2398   .text.GPIOPinTypeSSI:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2403   .text.GPIOPinTypeSSI:00000000 GPIOPinTypeSSI
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2444   .text.GPIOPinTypeTimer:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2449   .text.GPIOPinTypeTimer:00000000 GPIOPinTypeTimer
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2490   .text.GPIOPinTypeUART:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2495   .text.GPIOPinTypeUART:00000000 GPIOPinTypeUART
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2536   .text.GPIOPinTypeUSBAnalog:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2541   .text.GPIOPinTypeUSBAnalog:00000000 GPIOPinTypeUSBAnalog
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2582   .text.GPIOPinTypeUSBDigital:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2587   .text.GPIOPinTypeUSBDigital:00000000 GPIOPinTypeUSBDigital
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2628   .text.GPIOPinConfigure:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2633   .text.GPIOPinConfigure:00000000 GPIOPinConfigure
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2723   .text.GPIODMATriggerEnable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2728   .text.GPIODMATriggerEnable:00000000 GPIODMATriggerEnable
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2769   .text.GPIODMATriggerDisable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2774   .text.GPIODMATriggerDisable:00000000 GPIODMATriggerDisable
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2816   .text.GPIOADCTriggerEnable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2821   .text.GPIOADCTriggerEnable:00000000 GPIOADCTriggerEnable
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2859   .text.GPIOADCTriggerDisable:00000000 $t
C:\Users\Sarthak\AppData\Local\Temp\ccK3ntCe.s:2864   .text.GPIOADCTriggerDisable:00000000 GPIOADCTriggerDisable
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
IntRegister
IntEnable
IntDisable
IntUnregister
